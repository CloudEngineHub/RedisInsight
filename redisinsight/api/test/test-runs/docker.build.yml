# Base compose file that includes all BE, RTE builds
version: '3.4'

x-constants:
  - &apiRoot ./../../

services:
  test:
    cap_add:
      - ipc_lock
    build:
      context: *apiRoot
      dockerfile: ./test/test-runs/test.Dockerfile
    tty: true
    volumes:
      - /home/runner/work/RedisInsight/RedisInsight/redisinsight/api/test/test-runs/coverage:/data
      # - ${COV_FOLDER}:/data
    depends_on:
      - redis
      - app
    environment:
      RI_REDIS_CLIENTS_FORCE_STRATEGY: ${RI_REDIS_CLIENTS_FORCE_STRATEGY}
      CERTS_FOLDER: '/root/.redisinsight-v2.0'
      TEST_REDIS_HOST: 'redis'
      RI_DB_SYNC: 'true'
      TEST_BE_SERVER: ${TEST_BE_SERVER}
      TEST_LOCAL_DB_FILE_PATH: '/data/redisinsight.db'
      RI_SECRET_STORAGE_PASSWORD: 'somepassword'
      TEST_BASE_DIR: ${BASEDIR}

  app:
    cap_add:
      - ipc_lock
    image: ${APP_IMAGE}
    depends_on:
      - redis
    volumes:
      # - ${COV_FOLDER}:/root/.redisinsight-v2.0
      # - ${BASEDIR}/coverage:/data
      - /home/runner/work/RedisInsight/RedisInsight/redisinsight/api/test/test-runs/coverage:/data
      # - ${COV_FOLDER}:/data
    environment:
      RI_REDIS_CLIENTS_FORCE_STRATEGY: ${RI_REDIS_CLIENTS_FORCE_STRATEGY}
      CERTS_FOLDER: '/root/.redisinsight-v2.0'
      RI_DB_SYNC: 'true'
      RI_DB_MIGRATIONS: 'false'
      RI_APP_FOLDER_NAME: '.redisinsight-v2.0'
      RI_SECRET_STORAGE_PASSWORD: 'somepassword'
      RI_NOTIFICATION_UPDATE_URL: 'https://s3.amazonaws.com/redisinsight.test/public/tests/notifications.json'
      RI_FEATURES_CONFIG_URL: 'http://test:5551/remote/features-config.json'

  debug:
    image: docker:latest
    depends_on:
      - app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Allow access to Docker CLI
      - /home/runner/work/RedisInsight/RedisInsight/redisinsight/api/test/test-runs/coverage:/data
      # - ${COV_FOLDER}:/data
    entrypoint: >
      sh -c '
      echo "Debug container in the house!";
      docker ps -a;
      docker ps -a | grep "app" | awk "{print \$1}";
        docker logs $(docker ps -a | grep "app" | awk "{print \$1}") > /data/app.log 2>&1;'

networks:
  default:
    name: ${ID}
