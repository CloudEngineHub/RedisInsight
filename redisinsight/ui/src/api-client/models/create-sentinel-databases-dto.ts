/* tslint:disable */
/* eslint-disable */
/**
 * Redis Insight Backend API
 * Redis Insight Backend API
 *
 * The version of the OpenAPI document: 2.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { CloudDatabaseDetails } from './cloud-database-details';
// May contain unused imports in some cases
// @ts-ignore
import type { CreateDatabaseDtoCaCert } from './create-database-dto-ca-cert';
// May contain unused imports in some cases
// @ts-ignore
import type { CreateDatabaseDtoClientCert } from './create-database-dto-client-cert';
// May contain unused imports in some cases
// @ts-ignore
import type { CreateDatabaseDtoSshOptions } from './create-database-dto-ssh-options';
// May contain unused imports in some cases
// @ts-ignore
import type { CreateSentinelDatabaseDto } from './create-sentinel-database-dto';
// May contain unused imports in some cases
// @ts-ignore
import type { CreateTagDto } from './create-tag-dto';
// May contain unused imports in some cases
// @ts-ignore
import type { SentinelMaster } from './sentinel-master';

/**
 * 
 * @export
 * @interface CreateSentinelDatabasesDto
 */
export interface CreateSentinelDatabasesDto {
    /**
     * The hostname of your Redis database, for example redis.acme.com. If your Redis server is running on your local machine, you can enter either 127.0.0.1 or localhost.
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'host': string;
    /**
     * The port your Redis database is available on.
     * @type {number}
     * @memberof CreateSentinelDatabasesDto
     */
    'port': number;
    /**
     * Logical database number.
     * @type {number}
     * @memberof CreateSentinelDatabasesDto
     */
    'db'?: number;
    /**
     * Database username, if your database is ACL enabled, otherwise leave this field empty.
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'username'?: string;
    /**
     * The password, if any, for your Redis database. If your database doesnâ€™t require a password, leave this field empty.
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'password'?: string;
    /**
     * Connection timeout
     * @type {number}
     * @memberof CreateSentinelDatabasesDto
     */
    'timeout'?: number;
    /**
     * The database name from provider
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'nameFromProvider'?: string;
    /**
     * The redis database hosting provider
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'provider'?: string;
    /**
     * Redis OSS Sentinel master group.
     * @type {SentinelMaster}
     * @memberof CreateSentinelDatabasesDto
     */
    'sentinelMaster'?: SentinelMaster;
    /**
     * Use TLS to connect.
     * @type {boolean}
     * @memberof CreateSentinelDatabasesDto
     */
    'tls'?: boolean;
    /**
     * SNI servername
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'tlsServername'?: string;
    /**
     * The certificate returned by the server needs to be verified.
     * @type {boolean}
     * @memberof CreateSentinelDatabasesDto
     */
    'verifyServerCert'?: boolean;
    /**
     * Use SSH tunnel to connect.
     * @type {boolean}
     * @memberof CreateSentinelDatabasesDto
     */
    'ssh'?: boolean;
    /**
     * Cloud details
     * @type {CloudDatabaseDetails}
     * @memberof CreateSentinelDatabasesDto
     */
    'cloudDetails'?: CloudDatabaseDetails;
    /**
     * Database compressor
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'compressor'?: CreateSentinelDatabasesDtoCompressorEnum;
    /**
     * Key name format
     * @type {string}
     * @memberof CreateSentinelDatabasesDto
     */
    'keyNameFormat'?: CreateSentinelDatabasesDtoKeyNameFormatEnum;
    /**
     * Force client connection as standalone
     * @type {boolean}
     * @memberof CreateSentinelDatabasesDto
     */
    'forceStandalone'?: boolean;
    /**
     * 
     * @type {CreateDatabaseDtoCaCert}
     * @memberof CreateSentinelDatabasesDto
     */
    'caCert'?: CreateDatabaseDtoCaCert;
    /**
     * 
     * @type {CreateDatabaseDtoClientCert}
     * @memberof CreateSentinelDatabasesDto
     */
    'clientCert'?: CreateDatabaseDtoClientCert;
    /**
     * 
     * @type {CreateDatabaseDtoSshOptions}
     * @memberof CreateSentinelDatabasesDto
     */
    'sshOptions'?: CreateDatabaseDtoSshOptions;
    /**
     * Tags associated with the database.
     * @type {Array<CreateTagDto>}
     * @memberof CreateSentinelDatabasesDto
     */
    'tags'?: Array<CreateTagDto>;
    /**
     * The Sentinel master group list.
     * @type {Array<CreateSentinelDatabaseDto>}
     * @memberof CreateSentinelDatabasesDto
     */
    'masters': Array<CreateSentinelDatabaseDto>;
}

export const CreateSentinelDatabasesDtoCompressorEnum = {
    None: 'NONE',
    Gzip: 'GZIP',
    Zstd: 'ZSTD',
    Lz4: 'LZ4',
    Snappy: 'SNAPPY',
    Brotli: 'Brotli',
    PhpgzCompress: 'PHPGZCompress'
} as const;

export type CreateSentinelDatabasesDtoCompressorEnum = typeof CreateSentinelDatabasesDtoCompressorEnum[keyof typeof CreateSentinelDatabasesDtoCompressorEnum];
export const CreateSentinelDatabasesDtoKeyNameFormatEnum = {
    Unicode: 'Unicode',
    Hex: 'HEX'
} as const;

export type CreateSentinelDatabasesDtoKeyNameFormatEnum = typeof CreateSentinelDatabasesDtoKeyNameFormatEnum[keyof typeof CreateSentinelDatabasesDtoKeyNameFormatEnum];


