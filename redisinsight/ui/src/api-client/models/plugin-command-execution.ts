/* tslint:disable */
/* eslint-disable */
/**
 * Redis Insight Backend API
 * Redis Insight Backend API
 *
 * The version of the OpenAPI document: 2.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { CommandExecutionResult } from './command-execution-result';
// May contain unused imports in some cases
// @ts-ignore
import type { ResultsSummary } from './results-summary';

/**
 * 
 * @export
 * @interface PluginCommandExecution
 */
export interface PluginCommandExecution {
    /**
     * Database id
     * @type {string}
     * @memberof PluginCommandExecution
     */
    'databaseId'?: string;
    /**
     * Redis command
     * @type {string}
     * @memberof PluginCommandExecution
     */
    'command'?: string;
    /**
     * Workbench mode
     * @type {string}
     * @memberof PluginCommandExecution
     */
    'mode'?: PluginCommandExecutionModeEnum;
    /**
     * Workbench result mode
     * @type {string}
     * @memberof PluginCommandExecution
     */
    'resultsMode'?: PluginCommandExecutionResultsModeEnum;
    /**
     * Workbench executions summary
     * @type {ResultsSummary}
     * @memberof PluginCommandExecution
     */
    'summary'?: ResultsSummary;
    /**
     * Command execution result
     * @type {Array<CommandExecutionResult>}
     * @memberof PluginCommandExecution
     */
    'result'?: Array<CommandExecutionResult>;
    /**
     * Result did not stored in db
     * @type {boolean}
     * @memberof PluginCommandExecution
     */
    'isNotStored'?: boolean;
    /**
     * Workbench command execution time
     * @type {number}
     * @memberof PluginCommandExecution
     */
    'executionTime'?: number;
    /**
     * Logical database number.
     * @type {number}
     * @memberof PluginCommandExecution
     */
    'db'?: number;
    /**
     * Command execution type. Used to distinguish between search and workbench
     * @type {string}
     * @memberof PluginCommandExecution
     */
    'type'?: PluginCommandExecutionTypeEnum;
}

export const PluginCommandExecutionModeEnum = {
    Raw: 'RAW',
    Ascii: 'ASCII'
} as const;

export type PluginCommandExecutionModeEnum = typeof PluginCommandExecutionModeEnum[keyof typeof PluginCommandExecutionModeEnum];
export const PluginCommandExecutionResultsModeEnum = {
    Default: 'DEFAULT',
    GroupMode: 'GROUP_MODE',
    Silent: 'SILENT'
} as const;

export type PluginCommandExecutionResultsModeEnum = typeof PluginCommandExecutionResultsModeEnum[keyof typeof PluginCommandExecutionResultsModeEnum];
export const PluginCommandExecutionTypeEnum = {
    Workbench: 'WORKBENCH',
    Search: 'SEARCH'
} as const;

export type PluginCommandExecutionTypeEnum = typeof PluginCommandExecutionTypeEnum[keyof typeof PluginCommandExecutionTypeEnum];


