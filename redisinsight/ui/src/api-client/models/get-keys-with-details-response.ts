/* tslint:disable */
/* eslint-disable */
/**
 * Redis Insight Backend API
 * Redis Insight Backend API
 *
 * The version of the OpenAPI document: 2.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { GetKeyInfoResponse } from './get-key-info-response';

/**
 * 
 * @export
 * @interface GetKeysWithDetailsResponse
 */
export interface GetKeysWithDetailsResponse {
    /**
     * The new cursor to use in the next call. If the property has value of 0, then the iteration is completed.
     * @type {number}
     * @memberof GetKeysWithDetailsResponse
     */
    'cursor': number;
    /**
     * The number of keys in the currently-selected database.
     * @type {number}
     * @memberof GetKeysWithDetailsResponse
     */
    'total': number;
    /**
     * The number of keys we tried to scan. Be aware that scanned is sum of COUNT parameters from redis commands
     * @type {number}
     * @memberof GetKeysWithDetailsResponse
     */
    'scanned': number;
    /**
     * Array of Keys.
     * @type {Array<GetKeyInfoResponse>}
     * @memberof GetKeysWithDetailsResponse
     */
    'keys': Array<GetKeyInfoResponse>;
    /**
     * Node host. In case when we are working with cluster
     * @type {string}
     * @memberof GetKeysWithDetailsResponse
     */
    'host'?: string;
    /**
     * Node port. In case when we are working with cluster
     * @type {number}
     * @memberof GetKeysWithDetailsResponse
     */
    'port'?: number;
    /**
     * The maximum number of results. For RediSearch this number is a value from \"FT.CONFIG GET maxsearchresults\" command.
     * @type {number}
     * @memberof GetKeysWithDetailsResponse
     */
    'maxResults'?: number;
}

