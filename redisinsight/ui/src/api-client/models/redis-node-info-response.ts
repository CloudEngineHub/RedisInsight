/* tslint:disable */
/* eslint-disable */
/**
 * Redis Insight Backend API
 * Redis Insight Backend API
 *
 * The version of the OpenAPI document: 2.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { RedisDatabaseStatsDto } from './redis-database-stats-dto';

/**
 * 
 * @export
 * @interface RedisNodeInfoResponse
 */
export interface RedisNodeInfoResponse {
    /**
     * Redis database version
     * @type {string}
     * @memberof RedisNodeInfoResponse
     */
    'version': string;
    /**
     * Value is \"master\" if the instance is replica of no one, or \"slave\" if the instance is a replica of some master instance
     * @type {string}
     * @memberof RedisNodeInfoResponse
     */
    'role'?: RedisNodeInfoResponseRoleEnum;
    /**
     * Redis database info from server section
     * @type {object}
     * @memberof RedisNodeInfoResponse
     */
    'server'?: object;
    /**
     * Various Redis stats
     * @type {RedisDatabaseStatsDto}
     * @memberof RedisNodeInfoResponse
     */
    'stats'?: RedisDatabaseStatsDto;
    /**
     * The number of Redis databases
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'databases'?: number;
    /**
     * Total number of bytes allocated by Redis using
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'usedMemory'?: number;
    /**
     * Total number of keys inside Redis database
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'totalKeys'?: number;
    /**
     * Number of client connections (excluding connections from replicas)
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'connectedClients'?: number;
    /**
     * Number of seconds since Redis server start
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'uptimeInSeconds'?: number;
    /**
     * The cache hit ratio represents the efficiency of cache usage
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'hitRatio'?: number;
    /**
     * The number of the cached lua scripts
     * @type {number}
     * @memberof RedisNodeInfoResponse
     */
    'cashedScripts'?: number;
}

export const RedisNodeInfoResponseRoleEnum = {
    Master: 'master',
    Slave: 'slave'
} as const;

export type RedisNodeInfoResponseRoleEnum = typeof RedisNodeInfoResponseRoleEnum[keyof typeof RedisNodeInfoResponseRoleEnum];


