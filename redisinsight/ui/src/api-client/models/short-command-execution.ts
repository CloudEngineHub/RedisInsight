/* tslint:disable */
/* eslint-disable */
/**
 * Redis Insight Backend API
 * Redis Insight Backend API
 *
 * The version of the OpenAPI document: 2.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ResultsSummary } from './results-summary';

/**
 * 
 * @export
 * @interface ShortCommandExecution
 */
export interface ShortCommandExecution {
    /**
     * Command execution id
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'id'?: string;
    /**
     * Database id
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'databaseId'?: string;
    /**
     * Redis command
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'command'?: string;
    /**
     * Workbench mode
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'mode'?: ShortCommandExecutionModeEnum;
    /**
     * Workbench result mode
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'resultsMode'?: ShortCommandExecutionResultsModeEnum;
    /**
     * Workbench executions summary
     * @type {ResultsSummary}
     * @memberof ShortCommandExecution
     */
    'summary'?: ResultsSummary;
    /**
     * Result did not stored in db
     * @type {boolean}
     * @memberof ShortCommandExecution
     */
    'isNotStored'?: boolean;
    /**
     * Date of command execution
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'createdAt'?: string;
    /**
     * Workbench command execution time
     * @type {number}
     * @memberof ShortCommandExecution
     */
    'executionTime'?: number;
    /**
     * Logical database number.
     * @type {number}
     * @memberof ShortCommandExecution
     */
    'db'?: number;
    /**
     * Command execution type. Used to distinguish between search and workbench
     * @type {string}
     * @memberof ShortCommandExecution
     */
    'type'?: ShortCommandExecutionTypeEnum;
}

export const ShortCommandExecutionModeEnum = {
    Raw: 'RAW',
    Ascii: 'ASCII'
} as const;

export type ShortCommandExecutionModeEnum = typeof ShortCommandExecutionModeEnum[keyof typeof ShortCommandExecutionModeEnum];
export const ShortCommandExecutionResultsModeEnum = {
    Default: 'DEFAULT',
    GroupMode: 'GROUP_MODE',
    Silent: 'SILENT'
} as const;

export type ShortCommandExecutionResultsModeEnum = typeof ShortCommandExecutionResultsModeEnum[keyof typeof ShortCommandExecutionResultsModeEnum];
export const ShortCommandExecutionTypeEnum = {
    Workbench: 'WORKBENCH',
    Search: 'SEARCH'
} as const;

export type ShortCommandExecutionTypeEnum = typeof ShortCommandExecutionTypeEnum[keyof typeof ShortCommandExecutionTypeEnum];


