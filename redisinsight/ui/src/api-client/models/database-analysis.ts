/* tslint:disable */
/* eslint-disable */
/**
 * Redis Insight Backend API
 * Redis Insight Backend API
 *
 * The version of the OpenAPI document: 2.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { AnalysisProgress } from './analysis-progress';
// May contain unused imports in some cases
// @ts-ignore
import type { Key } from './key';
// May contain unused imports in some cases
// @ts-ignore
import type { NspSummary } from './nsp-summary';
// May contain unused imports in some cases
// @ts-ignore
import type { Recommendation } from './recommendation';
// May contain unused imports in some cases
// @ts-ignore
import type { ScanFilter } from './scan-filter';
// May contain unused imports in some cases
// @ts-ignore
import type { SimpleSummary } from './simple-summary';
// May contain unused imports in some cases
// @ts-ignore
import type { SumGroup } from './sum-group';

/**
 * 
 * @export
 * @interface DatabaseAnalysis
 */
export interface DatabaseAnalysis {
    /**
     * Analysis id
     * @type {string}
     * @memberof DatabaseAnalysis
     */
    'id': string;
    /**
     * Database id
     * @type {string}
     * @memberof DatabaseAnalysis
     */
    'databaseId': string;
    /**
     * Filters for scan operation
     * @type {ScanFilter}
     * @memberof DatabaseAnalysis
     */
    'filter': ScanFilter;
    /**
     * Namespace delimiter
     * @type {string}
     * @memberof DatabaseAnalysis
     */
    'delimiter': string;
    /**
     * Analysis progress
     * @type {AnalysisProgress}
     * @memberof DatabaseAnalysis
     */
    'progress': AnalysisProgress;
    /**
     * Analysis created date (ISO string)
     * @type {string}
     * @memberof DatabaseAnalysis
     */
    'createdAt': string;
    /**
     * Total keys with details by types
     * @type {SimpleSummary}
     * @memberof DatabaseAnalysis
     */
    'totalKeys': SimpleSummary;
    /**
     * Total memory with details by types
     * @type {SimpleSummary}
     * @memberof DatabaseAnalysis
     */
    'totalMemory': SimpleSummary;
    /**
     * Top namespaces by keys number
     * @type {Array<NspSummary>}
     * @memberof DatabaseAnalysis
     */
    'topKeysNsp': Array<NspSummary>;
    /**
     * Top namespaces by memory
     * @type {Array<NspSummary>}
     * @memberof DatabaseAnalysis
     */
    'topMemoryNsp': Array<NspSummary>;
    /**
     * Top keys by key length (string length, list elements count, etc.)
     * @type {Array<Key>}
     * @memberof DatabaseAnalysis
     */
    'topKeysLength': Array<Key>;
    /**
     * Top keys by memory used
     * @type {Array<Key>}
     * @memberof DatabaseAnalysis
     */
    'topKeysMemory': Array<Key>;
    /**
     * Expiration groups
     * @type {Array<SumGroup>}
     * @memberof DatabaseAnalysis
     */
    'expirationGroups': Array<SumGroup>;
    /**
     * Recommendations
     * @type {Array<Recommendation>}
     * @memberof DatabaseAnalysis
     */
    'recommendations': Array<Recommendation>;
    /**
     * Logical database number.
     * @type {number}
     * @memberof DatabaseAnalysis
     */
    'db'?: number;
}

