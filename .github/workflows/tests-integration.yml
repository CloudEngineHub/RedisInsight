name: Integration tests
on:
  workflow_call:
    inputs:
      build:
        description: Backend build to run tests over
        type: string
        default: 'local'
      redis_client:
        description: Library to use for redis connection
        type: string
        default: 'ioredis'
      report:
        description: Send report for test run to slack
        type: boolean
        default: false
      short_rte_list:
        description: Use short rte list
        type: boolean
        default: false
      debug:
        description: SSH Debug
        type: boolean
        default: false

env:
  SLACK_AUDIT_REPORT_KEY: ${{ secrets.SLACK_AUDIT_REPORT_KEY }}
  SLACK_AUDIT_REPORT_CHANNEL: ${{ secrets.SLACK_AUDIT_REPORT_CHANNEL }}

jobs:
  run-cluster:
    name: Run Simplified Cluster
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Release Directory Exists
        run: mkdir -p ./release

      - name: Restore Docker Image from Cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ./release/docker/docker-linux-alpine.amd64.tar
          key: docker-image-${{ github.ref_name }}-v9

      - name: Check we have everything needed
        run: |
          ls -la ./release
          ls -la ./release/docker

      - name: Load built docker image from workspace
        if: inputs.build == 'docker'
        run: |
          docker image load -i ./release/docker/docker-linux-alpine.amd64.tar

      - name: Start the cluster
        run: docker compose -f ./redisinsight/api/test/test-runs/test-compose.yml up -d

      - name: Verify containers are running
        run: docker ps

      - name: Check logs
        run: |
          docker logs test-runs-app-1
          docker logs test-runs-test-1

      - name: Extract Docker Logs
        run: |
          mkdir -p docker-logs
          docker ps --format "{{.Names}}" | while read -r container; do
            docker logs "$container" > "docker-logs/${container}.log" 2>&1
          done

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs-${{ github.sha }}-${{ github.run_id }}
          path: docker-logs/

      - name: Clean up
        if: always()
        run: docker compose -f ./redisinsight/api/test/test-runs/test-compose.yml down -v
