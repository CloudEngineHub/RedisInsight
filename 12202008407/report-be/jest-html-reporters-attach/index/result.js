window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":266,"numPassedTests":2653,"numPendingTestSuites":2,"numPendingTests":22,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":268,"numTotalTests":2675,"startTime":1733501119672,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":38,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501138114,"runtime":18398,"slow":true,"start":1733501119716},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/rejson-rl/rejson-rl.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["JsonService","getJson","full json download"],"duration":46,"failureMessages":[],"fullName":"JsonService getJson full json download should throw BadRequest error when no key found in the database","status":"passed","title":"should throw BadRequest error when no key found in the database"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":4,"failureMessages":[],"fullName":"JsonService getJson full json download should throw BadRequest error when incorrect type of a key","status":"passed","title":"should throw BadRequest error when incorrect type of a key"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":4,"failureMessages":[],"fullName":"JsonService getJson full json download should throw BadRequest when try to force get not existing path/key","status":"passed","title":"should throw BadRequest when try to force get not existing path/key"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":10,"failureMessages":[],"fullName":"JsonService getJson full json download should throw BadRequest error when module not loaded for getJson","status":"passed","title":"should throw BadRequest error when module not loaded for getJson"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":5,"failureMessages":[],"fullName":"JsonService getJson full json download should throw InternalError when some unexpected error happened","status":"passed","title":"should throw InternalError when some unexpected error happened"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (string)","status":"passed","title":"should return data (string)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (number)","status":"passed","title":"should return data (number)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (integer)","status":"passed","title":"should return data (integer)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":3,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (boolean)","status":"passed","title":"should return data (boolean)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (null)","status":"passed","title":"should return data (null)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (array)","status":"passed","title":"should return data (array)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return data (object)","status":"passed","title":"should return data (object)"},{"ancestorTitles":["JsonService","getJson","full json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson full json download should return full json data when forceRetrieve is true","status":"passed","title":"should return full json data when forceRetrieve is true"},{"ancestorTitles":["JsonService","getJson","user has no PERM for JSON.DEBUG"],"duration":3,"failureMessages":[],"fullName":"JsonService getJson user has no PERM for JSON.DEBUG should return data (string)","status":"passed","title":"should return data (string)"},{"ancestorTitles":["JsonService","getJson","user has no PERM for JSON.DEBUG"],"duration":4,"failureMessages":[],"fullName":"JsonService getJson user has no PERM for JSON.DEBUG should return full json value even if size is above the limit","status":"passed","title":"should return full json value even if size is above the limit"},{"ancestorTitles":["JsonService","getJson","partial json download"],"duration":2,"failureMessages":[],"fullName":"JsonService getJson partial json download should return full string value even if size is above the limit","status":"passed","title":"should return full string value even if size is above the limit"},{"ancestorTitles":["JsonService","getJson","partial json download"],"duration":15,"failureMessages":[],"fullName":"JsonService getJson partial json download should return array with scalar values and safe struct types descriptions","status":"passed","title":"should return array with scalar values and safe struct types descriptions"},{"ancestorTitles":["JsonService","getJson","partial json download"],"duration":3,"failureMessages":[],"fullName":"JsonService getJson partial json download should return array with scalar values in a custom path","status":"passed","title":"should return array with scalar values in a custom path"},{"ancestorTitles":["JsonService","getJson","partial json download"],"duration":11,"failureMessages":[],"fullName":"JsonService getJson partial json download should return object with scalar values and safe struct types descriptions","status":"passed","title":"should return object with scalar values and safe struct types descriptions"},{"ancestorTitles":["JsonService","getJson","partial json download"],"duration":4,"failureMessages":[],"fullName":"JsonService getJson partial json download should return object with scalar values in a custom path","status":"passed","title":"should return object with scalar values in a custom path"},{"ancestorTitles":["JsonService","create"],"duration":2,"failureMessages":[],"fullName":"JsonService create should throw Conflict error when key is already in the database","status":"passed","title":"should throw Conflict error when key is already in the database"},{"ancestorTitles":["JsonService","create"],"duration":8,"failureMessages":[],"fullName":"JsonService create should throw Forbidden error when no perms for an action for create","status":"passed","title":"should throw Forbidden error when no perms for an action for create"},{"ancestorTitles":["JsonService","create"],"duration":3,"failureMessages":[],"fullName":"JsonService create should throw BadRequest error when module not loaded for create","status":"passed","title":"should throw BadRequest error when module not loaded for create"},{"ancestorTitles":["JsonService","create"],"duration":5,"failureMessages":[],"fullName":"JsonService create should silently handle key expire error and log it","status":"passed","title":"should silently handle key expire error and log it"},{"ancestorTitles":["JsonService","create"],"duration":2,"failureMessages":[],"fullName":"JsonService create should successful create key","status":"passed","title":"should successful create key"},{"ancestorTitles":["JsonService","jsonSet"],"duration":3,"failureMessages":[],"fullName":"JsonService jsonSet should throw NotFound error when key does not exists for jsonSet","status":"passed","title":"should throw NotFound error when key does not exists for jsonSet"},{"ancestorTitles":["JsonService","jsonSet"],"duration":2,"failureMessages":[],"fullName":"JsonService jsonSet should throw BadRequest error when module not loaded for jsonSet","status":"passed","title":"should throw BadRequest error when module not loaded for jsonSet"},{"ancestorTitles":["JsonService","jsonSet"],"duration":2,"failureMessages":[],"fullName":"JsonService jsonSet should throw NotFound error when try to set to the incorrect path","status":"passed","title":"should throw NotFound error when try to set to the incorrect path"},{"ancestorTitles":["JsonService","jsonSet"],"duration":2,"failureMessages":[],"fullName":"JsonService jsonSet should throw Forbidden error when no perms for an action for jsonSet","status":"passed","title":"should throw Forbidden error when no perms for an action for jsonSet"},{"ancestorTitles":["JsonService","jsonSet"],"duration":3,"failureMessages":[],"fullName":"JsonService jsonSet should successful modify data","status":"passed","title":"should successful modify data"},{"ancestorTitles":["JsonService","arrAppend"],"duration":3,"failureMessages":[],"fullName":"JsonService arrAppend should throw NotFound error when key does not exists","status":"passed","title":"should throw NotFound error when key does not exists"},{"ancestorTitles":["JsonService","arrAppend"],"duration":2,"failureMessages":[],"fullName":"JsonService arrAppend should throw BadRequest error when module not loaded","status":"passed","title":"should throw BadRequest error when module not loaded"},{"ancestorTitles":["JsonService","arrAppend"],"duration":2,"failureMessages":[],"fullName":"JsonService arrAppend should throw Forbidden error when no perms for an action","status":"passed","title":"should throw Forbidden error when no perms for an action"},{"ancestorTitles":["JsonService","arrAppend"],"duration":1,"failureMessages":[],"fullName":"JsonService arrAppend should successful modify data","status":"passed","title":"should successful modify data"},{"ancestorTitles":["JsonService","remove"],"duration":2,"failureMessages":[],"fullName":"JsonService remove should throw NotFound error when key does not exists","status":"passed","title":"should throw NotFound error when key does not exists"},{"ancestorTitles":["JsonService","remove"],"duration":6,"failureMessages":[],"fullName":"JsonService remove should throw BadRequest error when module not loaded","status":"passed","title":"should throw BadRequest error when module not loaded"},{"ancestorTitles":["JsonService","remove"],"duration":2,"failureMessages":[],"fullName":"JsonService remove should throw Forbidden error when no perms for an action","status":"passed","title":"should throw Forbidden error when no perms for an action"},{"ancestorTitles":["JsonService","remove"],"duration":1,"failureMessages":[],"fullName":"JsonService remove should successful remove path","status":"passed","title":"should successful remove path"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":20,"numTodoTests":0,"perfStats":{"end":1733501138984,"runtime":692,"slow":false,"start":1733501138292},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/scanner/strategies/cluster.scanner.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should return appropriate value with filter by type","status":"pending","title":"should return appropriate value with filter by type"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should work with custom cursor","status":"pending","title":"should work with custom cursor"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should skip nodes with negative cursors custom cursor","status":"pending","title":"should skip nodes with negative cursors custom cursor"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should call scan 3,2,1 times per nodes and return appropriate value","status":"pending","title":"should call scan 3,2,1 times per nodes and return appropriate value"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":25,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should call scan 3,2,N times per nodes until threshold exceeds","status":"passed","title":"should call scan 3,2,N times per nodes until threshold exceeds"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should not call scan when total is 0","status":"pending","title":"should not call scan when total is 0"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should throw error if incorrect cursor passed","status":"pending","title":"should throw error if incorrect cursor passed"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys should throw error on scan command","status":"pending","title":"should throw error on scan command"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","get keys by glob patter"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys get keys by glob patter should call scan when math contains '?' glob","status":"pending","title":"should call scan when math contains '?' glob"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","get keys by glob patter"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys get keys by glob patter should call scan when math contains '*' glob","status":"pending","title":"should call scan when math contains '*' glob"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","get keys by glob patter"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys get keys by glob patter should call scan when math contains '[ae]' glob","status":"pending","title":"should call scan when math contains '[ae]' glob"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","get keys by glob patter"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys get keys by glob patter should call scan when math contains '[a-e]' glob","status":"pending","title":"should call scan when math contains '[a-e]' glob"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","get keys by glob patter"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys get keys by glob patter should call scan when math contains '[^e]' glob","status":"pending","title":"should call scan when math contains '[^e]' glob"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","get keys by glob patter"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys get keys by glob patter should not call scan when math contains escaped glob","status":"pending","title":"should not call scan when math contains escaped glob"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","find exact key"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys find exact key should find exact key when match is not glob patter","status":"pending","title":"should find exact key when match is not glob patter"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","find exact key"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys find exact key should find exact key when match is escaped glob patter","status":"pending","title":"should find exact key when match is escaped glob patter"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","find exact key"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys find exact key should find exact key with correct type","status":"pending","title":"should find exact key with correct type"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","find exact key"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys find exact key should return empty array if key not exist","status":"pending","title":"should return empty array if key not exist"},{"ancestorTitles":["Cluster Scanner Strategy","getKeys","find exact key"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeys find exact key should return empty array if key has wrong type","status":"pending","title":"should return empty array if key has wrong type"},{"ancestorTitles":["Cluster Scanner Strategy","getKeysInfo"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeysInfo should return correct keys info (cluster)","status":"pending","title":"should return correct keys info (cluster)"},{"ancestorTitles":["Cluster Scanner Strategy","getKeysInfo"],"duration":null,"failureMessages":[],"fullName":"Cluster Scanner Strategy getKeysInfo should not call TYPE pipeline for keys with known type","status":"pending","title":"should not call TYPE pipeline for keys with known type"}]},{"numFailingTests":0,"numPassingTests":60,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501140728,"runtime":1545,"slow":false,"start":1733501139183},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/redis.client.storage.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisClientStorage","syncClients"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage syncClients should not remove any client since no idle time passed","status":"passed","title":"should not remove any client since no idle time passed"},{"ancestorTitles":["RedisClientStorage","syncClients"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage syncClients should remove client with exceeded time in idle","status":"passed","title":"should remove client with exceeded time in idle"},{"ancestorTitles":["RedisClientStorage","syncClients"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage syncClients should remove client with exceeded time in idle and not fail in case of error","status":"passed","title":"should remove client with exceeded time in idle and not fail in case of error"},{"ancestorTitles":["RedisClientStorage","get"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage get should correctly get client instance and update last used time","status":"passed","title":"should correctly get client instance and update last used time"},{"ancestorTitles":["RedisClientStorage","get"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage get should return null when client is is disconnected and client will be removed","status":"passed","title":"should return null when client is is disconnected and client will be removed"},{"ancestorTitles":["RedisClientStorage","get"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage get should not fail when there is no client","status":"passed","title":"should not fail when there is no client"},{"ancestorTitles":["RedisClientStorage","getByMetadata"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage getByMetadata should correctly get client instance and update last used time","status":"passed","title":"should correctly get client instance and update last used time"},{"ancestorTitles":["RedisClientStorage","getByMetadata"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage getByMetadata should find client for CLI ignoring db parameter","status":"passed","title":"should find client for CLI ignoring db parameter"},{"ancestorTitles":["RedisClientStorage","getByMetadata"],"duration":6,"failureMessages":[],"fullName":"RedisClientStorage getByMetadata should not fail when there is no client","status":"passed","title":"should not fail when there is no client"},{"ancestorTitles":["RedisClientStorage","set"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage set should add new client","status":"passed","title":"should add new client"},{"ancestorTitles":["RedisClientStorage","set"],"duration":104,"failureMessages":[],"fullName":"RedisClientStorage set should use existing client instead of replacing with new one","status":"passed","title":"should use existing client instead of replacing with new one"},{"ancestorTitles":["RedisClientStorage","set"],"duration":122,"failureMessages":[],"fullName":"RedisClientStorage set should use new client when there is existing client but without active connection","status":"passed","title":"should use new client when there is existing client but without active connection"},{"ancestorTitles":["RedisClientStorage","set"],"duration":62,"failureMessages":[],"fullName":"RedisClientStorage set should throw and error if clientMetadata has not required fields","status":"passed","title":"should throw and error if clientMetadata has not required fields"},{"ancestorTitles":["RedisClientStorage","remove"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage remove should remove only one","status":"passed","title":"should remove only one"},{"ancestorTitles":["RedisClientStorage","remove"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage remove should not fail in case when no client found","status":"passed","title":"should not fail in case when no client found"},{"ancestorTitles":["RedisClientStorage","remove"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage remove should not fail in case when client.disconnect() failed and remove client from the pool","status":"passed","title":"should not fail in case when client.disconnect() failed and remove client from the pool"},{"ancestorTitles":["RedisClientStorage","removeByMetadata"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage removeByMetadata should remove only one","status":"passed","title":"should remove only one"},{"ancestorTitles":["RedisClientStorage","removeByMetadata"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage removeByMetadata should not fail in case when no client found","status":"passed","title":"should not fail in case when no client found"},{"ancestorTitles":["RedisClientStorage","findClients + removeManyByMetadata"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage findClients + removeManyByMetadata should correctly find clients for particular database","status":"passed","title":"should correctly find clients for particular database"},{"ancestorTitles":["RedisClientStorage","findClients + removeManyByMetadata"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage findClients + removeManyByMetadata should correctly find clients for particular database and context","status":"passed","title":"should correctly find clients for particular database and context"},{"ancestorTitles":["RedisClientStorage","findClients + removeManyByMetadata"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage findClients + removeManyByMetadata should correctly find clients for particular database and user","status":"passed","title":"should correctly find clients for particular database and user"},{"ancestorTitles":["RedisClientStorage","findClients + removeManyByMetadata"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage findClients + removeManyByMetadata should correctly find clients for particular user","status":"passed","title":"should correctly find clients for particular user"},{"ancestorTitles":["RedisClientStorage","findClients + removeManyByMetadata"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage findClients + removeManyByMetadata should correctly find clients for particular database and db index","status":"passed","title":"should correctly find clients for particular database and db index"},{"ancestorTitles":["RedisClientStorage","findClients + removeManyByMetadata"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage findClients + removeManyByMetadata should not find any instances","status":"passed","title":"should not find any instances"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage advanced 0 validation and id generation","status":"passed","title":"0 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":26,"failureMessages":[],"fullName":"RedisClientStorage advanced 1 validation and id generation","status":"passed","title":"1 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 2 validation and id generation","status":"passed","title":"2 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 3 validation and id generation","status":"passed","title":"3 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage advanced 4 validation and id generation","status":"passed","title":"4 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":12,"failureMessages":[],"fullName":"RedisClientStorage advanced 5 validation and id generation","status":"passed","title":"5 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage advanced 6 validation and id generation","status":"passed","title":"6 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 7 validation and id generation","status":"passed","title":"7 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":4,"failureMessages":[],"fullName":"RedisClientStorage advanced 8 validation and id generation","status":"passed","title":"8 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":6,"failureMessages":[],"fullName":"RedisClientStorage advanced 0 validation and id generation","status":"passed","title":"0 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 1 validation and id generation","status":"passed","title":"1 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":13,"failureMessages":[],"fullName":"RedisClientStorage advanced 2 validation and id generation","status":"passed","title":"2 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 3 validation and id generation","status":"passed","title":"3 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 4 validation and id generation","status":"passed","title":"4 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":3,"failureMessages":[],"fullName":"RedisClientStorage advanced 5 validation and id generation","status":"passed","title":"5 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":15,"failureMessages":[],"fullName":"RedisClientStorage advanced 6 validation and id generation","status":"passed","title":"6 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":36,"failureMessages":[],"fullName":"RedisClientStorage advanced 7 validation and id generation","status":"passed","title":"7 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 8 validation and id generation","status":"passed","title":"8 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 0 validation and id generation","status":"passed","title":"0 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 1 validation and id generation","status":"passed","title":"1 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage advanced 2 validation and id generation","status":"passed","title":"2 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 3 validation and id generation","status":"passed","title":"3 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 4 validation and id generation","status":"passed","title":"4 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 5 validation and id generation","status":"passed","title":"5 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":2,"failureMessages":[],"fullName":"RedisClientStorage advanced 6 validation and id generation","status":"passed","title":"6 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage advanced 7 validation and id generation","status":"passed","title":"7 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":1,"failureMessages":[],"fullName":"RedisClientStorage advanced 8 validation and id generation","status":"passed","title":"8 validation and id generation"},{"ancestorTitles":["RedisClientStorage","advanced"],"duration":8,"failureMessages":[],"fullName":"RedisClientStorage advanced check common use cases","status":"passed","title":"check common use cases"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":32,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove all","status":"passed","title":"remove all"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":101,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"databaseId\": \"db\"}","status":"passed","title":"remove many by {\"databaseId\": \"db\"}"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":34,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"context\": \"Browser\"}","status":"passed","title":"remove many by {\"context\": \"Browser\"}"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":26,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"uniqueId\": \"uuid\"}","status":"passed","title":"remove many by {\"uniqueId\": \"uuid\"}"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":33,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"db\": 1}","status":"passed","title":"remove many by {\"db\": 1}"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":31,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"userId\": \"uid\"}","status":"passed","title":"remove many by {\"userId\": \"uid\"}"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":38,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"sessionId\": \"sid\"}","status":"passed","title":"remove many by {\"sessionId\": \"sid\"}"},{"ancestorTitles":["RedisClientStorage","advanced","remove many"],"duration":34,"failureMessages":[],"fullName":"RedisClientStorage advanced remove many remove many by {\"databaseId\": \"db\", \"sessionId\": \"sid\", \"userId\": \"uid\"}","status":"passed","title":"remove many by {\"databaseId\": \"db\", \"sessionId\": \"sid\", \"userId\": \"uid\"}"}]},{"numFailingTests":0,"numPassingTests":72,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501141728,"runtime":813,"slow":false,"start":1733501140915},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/recommendation/providers/recommendation.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RecommendationProvider","determineLuaScriptRecommendation"],"duration":22,"failureMessages":[],"fullName":"RecommendationProvider determineLuaScriptRecommendation should not return luaScript recommendation","status":"passed","title":"should not return luaScript recommendation"},{"ancestorTitles":["RecommendationProvider","determineLuaScriptRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineLuaScriptRecommendation should return luaScript recommendation","status":"passed","title":"should return luaScript recommendation"},{"ancestorTitles":["RecommendationProvider","determineLuaScriptRecommendation"],"duration":19,"failureMessages":[],"fullName":"RecommendationProvider determineLuaScriptRecommendation should not return luaScript recommendation when info command executed with error","status":"passed","title":"should not return luaScript recommendation when info command executed with error"},{"ancestorTitles":["RecommendationProvider","determineBigHashesRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineBigHashesRecommendation should not return bigHashes recommendation","status":"passed","title":"should not return bigHashes recommendation"},{"ancestorTitles":["RecommendationProvider","determineBigHashesRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineBigHashesRecommendation should return bigHashes recommendation","status":"passed","title":"should return bigHashes recommendation"},{"ancestorTitles":["RecommendationProvider","determineBigTotalRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineBigTotalRecommendation should not return useSmallerKeys recommendation","status":"passed","title":"should not return useSmallerKeys recommendation"},{"ancestorTitles":["RecommendationProvider","determineBigTotalRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineBigTotalRecommendation should return useSmallerKeys recommendation","status":"passed","title":"should return useSmallerKeys recommendation"},{"ancestorTitles":["RecommendationProvider","determineLogicalDatabasesRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineLogicalDatabasesRecommendation should not return avoidLogicalDatabases recommendation when only one logical db","status":"passed","title":"should not return avoidLogicalDatabases recommendation when only one logical db"},{"ancestorTitles":["RecommendationProvider","determineLogicalDatabasesRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineLogicalDatabasesRecommendation should not return avoidLogicalDatabases recommendation when only on logical db with keys","status":"passed","title":"should not return avoidLogicalDatabases recommendation when only on logical db with keys"},{"ancestorTitles":["RecommendationProvider","determineLogicalDatabasesRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineLogicalDatabasesRecommendation should return avoidLogicalDatabases recommendation","status":"passed","title":"should return avoidLogicalDatabases recommendation"},{"ancestorTitles":["RecommendationProvider","determineLogicalDatabasesRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineLogicalDatabasesRecommendation should not return avoidLogicalDatabases recommendation when info command executed with error","status":"passed","title":"should not return avoidLogicalDatabases recommendation when info command executed with error"},{"ancestorTitles":["RecommendationProvider","determineLogicalDatabasesRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineLogicalDatabasesRecommendation should not return avoidLogicalDatabases recommendation when isCluster","status":"passed","title":"should not return avoidLogicalDatabases recommendation when isCluster"},{"ancestorTitles":["RecommendationProvider","determineCombineSmallStringsToHashesRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineCombineSmallStringsToHashesRecommendation should not return combineSmallStringsToHashes recommendation","status":"passed","title":"should not return combineSmallStringsToHashes recommendation"},{"ancestorTitles":["RecommendationProvider","determineCombineSmallStringsToHashesRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineCombineSmallStringsToHashesRecommendation should not return combineSmallStringsToHashes recommendation when strings are big","status":"passed","title":"should not return combineSmallStringsToHashes recommendation when strings are big"},{"ancestorTitles":["RecommendationProvider","determineCombineSmallStringsToHashesRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineCombineSmallStringsToHashesRecommendation should return combineSmallStringsToHashes recommendation","status":"passed","title":"should return combineSmallStringsToHashes recommendation"},{"ancestorTitles":["RecommendationProvider","determineIncreaseSetMaxIntsetEntriesRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineIncreaseSetMaxIntsetEntriesRecommendation should not return increaseSetMaxIntsetEntries","status":"passed","title":"should not return increaseSetMaxIntsetEntries"},{"ancestorTitles":["RecommendationProvider","determineIncreaseSetMaxIntsetEntriesRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineIncreaseSetMaxIntsetEntriesRecommendation should return increaseSetMaxIntsetEntries recommendation","status":"passed","title":"should return increaseSetMaxIntsetEntries recommendation"},{"ancestorTitles":["RecommendationProvider","determineIncreaseSetMaxIntsetEntriesRecommendation"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider determineIncreaseSetMaxIntsetEntriesRecommendation should not return increaseSetMaxIntsetEntries recommendation when config command executed with error","status":"passed","title":"should not return increaseSetMaxIntsetEntries recommendation when config command executed with error"},{"ancestorTitles":["RecommendationProvider","determineHashHashtableToZiplistRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineHashHashtableToZiplistRecommendation should not return hashHashtableToZiplist recommendation","status":"passed","title":"should not return hashHashtableToZiplist recommendation"},{"ancestorTitles":["RecommendationProvider","determineHashHashtableToZiplistRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineHashHashtableToZiplistRecommendation should return hashHashtableToZiplist recommendation","status":"passed","title":"should return hashHashtableToZiplist recommendation"},{"ancestorTitles":["RecommendationProvider","determineHashHashtableToZiplistRecommendation"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider determineHashHashtableToZiplistRecommendation should not return hashHashtableToZiplist recommendation when config command executed with error","status":"passed","title":"should not return hashHashtableToZiplist recommendation when config command executed with error"},{"ancestorTitles":["RecommendationProvider","determineCompressionForListRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineCompressionForListRecommendation should not return compressionForList recommendation","status":"passed","title":"should not return compressionForList recommendation"},{"ancestorTitles":["RecommendationProvider","determineCompressionForListRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineCompressionForListRecommendation should return compressionForList recommendation","status":"passed","title":"should return compressionForList recommendation"},{"ancestorTitles":["RecommendationProvider","determineBigStringsRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineBigStringsRecommendation should not return bigStrings recommendation","status":"passed","title":"should not return bigStrings recommendation"},{"ancestorTitles":["RecommendationProvider","determineBigStringsRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineBigStringsRecommendation should return bigStrings recommendation","status":"passed","title":"should return bigStrings recommendation"},{"ancestorTitles":["RecommendationProvider","determineZSetHashtableToZiplistRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineZSetHashtableToZiplistRecommendation should not return zSetHashtableToZiplist recommendation","status":"passed","title":"should not return zSetHashtableToZiplist recommendation"},{"ancestorTitles":["RecommendationProvider","determineZSetHashtableToZiplistRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineZSetHashtableToZiplistRecommendation should return zSetHashtableToZiplist recommendation","status":"passed","title":"should return zSetHashtableToZiplist recommendation"},{"ancestorTitles":["RecommendationProvider","determineZSetHashtableToZiplistRecommendation"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider determineZSetHashtableToZiplistRecommendation should not return zSetHashtableToZiplist recommendation when config command executed with error","status":"passed","title":"should not return zSetHashtableToZiplist recommendation when config command executed with error"},{"ancestorTitles":["RecommendationProvider","determineBigSetsRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineBigSetsRecommendation should not return bigSets recommendation","status":"passed","title":"should not return bigSets recommendation"},{"ancestorTitles":["RecommendationProvider","determineBigSetsRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineBigSetsRecommendation should return bigSets recommendation","status":"passed","title":"should return bigSets recommendation"},{"ancestorTitles":["RecommendationProvider","determineConnectionClientsRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineConnectionClientsRecommendation should not return connectionClients recommendation","status":"passed","title":"should not return connectionClients recommendation"},{"ancestorTitles":["RecommendationProvider","determineConnectionClientsRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineConnectionClientsRecommendation should return connectionClients recommendation","status":"passed","title":"should return connectionClients recommendation"},{"ancestorTitles":["RecommendationProvider","determineConnectionClientsRecommendation"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider determineConnectionClientsRecommendation should not return connectionClients recommendation when info command executed with error","status":"passed","title":"should not return connectionClients recommendation when info command executed with error"},{"ancestorTitles":["RecommendationProvider","determineSetPasswordRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineSetPasswordRecommendation should not return setPassword recommendation","status":"passed","title":"should not return setPassword recommendation"},{"ancestorTitles":["RecommendationProvider","determineSetPasswordRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineSetPasswordRecommendation should return setPassword recommendation","status":"passed","title":"should return setPassword recommendation"},{"ancestorTitles":["RecommendationProvider","determineSetPasswordRecommendation"],"duration":7,"failureMessages":[],"fullName":"RecommendationProvider determineSetPasswordRecommendation should not return setPassword recommendation when acl command executed with error","status":"passed","title":"should not return setPassword recommendation when acl command executed with error"},{"ancestorTitles":["RecommendationProvider","determineSetPasswordRecommendation"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider determineSetPasswordRecommendation should not return setPassword recommendation when acl command executed with error","status":"passed","title":"should not return setPassword recommendation when acl command executed with error"},{"ancestorTitles":["RecommendationProvider","determineRedisVersionRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRedisVersionRecommendation should not return redis version recommendation","status":"passed","title":"should not return redis version recommendation"},{"ancestorTitles":["RecommendationProvider","determineRedisVersionRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRedisVersionRecommendation should return redis version recommendation","status":"passed","title":"should return redis version recommendation"},{"ancestorTitles":["RecommendationProvider","determineRedisVersionRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRedisVersionRecommendation should not return redis version recommendation when info command executed with error","status":"passed","title":"should not return redis version recommendation when info command executed with error"},{"ancestorTitles":["RecommendationProvider","determineSearchJSONRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineSearchJSONRecommendation should not return searchJSON","status":"passed","title":"should not return searchJSON"},{"ancestorTitles":["RecommendationProvider","determineSearchJSONRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineSearchJSONRecommendation should return searchJSON recommendation","status":"passed","title":"should return searchJSON recommendation"},{"ancestorTitles":["RecommendationProvider","determineSearchJSONRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineSearchJSONRecommendation should return not searchJSON recommendation when there is no JSON key","status":"passed","title":"should return not searchJSON recommendation when there is no JSON key"},{"ancestorTitles":["RecommendationProvider","determineSearchJSONRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineSearchJSONRecommendation should return searchJSON recommendation when indexes is undefined","status":"passed","title":"should return searchJSON recommendation when indexes is undefined"},{"ancestorTitles":["RecommendationProvider","determineSearchHashRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineSearchHashRecommendation should return searchHash recommendation","status":"passed","title":"should return searchHash recommendation"},{"ancestorTitles":["RecommendationProvider","determineSearchHashRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineSearchHashRecommendation should not return searchHash recommendation","status":"passed","title":"should not return searchHash recommendation"},{"ancestorTitles":["RecommendationProvider","determineSearchHashRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineSearchHashRecommendation should not return searchHash recommendation if indexes exists","status":"passed","title":"should not return searchHash recommendation if indexes exists"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"123\",123]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"123\",123]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891\",3]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891\",3]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891\",1234567891]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891\",1234567891]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"123\",1234567891]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"123\",1234567891]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"123\",12345678911]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"123\",12345678911]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"123\",1234567891234]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"123\",1234567891234]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"123\",12345678912345]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"123\",12345678912345]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"123\",1234567891234567]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"123\",1234567891234567]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"12345678912345678\",1]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"12345678912345678\",1]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891234567891\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891234567891\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1\",1234567891.2]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1\",1234567891.2]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891.2\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891.2\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891:12\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891:12\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891a12\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891a12\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891.2.2\",1]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891.2.2\",1]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891asd\",1]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891asd\",1]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"10-10-2020\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}","status":"passed","title":"{\"input\":[\"0\",[\"10-10-2020\",1]],\"expected\":{\"name\":\"RTS\",\"params\":{\"keys\":[{\"type\":\"Buffer\",\"data\":[110,97,109,101]}]}}}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"\",1]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"\",1]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1\",-12]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1\",-12]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1\",-1234567891]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1\",-1234567891]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1\",-1234567891.123]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1\",-1234567891.123]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1\",-1234567891.123]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1\",-1234567891.123]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation {\"input\":[\"0\",[\"1234567891.-123\",1]],\"expected\":null}","status":"passed","title":"{\"input\":[\"0\",[\"1234567891.-123\",1]],\"expected\":null}"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":29,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation should not return RTS recommendation when only 101 sorted set contain timestamp","status":"passed","title":"should not return RTS recommendation when only 101 sorted set contain timestamp"},{"ancestorTitles":["RecommendationProvider","determineRTSRecommendation"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider determineRTSRecommendation should not return RTS recommendation when zscan command executed with error","status":"passed","title":"should not return RTS recommendation when zscan command executed with error"}]},{"numFailingTests":0,"numPassingTests":32,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501142944,"runtime":1040,"slow":false,"start":1733501141904},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/hash/hash.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["HashService","createHash"],"duration":23,"failureMessages":[],"fullName":"HashService createHash create hash with expiration","status":"passed","title":"create hash with expiration"},{"ancestorTitles":["HashService","createHash"],"duration":3,"failureMessages":[],"fullName":"HashService createHash create hash with expiration but without fields exp since no expire was provided for fields","status":"passed","title":"create hash with expiration but without fields exp since no expire was provided for fields"},{"ancestorTitles":["HashService","createHash"],"duration":3,"failureMessages":[],"fullName":"HashService createHash create hash with expiration and fields expiration","status":"passed","title":"create hash with expiration and fields expiration"},{"ancestorTitles":["HashService","createHash"],"duration":2,"failureMessages":[],"fullName":"HashService createHash create hash without expiration","status":"passed","title":"create hash without expiration"},{"ancestorTitles":["HashService","createHash"],"duration":19,"failureMessages":[],"fullName":"HashService createHash key with this name exist","status":"passed","title":"key with this name exist"},{"ancestorTitles":["HashService","createHash"],"duration":5,"failureMessages":[],"fullName":"HashService createHash user don't have required permissions for createHash","status":"passed","title":"user don't have required permissions for createHash"},{"ancestorTitles":["HashService","getFields"],"duration":3,"failureMessages":[],"fullName":"HashService getFields succeed to get fields of the hash","status":"passed","title":"succeed to get fields of the hash"},{"ancestorTitles":["HashService","getFields"],"duration":4,"failureMessages":[],"fullName":"HashService getFields succeed to get fields of the hash with ttls","status":"passed","title":"succeed to get fields of the hash with ttls"},{"ancestorTitles":["HashService","getFields"],"duration":4,"failureMessages":[],"fullName":"HashService getFields should not fail in case of ttl query error and return results without ttl field","status":"passed","title":"should not fail in case of ttl query error and return results without ttl field"},{"ancestorTitles":["HashService","getFields"],"duration":2,"failureMessages":[],"fullName":"HashService getFields succeed to find exact field in the hash","status":"passed","title":"succeed to find exact field in the hash"},{"ancestorTitles":["HashService","getFields"],"duration":9,"failureMessages":[],"fullName":"HashService getFields failed to find exact field in the hash","status":"passed","title":"failed to find exact field in the hash"},{"ancestorTitles":["HashService","getFields"],"duration":4,"failureMessages":[],"fullName":"HashService getFields should not call scan when math contains escaped glob","status":"passed","title":"should not call scan when math contains escaped glob"},{"ancestorTitles":["HashService","getFields"],"duration":3,"failureMessages":[],"fullName":"HashService getFields key with this name does not exist for getFields","status":"passed","title":"key with this name does not exist for getFields"},{"ancestorTitles":["HashService","getFields"],"duration":3,"failureMessages":[],"fullName":"HashService getFields try to use 'HLEN' command not for hash data type","status":"passed","title":"try to use 'HLEN' command not for hash data type"},{"ancestorTitles":["HashService","getFields"],"duration":2,"failureMessages":[],"fullName":"HashService getFields user don't have required permissions for getFields","status":"passed","title":"user don't have required permissions for getFields"},{"ancestorTitles":["HashService","getFields"],"duration":2,"failureMessages":[],"fullName":"HashService getFields should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["HashService","scanHash"],"duration":3,"failureMessages":[],"fullName":"HashService scanHash should scan with match=\"*\" by default and default count","status":"passed","title":"should scan with match=\"*\" by default and default count"},{"ancestorTitles":["HashService","scanHash"],"duration":2,"failureMessages":[],"fullName":"HashService scanHash should scan with passed arguments","status":"passed","title":"should scan with passed arguments"},{"ancestorTitles":["HashService","addFields"],"duration":2,"failureMessages":[],"fullName":"HashService addFields succeed to add/update fields to the Hash data type","status":"passed","title":"succeed to add/update fields to the Hash data type"},{"ancestorTitles":["HashService","addFields"],"duration":4,"failureMessages":[],"fullName":"HashService addFields succeed add/update fields to the Hash data type without expiration fields when feature disabled","status":"passed","title":"succeed add/update fields to the Hash data type without expiration fields when feature disabled"},{"ancestorTitles":["HashService","addFields"],"duration":5,"failureMessages":[],"fullName":"HashService addFields succeed to add/update fields to the Hash data type with fields expiration","status":"passed","title":"succeed to add/update fields to the Hash data type with fields expiration"},{"ancestorTitles":["HashService","addFields"],"duration":4,"failureMessages":[],"fullName":"HashService addFields key with this name does not exist for addFields","status":"passed","title":"key with this name does not exist for addFields"},{"ancestorTitles":["HashService","addFields"],"duration":8,"failureMessages":[],"fullName":"HashService addFields try to use 'HSET' command not for hash data type","status":"passed","title":"try to use 'HSET' command not for hash data type"},{"ancestorTitles":["HashService","addFields"],"duration":3,"failureMessages":[],"fullName":"HashService addFields user don't have required permissions for addFields","status":"passed","title":"user don't have required permissions for addFields"},{"ancestorTitles":["HashService","updateTtl"],"duration":3,"failureMessages":[],"fullName":"HashService updateTtl should update ttl for 2 fields and persist one","status":"passed","title":"should update ttl for 2 fields and persist one"},{"ancestorTitles":["HashService","updateTtl"],"duration":4,"failureMessages":[],"fullName":"HashService updateTtl key with this name does not exist for addFields","status":"passed","title":"key with this name does not exist for addFields"},{"ancestorTitles":["HashService","updateTtl"],"duration":4,"failureMessages":[],"fullName":"HashService updateTtl try to use 'HEXPIRE' command not for hash data type","status":"passed","title":"try to use 'HEXPIRE' command not for hash data type"},{"ancestorTitles":["HashService","updateTtl"],"duration":4,"failureMessages":[],"fullName":"HashService updateTtl user don't have required permissions for addFields","status":"passed","title":"user don't have required permissions for addFields"},{"ancestorTitles":["HashService","deleteFields"],"duration":3,"failureMessages":[],"fullName":"HashService deleteFields succeeded to delete fields from Hash data type","status":"passed","title":"succeeded to delete fields from Hash data type"},{"ancestorTitles":["HashService","deleteFields"],"duration":4,"failureMessages":[],"fullName":"HashService deleteFields key with this name does not exist for deleteFields","status":"passed","title":"key with this name does not exist for deleteFields"},{"ancestorTitles":["HashService","deleteFields"],"duration":4,"failureMessages":[],"fullName":"HashService deleteFields try to use 'HDEL' command not for Hash data type","status":"passed","title":"try to use 'HDEL' command not for Hash data type"},{"ancestorTitles":["HashService","deleteFields"],"duration":2,"failureMessages":[],"fullName":"HashService deleteFields user don't have required permissions for deleteFields","status":"passed","title":"user don't have required permissions for deleteFields"}]},{"numFailingTests":0,"numPassingTests":27,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501144460,"runtime":1305,"slow":false,"start":1733501143155},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cli/services/cli-business/cli-business.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CliBusinessService","getClient"],"duration":5,"failureMessages":[],"fullName":"CliBusinessService getClient should successfully create new redis client","status":"passed","title":"should successfully create new redis client"},{"ancestorTitles":["CliBusinessService","getClient"],"duration":22,"failureMessages":[],"fullName":"CliBusinessService getClient should throw internal exception on getClient error","status":"passed","title":"should throw internal exception on getClient error"},{"ancestorTitles":["CliBusinessService","getClient"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService getClient Should proxy EncryptionService errors on getClient","status":"passed","title":"Should proxy EncryptionService errors on getClient"},{"ancestorTitles":["CliBusinessService","reCreateClient"],"duration":1,"failureMessages":[],"fullName":"CliBusinessService reCreateClient should successfully create new redis client","status":"passed","title":"should successfully create new redis client"},{"ancestorTitles":["CliBusinessService","reCreateClient"],"duration":3,"failureMessages":[],"fullName":"CliBusinessService reCreateClient should throw internal exception on reCreateClient","status":"passed","title":"should throw internal exception on reCreateClient"},{"ancestorTitles":["CliBusinessService","reCreateClient"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService reCreateClient Should proxy EncryptionService errors on reCreateClient","status":"passed","title":"Should proxy EncryptionService errors on reCreateClient"},{"ancestorTitles":["CliBusinessService","deleteClient"],"duration":1,"failureMessages":[],"fullName":"CliBusinessService deleteClient should successfully close redis client","status":"passed","title":"should successfully close redis client"},{"ancestorTitles":["CliBusinessService","deleteClient"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService deleteClient should throw internal exception on deleteClient","status":"passed","title":"should throw internal exception on deleteClient"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":5,"failureMessages":[],"fullName":"CliBusinessService sendCommand should successfully execute ft.info command","status":"passed","title":"should successfully execute ft.info command"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService sendCommand should successfully execute command (RAW format)","status":"passed","title":"should successfully execute command (RAW format)"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":3,"failureMessages":[],"fullName":"CliBusinessService sendCommand should successfully execute command and return raw response","status":"passed","title":"should successfully execute command and return raw response"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService sendCommand should return response with [CLI_COMMAND_NOT_SUPPORTED] error for sendCommand","status":"passed","title":"should return response with [CLI_COMMAND_NOT_SUPPORTED] error for sendCommand"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":7,"failureMessages":[],"fullName":"CliBusinessService sendCommand should return response with [CLI_UNTERMINATED_QUOTES] error for sendCommand","status":"passed","title":"should return response with [CLI_UNTERMINATED_QUOTES] error for sendCommand"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":3,"failureMessages":[],"fullName":"CliBusinessService sendCommand should return response with redis reply error","status":"passed","title":"should return response with redis reply error"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService sendCommand should return response with internal exception for sendCommand","status":"passed","title":"should return response with internal exception for sendCommand"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":8,"failureMessages":[],"fullName":"CliBusinessService sendCommand Should proxy EncryptionService errors for sendCommand","status":"passed","title":"Should proxy EncryptionService errors for sendCommand"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":1,"failureMessages":[],"fullName":"CliBusinessService sendCommand should return response in correct format for human-readable commands for sendCommand","status":"passed","title":"should return response in correct format for human-readable commands for sendCommand"},{"ancestorTitles":["CliBusinessService","sendCommand"],"duration":1,"failureMessages":[],"fullName":"CliBusinessService sendCommand should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":1,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should successfully execute command (RAW format)","status":"passed","title":"should successfully execute command (RAW format)"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":3,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should successfully execute command and return raw response","status":"passed","title":"should successfully execute command and return raw response"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":3,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should return response with [CLI_COMMAND_NOT_SUPPORTED] error for sendCommand","status":"passed","title":"should return response with [CLI_COMMAND_NOT_SUPPORTED] error for sendCommand"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":4,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should return response with [CLI_UNTERMINATED_QUOTES] error for sendCommand","status":"passed","title":"should return response with [CLI_UNTERMINATED_QUOTES] error for sendCommand"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":4,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should return response with redis reply error","status":"passed","title":"should return response with redis reply error"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":4,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should return response with internal exception for sendCommand","status":"passed","title":"should return response with internal exception for sendCommand"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":4,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand Should proxy EncryptionService errors for sendCommand","status":"passed","title":"Should proxy EncryptionService errors for sendCommand"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":2,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should return response in correct format for human-readable commands for sendCommand","status":"passed","title":"should return response in correct format for human-readable commands for sendCommand"},{"ancestorTitles":["CliBusinessService","sendClusterCommand"],"duration":1,"failureMessages":[],"fullName":"CliBusinessService sendClusterCommand should call recommendationService","status":"passed","title":"should call recommendationService"}]},{"numFailingTests":0,"numPassingTests":66,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501145599,"runtime":933,"slow":false,"start":1733501144666},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/database.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseService","exists"],"duration":7,"failureMessages":[],"fullName":"DatabaseService exists should return true if database exists","status":"passed","title":"should return true if database exists"},{"ancestorTitles":["DatabaseService","list"],"duration":3,"failureMessages":[],"fullName":"DatabaseService list should return databases and send analytics event","status":"passed","title":"should return databases and send analytics event"},{"ancestorTitles":["DatabaseService","list"],"duration":28,"failureMessages":[],"fullName":"DatabaseService list should throw InternalServerErrorException?","status":"passed","title":"should throw InternalServerErrorException?"},{"ancestorTitles":["DatabaseService","get"],"duration":2,"failureMessages":[],"fullName":"DatabaseService get should return database by id","status":"passed","title":"should return database by id"},{"ancestorTitles":["DatabaseService","get"],"duration":2,"failureMessages":[],"fullName":"DatabaseService get should throw NotFound if no database found","status":"passed","title":"should throw NotFound if no database found"},{"ancestorTitles":["DatabaseService","get"],"duration":3,"failureMessages":[],"fullName":"DatabaseService get should throw NotFound if no database id was provided","status":"passed","title":"should throw NotFound if no database id was provided"},{"ancestorTitles":["DatabaseService","create"],"duration":8,"failureMessages":[],"fullName":"DatabaseService create should create new database and send analytics event","status":"passed","title":"should create new database and send analytics event"},{"ancestorTitles":["DatabaseService","create"],"duration":2,"failureMessages":[],"fullName":"DatabaseService create should create new database with cloud details and send analytics event","status":"passed","title":"should create new database with cloud details and send analytics event"},{"ancestorTitles":["DatabaseService","create"],"duration":3,"failureMessages":[],"fullName":"DatabaseService create should not fail when collecting data for analytics event","status":"passed","title":"should not fail when collecting data for analytics event"},{"ancestorTitles":["DatabaseService","create"],"duration":3,"failureMessages":[],"fullName":"DatabaseService create should throw NotFound if no database?","status":"passed","title":"should throw NotFound if no database?"},{"ancestorTitles":["DatabaseService","update"],"duration":3,"failureMessages":[],"fullName":"DatabaseService update should update existing database and send analytics event","status":"passed","title":"should update existing database and send analytics event"},{"ancestorTitles":["DatabaseService","update"],"duration":2,"failureMessages":[],"fullName":"DatabaseService update should update existing database with merged ssh options","status":"passed","title":"should update existing database with merged ssh options"},{"ancestorTitles":["DatabaseService","update"],"duration":2,"failureMessages":[],"fullName":"DatabaseService update should update existing database with new ssh options","status":"passed","title":"should update existing database with new ssh options"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{},\"expected\":0}","status":"passed","title":"{\"input\":{},\"expected\":0}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"name\":\"new name\"},\"expected\":0}","status":"passed","title":"{\"input\":{\"name\":\"new name\"},\"expected\":0}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"port\":6379},\"expected\":1}","status":"passed","title":"{\"input\":{\"port\":6379},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"host\":\"new host\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"host\":\"new host\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"username\":\"user\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"username\":\"user\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"password\":\"pass\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"password\":\"pass\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"ssh\":true},\"expected\":1}","status":"passed","title":"{\"input\":{\"ssh\":true},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"sshOptions\":{\"password\":\"pass\"}},\"expected\":1}","status":"passed","title":"{\"input\":{\"sshOptions\":{\"password\":\"pass\"}},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":3,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"sentinelMaster\":\"master\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"sentinelMaster\":\"master\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"caCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37795a0f805\",\"name\":\"ca-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIDejCCAmKgAwIBAgIUehUr5AHdJM\"}},\"expected\":1}","status":"passed","title":"{\"input\":{\"caCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37795a0f805\",\"name\":\"ca-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIDejCCAmKgAwIBAgIUehUr5AHdJM\"}},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"clientCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37f2915f805\",\"name\":\"client-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMICLIENTCERTIDejCCAmKgAwIB\",\"key\":\"-----BEGIN PRIVATE KEY-----\\nMICLIENTCERTIDejCCAmKgAwIB\"}},\"expected\":1}","status":"passed","title":"{\"input\":{\"clientCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37f2915f805\",\"name\":\"client-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMICLIENTCERTIDejCCAmKgAwIB\",\"key\":\"-----BEGIN PRIVATE KEY-----\\nMICLIENTCERTIDejCCAmKgAwIB\"}},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":8,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"compressor\":\"NONE\"},\"expected\":0}","status":"passed","title":"{\"input\":{\"compressor\":\"NONE\"},\"expected\":0}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"timeout\":45000},\"expected\":0}","status":"passed","title":"{\"input\":{\"timeout\":45000},\"expected\":0}"},{"ancestorTitles":["DatabaseService","update","test connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService update test connection {\"input\":{\"port\":6379,\"timeout\":45000},\"expected\":1}","status":"passed","title":"{\"input\":{\"port\":6379,\"timeout\":45000},\"expected\":1}"},{"ancestorTitles":["DatabaseService","update"],"duration":4,"failureMessages":[],"fullName":"DatabaseService update should throw NotFound if no database?","status":"passed","title":"should throw NotFound if no database?"},{"ancestorTitles":["DatabaseService","test","new connection"],"duration":4,"failureMessages":[],"fullName":"DatabaseService test new connection should successfully test valid connection config","status":"passed","title":"should successfully test valid connection config"},{"ancestorTitles":["DatabaseService","test","new connection"],"duration":4,"failureMessages":[],"fullName":"DatabaseService test new connection should successfully test valid sentinel config (without sentinelMaster)","status":"passed","title":"should successfully test valid sentinel config (without sentinelMaster)"},{"ancestorTitles":["DatabaseService","test","new connection"],"duration":6,"failureMessages":[],"fullName":"DatabaseService test new connection should throw connection error","status":"passed","title":"should throw connection error"},{"ancestorTitles":["DatabaseService","test","new connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService test new connection should not call get database by id","status":"passed","title":"should not call get database by id"},{"ancestorTitles":["DatabaseService","test","exist connection"],"duration":1,"failureMessages":[],"fullName":"DatabaseService test exist connection should get database by id","status":"passed","title":"should get database by id"},{"ancestorTitles":["DatabaseService","test","exist connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService test exist connection should test database connection with merged ssh options","status":"passed","title":"should test database connection with merged ssh options"},{"ancestorTitles":["DatabaseService","test","exist connection"],"duration":3,"failureMessages":[],"fullName":"DatabaseService test exist connection should test connection with new tls","status":"passed","title":"should test connection with new tls"},{"ancestorTitles":["DatabaseService","test","exist connection"],"duration":2,"failureMessages":[],"fullName":"DatabaseService test exist connection should test connection with exist tls","status":"passed","title":"should test connection with exist tls"},{"ancestorTitles":["DatabaseService","delete"],"duration":1,"failureMessages":[],"fullName":"DatabaseService delete should remove existing database","status":"passed","title":"should remove existing database"},{"ancestorTitles":["DatabaseService","delete"],"duration":4,"failureMessages":[],"fullName":"DatabaseService delete should throw NotFound if no database","status":"passed","title":"should throw NotFound if no database"},{"ancestorTitles":["DatabaseService","delete"],"duration":3,"failureMessages":[],"fullName":"DatabaseService delete should throw InternalServerErrorException? on any error during deletion","status":"passed","title":"should throw InternalServerErrorException? on any error during deletion"},{"ancestorTitles":["DatabaseService","bulkDelete"],"duration":7,"failureMessages":[],"fullName":"DatabaseService bulkDelete should remove multiple databases","status":"passed","title":"should remove multiple databases"},{"ancestorTitles":["DatabaseService","bulkDelete"],"duration":3,"failureMessages":[],"fullName":"DatabaseService bulkDelete should ignore errors and do not count affected","status":"passed","title":"should ignore errors and do not count affected"},{"ancestorTitles":["DatabaseService","export"],"duration":3,"failureMessages":[],"fullName":"DatabaseService export should return multiple databases without Standalone secrets","status":"passed","title":"should return multiple databases without Standalone secrets"},{"ancestorTitles":["DatabaseService","export"],"duration":3,"failureMessages":[],"fullName":"DatabaseService export should return multiple databases without SSH secrets","status":"passed","title":"should return multiple databases without SSH secrets"},{"ancestorTitles":["DatabaseService","export"],"duration":3,"failureMessages":[],"fullName":"DatabaseService export should return multiple databases without Sentinel secrets","status":"passed","title":"should return multiple databases without Sentinel secrets"},{"ancestorTitles":["DatabaseService","export"],"duration":7,"failureMessages":[],"fullName":"DatabaseService export should return multiple databases with secrets","status":"passed","title":"should return multiple databases with secrets"},{"ancestorTitles":["DatabaseService","export"],"duration":3,"failureMessages":[],"fullName":"DatabaseService export should ignore errors","status":"passed","title":"should ignore errors"},{"ancestorTitles":["DatabaseService","export"],"duration":6,"failureMessages":[],"fullName":"DatabaseService export should throw NotFoundException","status":"passed","title":"should throw NotFoundException"},{"ancestorTitles":["DatabaseService","clone"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone should create new database","status":"passed","title":"should create new database"},{"ancestorTitles":["DatabaseService","clone"],"duration":2,"failureMessages":[],"fullName":"DatabaseService clone should create new database with merged ssh options","status":"passed","title":"should create new database with merged ssh options"},{"ancestorTitles":["DatabaseService","clone"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone should update existing database with new ssh options","status":"passed","title":"should update existing database with new ssh options"},{"ancestorTitles":["DatabaseService","clone"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone should create new database with new tls","status":"passed","title":"should create new database with new tls"},{"ancestorTitles":["DatabaseService","clone"],"duration":8,"failureMessages":[],"fullName":"DatabaseService clone should create new database with exist tls","status":"passed","title":"should create new database with exist tls"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":2,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{},\"expected\":0}","status":"passed","title":"{\"input\":{},\"expected\":0}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":2,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"name\":\"new name\"},\"expected\":0}","status":"passed","title":"{\"input\":{\"name\":\"new name\"},\"expected\":0}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"port\":6379},\"expected\":1}","status":"passed","title":"{\"input\":{\"port\":6379},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":4,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"host\":\"new host\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"host\":\"new host\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"username\":\"user\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"username\":\"user\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":2,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"password\":\"pass\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"password\":\"pass\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"ssh\":true},\"expected\":1}","status":"passed","title":"{\"input\":{\"ssh\":true},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":2,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"sshOptions\":{\"password\":\"pass\"}},\"expected\":1}","status":"passed","title":"{\"input\":{\"sshOptions\":{\"password\":\"pass\"}},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":5,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"sentinelMaster\":\"master\"},\"expected\":1}","status":"passed","title":"{\"input\":{\"sentinelMaster\":\"master\"},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"caCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37795a0f805\",\"name\":\"ca-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIDejCCAmKgAwIBAgIUehUr5AHdJM\"}},\"expected\":1}","status":"passed","title":"{\"input\":{\"caCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37795a0f805\",\"name\":\"ca-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIDejCCAmKgAwIBAgIUehUr5AHdJM\"}},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"clientCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37f2915f805\",\"name\":\"client-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMICLIENTCERTIDejCCAmKgAwIB\",\"key\":\"-----BEGIN PRIVATE KEY-----\\nMICLIENTCERTIDejCCAmKgAwIB\"}},\"expected\":1}","status":"passed","title":"{\"input\":{\"clientCert\":{\"id\":\"a77b23c1-7816-4ea4-b61f-d37f2915f805\",\"name\":\"client-cert\",\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMICLIENTCERTIDejCCAmKgAwIB\",\"key\":\"-----BEGIN PRIVATE KEY-----\\nMICLIENTCERTIDejCCAmKgAwIB\"}},\"expected\":1}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"compressor\":\"NONE\"},\"expected\":0}","status":"passed","title":"{\"input\":{\"compressor\":\"NONE\"},\"expected\":0}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"timeout\":45000},\"expected\":0}","status":"passed","title":"{\"input\":{\"timeout\":45000},\"expected\":0}"},{"ancestorTitles":["DatabaseService","clone","create database model"],"duration":3,"failureMessages":[],"fullName":"DatabaseService clone create database model {\"input\":{\"port\":6379,\"timeout\":45000},\"expected\":1}","status":"passed","title":"{\"input\":{\"port\":6379,\"timeout\":45000},\"expected\":1}"}]},{"numFailingTests":0,"numPassingTests":34,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501147144,"runtime":1359,"slow":false,"start":1733501145785},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/user/cloud-user.api.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudUserApiService","ensureCsrf"],"duration":19,"failureMessages":[],"fullName":"CloudUserApiService ensureCsrf should pass when there is existing csrf","status":"passed","title":"should pass when there is existing csrf"},{"ancestorTitles":["CloudUserApiService","ensureCsrf"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureCsrf should get csrf when no csrf in the session","status":"passed","title":"should get csrf when no csrf in the session"},{"ancestorTitles":["CloudUserApiService","ensureCsrf"],"duration":14,"failureMessages":[],"fullName":"CloudUserApiService ensureCsrf should throw unauthorized error when no csrf returned","status":"passed","title":"should throw unauthorized error when no csrf returned"},{"ancestorTitles":["CloudUserApiService","ensureCsrf"],"duration":5,"failureMessages":[],"fullName":"CloudUserApiService ensureCsrf should throw unauthorized error when fetching api call returned 401","status":"passed","title":"should throw unauthorized error when fetching api call returned 401"},{"ancestorTitles":["CloudUserApiService","ensureAccessToken"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureAccessToken Should not renew when access token is not expired","status":"passed","title":"Should not renew when access token is not expired"},{"ancestorTitles":["CloudUserApiService","ensureAccessToken"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureAccessToken Should not renew when access token is not expired and 3m until expiration time","status":"passed","title":"Should not renew when access token is not expired and 3m until expiration time"},{"ancestorTitles":["CloudUserApiService","ensureAccessToken"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureAccessToken Should renew tokens when access token is expired","status":"passed","title":"Should renew tokens when access token is expired"},{"ancestorTitles":["CloudUserApiService","ensureAccessToken"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureAccessToken Should renew tokens when access token is not expired but < 2m until exp time","status":"passed","title":"Should renew tokens when access token is not expired but < 2m until exp time"},{"ancestorTitles":["CloudUserApiService","ensureAccessToken"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureAccessToken Should throw CloudApiUnauthorizedException in case of any error","status":"passed","title":"Should throw CloudApiUnauthorizedException in case of any error"},{"ancestorTitles":["CloudUserApiService","ensureAccessToken"],"duration":7,"failureMessages":[],"fullName":"CloudUserApiService ensureAccessToken Should throw CloudApiUnauthorizedException error if there is no session","status":"passed","title":"Should throw CloudApiUnauthorizedException error if there is no session"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should pass when there is existing user in session","status":"passed","title":"should pass when there is existing user in session"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should login and get csrf when no apiSessionId (should ignore utm)","status":"passed","title":"should login and get csrf when no apiSessionId (should ignore utm)"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should login and get csrf when no apiSessionId and use passed utm parameters","status":"passed","title":"should login and get csrf when no apiSessionId and use passed utm parameters"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should login and get csrf when no apiSessionId and calculate additional utm parameters","status":"passed","title":"should login and get csrf when no apiSessionId and calculate additional utm parameters"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should login and get csrf when no apiSessionId and not fail when calculating utm caused an error","status":"passed","title":"should login and get csrf when no apiSessionId and not fail when calculating utm caused an error"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should login and get csrf when no apiSessionId login should be sent with \"auth_mode\"","status":"passed","title":"should login and get csrf when no apiSessionId login should be sent with \"auth_mode\""},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should throw unauthorized error when no session id successfully fetched","status":"passed","title":"should throw unauthorized error when no session id successfully fetched"},{"ancestorTitles":["CloudUserApiService","ensureLogin"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureLogin should throw unauthorized error when no fetching api call returns 401","status":"passed","title":"should throw unauthorized error when no fetching api call returns 401"},{"ancestorTitles":["CloudUserApiService","ensureCloudUser"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureCloudUser should pass when there is existing user in session","status":"passed","title":"should pass when there is existing user in session"},{"ancestorTitles":["CloudUserApiService","ensureCloudUser"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService ensureCloudUser should fetch user when force flag submitted","status":"passed","title":"should fetch user when force flag submitted"},{"ancestorTitles":["CloudUserApiService","ensureCloudUser"],"duration":7,"failureMessages":[],"fullName":"CloudUserApiService ensureCloudUser should fetch user when there is no user in the repo","status":"passed","title":"should fetch user when there is no user in the repo"},{"ancestorTitles":["CloudUserApiService","ensureCloudUser"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService ensureCloudUser should wrap Unauthorized error when /user/me returned 401 status code","status":"passed","title":"should wrap Unauthorized error when /user/me returned 401 status code"},{"ancestorTitles":["CloudUserApiService","ensureCloudUser"],"duration":4,"failureMessages":[],"fullName":"CloudUserApiService ensureCloudUser should wrap Unauthorized error when /accounts returned 401 status code","status":"passed","title":"should wrap Unauthorized error when /accounts returned 401 status code"},{"ancestorTitles":["CloudUserApiService","me"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiService me should get user profile","status":"passed","title":"should get user profile"},{"ancestorTitles":["CloudUserApiService","me"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService me should get user profile from 2nd attempt","status":"passed","title":"should get user profile from 2nd attempt"},{"ancestorTitles":["CloudUserApiService","me"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiService me should throw an error if retries attempts exceeded","status":"passed","title":"should throw an error if retries attempts exceeded"},{"ancestorTitles":["CloudUserApiService","me"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService me should throw an error from 1st attempt when no Anauthorized Error","status":"passed","title":"should throw an error from 1st attempt when no Anauthorized Error"},{"ancestorTitles":["CloudUserApiService","getUserSession"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiService getUserSession should get user session","status":"passed","title":"should get user session"},{"ancestorTitles":["CloudUserApiService","getUserSession"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiService getUserSession should get user session from 2nd attempt","status":"passed","title":"should get user session from 2nd attempt"},{"ancestorTitles":["CloudUserApiService","getUserSession"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiService getUserSession should throw an error if retries attempts exceeded","status":"passed","title":"should throw an error if retries attempts exceeded"},{"ancestorTitles":["CloudUserApiService","setCurrentAccount"],"duration":3,"failureMessages":[],"fullName":"CloudUserApiService setCurrentAccount should set user account","status":"passed","title":"should set user account"},{"ancestorTitles":["CloudUserApiService","setCurrentAccount"],"duration":6,"failureMessages":[],"fullName":"CloudUserApiService setCurrentAccount should set user account from 2nd attempt","status":"passed","title":"should set user account from 2nd attempt"},{"ancestorTitles":["CloudUserApiService","setCurrentAccount"],"duration":6,"failureMessages":[],"fullName":"CloudUserApiService setCurrentAccount should throw an error if retries attempts exceeded","status":"passed","title":"should throw an error if retries attempts exceeded"},{"ancestorTitles":["CloudUserApiService","updateUser"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiService updateUser should update cloud user","status":"passed","title":"should update cloud user"}]},{"numFailingTests":0,"numPassingTests":31,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501148766,"runtime":1390,"slow":false,"start":1733501147376},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/stream/services/consumer.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ConsumerService","getGroups"],"duration":19,"failureMessages":[],"fullName":"ConsumerService getGroups should get consumers list","status":"passed","title":"should get consumers list"},{"ancestorTitles":["ConsumerService","getGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getGroups should throw error when key does not exists","status":"passed","title":"should throw error when key does not exists"},{"ancestorTitles":["ConsumerService","getGroups"],"duration":1,"failureMessages":[],"fullName":"ConsumerService getGroups should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerService","getGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getGroups should throw Not Found error when no group","status":"passed","title":"should throw Not Found error when no group"},{"ancestorTitles":["ConsumerService","getGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getGroups should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerService","getGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getGroups should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerService","deleteConsumers"],"duration":10,"failureMessages":[],"fullName":"ConsumerService deleteConsumers delete consumers","status":"passed","title":"delete consumers"},{"ancestorTitles":["ConsumerService","deleteConsumers"],"duration":3,"failureMessages":[],"fullName":"ConsumerService deleteConsumers should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerService","deleteConsumers"],"duration":2,"failureMessages":[],"fullName":"ConsumerService deleteConsumers should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerService","deleteConsumers"],"duration":2,"failureMessages":[],"fullName":"ConsumerService deleteConsumers should throw Not Found error when group does not exists","status":"passed","title":"should throw Not Found error when group does not exists"},{"ancestorTitles":["ConsumerService","deleteConsumers"],"duration":2,"failureMessages":[],"fullName":"ConsumerService deleteConsumers should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerService","deleteConsumers"],"duration":3,"failureMessages":[],"fullName":"ConsumerService deleteConsumers should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerService","getPendingEntries"],"duration":4,"failureMessages":[],"fullName":"ConsumerService getPendingEntries should get consumers list","status":"passed","title":"should get consumers list"},{"ancestorTitles":["ConsumerService","getPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getPendingEntries should throw error when key does not exists","status":"passed","title":"should throw error when key does not exists"},{"ancestorTitles":["ConsumerService","getPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getPendingEntries should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerService","getPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getPendingEntries should throw Not Found error when no group","status":"passed","title":"should throw Not Found error when no group"},{"ancestorTitles":["ConsumerService","getPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getPendingEntries should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerService","getPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService getPendingEntries should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerService","ackPendingEntries"],"duration":1,"failureMessages":[],"fullName":"ConsumerService ackPendingEntries ack pending entries","status":"passed","title":"ack pending entries"},{"ancestorTitles":["ConsumerService","ackPendingEntries"],"duration":1,"failureMessages":[],"fullName":"ConsumerService ackPendingEntries should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerService","ackPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService ackPendingEntries should proxy Not Found error","status":"passed","title":"should proxy Not Found error"},{"ancestorTitles":["ConsumerService","ackPendingEntries"],"duration":1,"failureMessages":[],"fullName":"ConsumerService ackPendingEntries should throw Bad Request when key does not exists","status":"passed","title":"should throw Bad Request when key does not exists"},{"ancestorTitles":["ConsumerService","ackPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService ackPendingEntries should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":8,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries claim pending entries","status":"passed","title":"claim pending entries"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":3,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries claim pending entries with additional args","status":"passed","title":"claim pending entries with additional args"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":3,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries claim pending entries with additional args and \"idle\" instead of \"time\"","status":"passed","title":"claim pending entries with additional args and \"idle\" instead of \"time\""},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":3,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries should proxy Not Found error","status":"passed","title":"should proxy Not Found error"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":1,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries should throw Bad Request when key does not exists","status":"passed","title":"should throw Bad Request when key does not exists"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerService","claimPendingEntries"],"duration":2,"failureMessages":[],"fullName":"ConsumerService claimPendingEntries should throw Internal Server error","status":"passed","title":"should throw Internal Server error"}]},{"numFailingTests":0,"numPassingTests":33,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501149977,"runtime":997,"slow":false,"start":1733501148980},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/z-set/z-set.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ZSetService","createZSet"],"duration":15,"failureMessages":[],"fullName":"ZSetService createZSet create zset with expiration","status":"passed","title":"create zset with expiration"},{"ancestorTitles":["ZSetService","createZSet"],"duration":2,"failureMessages":[],"fullName":"ZSetService createZSet create zset without expiration","status":"passed","title":"create zset without expiration"},{"ancestorTitles":["ZSetService","createZSet"],"duration":18,"failureMessages":[],"fullName":"ZSetService createZSet key with this name exist","status":"passed","title":"key with this name exist"},{"ancestorTitles":["ZSetService","createZSet"],"duration":8,"failureMessages":[],"fullName":"ZSetService createZSet try to use 'ZADD' command not for zset data type for createZSet","status":"passed","title":"try to use 'ZADD' command not for zset data type for createZSet"},{"ancestorTitles":["ZSetService","createZSet"],"duration":4,"failureMessages":[],"fullName":"ZSetService createZSet user don't have required permissions for createZSet","status":"passed","title":"user don't have required permissions for createZSet"},{"ancestorTitles":["ZSetService","createZSetWithExpiration"],"duration":2,"failureMessages":[],"fullName":"ZSetService createZSetWithExpiration succeed to create ZSet data type with expiration","status":"passed","title":"succeed to create ZSet data type with expiration"},{"ancestorTitles":["ZSetService","createZSetWithExpiration"],"duration":1,"failureMessages":[],"fullName":"ZSetService createZSetWithExpiration throw transaction error","status":"passed","title":"throw transaction error"},{"ancestorTitles":["ZSetService","getMembers"],"duration":4,"failureMessages":[],"fullName":"ZSetService getMembers get members sorted in asc","status":"passed","title":"get members sorted in asc"},{"ancestorTitles":["ZSetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService getMembers get members sorted in desc","status":"passed","title":"get members sorted in desc"},{"ancestorTitles":["ZSetService","getMembers"],"duration":3,"failureMessages":[],"fullName":"ZSetService getMembers should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["ZSetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService getMembers key with this name does not exist for getMembers","status":"passed","title":"key with this name does not exist for getMembers"},{"ancestorTitles":["ZSetService","getMembers"],"duration":3,"failureMessages":[],"fullName":"ZSetService getMembers try to use 'ZCARD' command not for zset data type","status":"passed","title":"try to use 'ZCARD' command not for zset data type"},{"ancestorTitles":["ZSetService","getMembers"],"duration":3,"failureMessages":[],"fullName":"ZSetService getMembers user don't have required permissions for getMembers","status":"passed","title":"user don't have required permissions for getMembers"},{"ancestorTitles":["ZSetService","addMembers"],"duration":1,"failureMessages":[],"fullName":"ZSetService addMembers succeed to add members to the ZSet data type","status":"passed","title":"succeed to add members to the ZSet data type"},{"ancestorTitles":["ZSetService","addMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService addMembers key with this name does not exist for addMembers","status":"passed","title":"key with this name does not exist for addMembers"},{"ancestorTitles":["ZSetService","addMembers"],"duration":9,"failureMessages":[],"fullName":"ZSetService addMembers try to use 'ZADD' command not for zset data type for addMembers","status":"passed","title":"try to use 'ZADD' command not for zset data type for addMembers"},{"ancestorTitles":["ZSetService","addMembers"],"duration":4,"failureMessages":[],"fullName":"ZSetService addMembers user don't have required permissions for addMembers","status":"passed","title":"user don't have required permissions for addMembers"},{"ancestorTitles":["ZSetService","updateMember"],"duration":3,"failureMessages":[],"fullName":"ZSetService updateMember succeed to update member in key","status":"passed","title":"succeed to update member in key"},{"ancestorTitles":["ZSetService","updateMember"],"duration":3,"failureMessages":[],"fullName":"ZSetService updateMember key with this name does not exist for updateMember","status":"passed","title":"key with this name does not exist for updateMember"},{"ancestorTitles":["ZSetService","updateMember"],"duration":3,"failureMessages":[],"fullName":"ZSetService updateMember member does not exist in key","status":"passed","title":"member does not exist in key"},{"ancestorTitles":["ZSetService","updateMember"],"duration":2,"failureMessages":[],"fullName":"ZSetService updateMember try to use 'ZADD' command not for zset data type for updateMember","status":"passed","title":"try to use 'ZADD' command not for zset data type for updateMember"},{"ancestorTitles":["ZSetService","updateMember"],"duration":3,"failureMessages":[],"fullName":"ZSetService updateMember user don't have required permissions for updateMember","status":"passed","title":"user don't have required permissions for updateMember"},{"ancestorTitles":["ZSetService","deleteMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService deleteMembers succeeded to delete members from ZSet data type","status":"passed","title":"succeeded to delete members from ZSet data type"},{"ancestorTitles":["ZSetService","deleteMembers"],"duration":3,"failureMessages":[],"fullName":"ZSetService deleteMembers key with this name does not exist for deleteMembers","status":"passed","title":"key with this name does not exist for deleteMembers"},{"ancestorTitles":["ZSetService","deleteMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService deleteMembers try to use 'ZREM' command not for set data type","status":"passed","title":"try to use 'ZREM' command not for set data type"},{"ancestorTitles":["ZSetService","deleteMembers"],"duration":3,"failureMessages":[],"fullName":"ZSetService deleteMembers user don't have required permissions for deleteMembers","status":"passed","title":"user don't have required permissions for deleteMembers"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":4,"failureMessages":[],"fullName":"ZSetService searchMembers succeeded to search members in ZSet data type","status":"passed","title":"succeeded to search members in ZSet data type"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":9,"failureMessages":[],"fullName":"ZSetService searchMembers succeed to find exact member in the z-set","status":"passed","title":"succeed to find exact member in the z-set"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService searchMembers failed to find exact member in the set","status":"passed","title":"failed to find exact member in the set"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService searchMembers should not call scan when math contains escaped glob","status":"passed","title":"should not call scan when math contains escaped glob"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":4,"failureMessages":[],"fullName":"ZSetService searchMembers key with this name does not exist for searchMembers","status":"passed","title":"key with this name does not exist for searchMembers"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":2,"failureMessages":[],"fullName":"ZSetService searchMembers try to use 'ZCARD' command not for zset data type","status":"passed","title":"try to use 'ZCARD' command not for zset data type"},{"ancestorTitles":["ZSetService","searchMembers"],"duration":3,"failureMessages":[],"fullName":"ZSetService searchMembers user don't have required permissions for searchMembers","status":"passed","title":"user don't have required permissions for searchMembers"}]},{"numFailingTests":0,"numPassingTests":33,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501151387,"runtime":1194,"slow":false,"start":1733501150193},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/list/list.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ListService","createList"],"duration":29,"failureMessages":[],"fullName":"ListService createList create list with expiration","status":"passed","title":"create list with expiration"},{"ancestorTitles":["ListService","createList"],"duration":5,"failureMessages":[],"fullName":"ListService createList create list without expiration","status":"passed","title":"create list without expiration"},{"ancestorTitles":["ListService","createList"],"duration":5,"failureMessages":[],"fullName":"ListService createList create list with expiration and push at the head","status":"passed","title":"create list with expiration and push at the head"},{"ancestorTitles":["ListService","createList"],"duration":146,"failureMessages":[],"fullName":"ListService createList key with this name exist","status":"passed","title":"key with this name exist"},{"ancestorTitles":["ListService","createList"],"duration":12,"failureMessages":[],"fullName":"ListService createList user don't have required permissions for createList","status":"passed","title":"user don't have required permissions for createList"},{"ancestorTitles":["ListService","pushElement"],"duration":3,"failureMessages":[],"fullName":"ListService pushElement succeed to insert element(s) at the tail of the list data type","status":"passed","title":"succeed to insert element(s) at the tail of the list data type"},{"ancestorTitles":["ListService","pushElement"],"duration":3,"failureMessages":[],"fullName":"ListService pushElement succeed to insert element(s) at the head of the list data type","status":"passed","title":"succeed to insert element(s) at the head of the list data type"},{"ancestorTitles":["ListService","pushElement"],"duration":4,"failureMessages":[],"fullName":"ListService pushElement key with this name does not exist for pushElement","status":"passed","title":"key with this name does not exist for pushElement"},{"ancestorTitles":["ListService","pushElement"],"duration":3,"failureMessages":[],"fullName":"ListService pushElement user don't have required permissions for pushElement","status":"passed","title":"user don't have required permissions for pushElement"},{"ancestorTitles":["ListService","getElements"],"duration":4,"failureMessages":[],"fullName":"ListService getElements succeed to get elements of the list","status":"passed","title":"succeed to get elements of the list"},{"ancestorTitles":["ListService","getElements"],"duration":3,"failureMessages":[],"fullName":"ListService getElements key with this name does not exist for getElements","status":"passed","title":"key with this name does not exist for getElements"},{"ancestorTitles":["ListService","getElements"],"duration":4,"failureMessages":[],"fullName":"ListService getElements try to use 'LLEN' command not for list data type","status":"passed","title":"try to use 'LLEN' command not for list data type"},{"ancestorTitles":["ListService","getElements"],"duration":4,"failureMessages":[],"fullName":"ListService getElements user don't have required permissions for getElements","status":"passed","title":"user don't have required permissions for getElements"},{"ancestorTitles":["ListService","getElement"],"duration":4,"failureMessages":[],"fullName":"ListService getElement try to use LINDEX command not for list data type","status":"passed","title":"try to use LINDEX command not for list data type"},{"ancestorTitles":["ListService","getElement"],"duration":4,"failureMessages":[],"fullName":"ListService getElement user hasn't permissions to LINDEX","status":"passed","title":"user hasn't permissions to LINDEX"},{"ancestorTitles":["ListService","getElement"],"duration":4,"failureMessages":[],"fullName":"ListService getElement user hasn't permissions to EXISTS","status":"passed","title":"user hasn't permissions to EXISTS"},{"ancestorTitles":["ListService","getElement"],"duration":4,"failureMessages":[],"fullName":"ListService getElement key with this name does not exists","status":"passed","title":"key with this name does not exists"},{"ancestorTitles":["ListService","getElement"],"duration":2,"failureMessages":[],"fullName":"ListService getElement index is out of range","status":"passed","title":"index is out of range"},{"ancestorTitles":["ListService","getElement"],"duration":4,"failureMessages":[],"fullName":"ListService getElement succeed to get List element by index","status":"passed","title":"succeed to get List element by index"},{"ancestorTitles":["ListService","setElement"],"duration":2,"failureMessages":[],"fullName":"ListService setElement succeed to set the list element at index","status":"passed","title":"succeed to set the list element at index"},{"ancestorTitles":["ListService","setElement"],"duration":4,"failureMessages":[],"fullName":"ListService setElement key with this name does not exist for setElement","status":"passed","title":"key with this name does not exist for setElement"},{"ancestorTitles":["ListService","setElement"],"duration":2,"failureMessages":[],"fullName":"ListService setElement try to use 'LSET' command not for list data type","status":"passed","title":"try to use 'LSET' command not for list data type"},{"ancestorTitles":["ListService","setElement"],"duration":2,"failureMessages":[],"fullName":"ListService setElement index for LSET coomand is of out of range","status":"passed","title":"index for LSET coomand is of out of range"},{"ancestorTitles":["ListService","setElement"],"duration":3,"failureMessages":[],"fullName":"ListService setElement user don't have required permissions","status":"passed","title":"user don't have required permissions"},{"ancestorTitles":["ListService","deleteElements"],"duration":2,"failureMessages":[],"fullName":"ListService deleteElements succeed to remove element from the tail","status":"passed","title":"succeed to remove element from the tail"},{"ancestorTitles":["ListService","deleteElements"],"duration":3,"failureMessages":[],"fullName":"ListService deleteElements succeed to remove element from the head","status":"passed","title":"succeed to remove element from the head"},{"ancestorTitles":["ListService","deleteElements"],"duration":3,"failureMessages":[],"fullName":"ListService deleteElements succeed to remove multiple elements from the tail","status":"passed","title":"succeed to remove multiple elements from the tail"},{"ancestorTitles":["ListService","deleteElements"],"duration":4,"failureMessages":[],"fullName":"ListService deleteElements try to use RPOP command not for list data type","status":"passed","title":"try to use RPOP command not for list data type"},{"ancestorTitles":["ListService","deleteElements"],"duration":3,"failureMessages":[],"fullName":"ListService deleteElements redis doesn't support 'RPOP' with 'count' argument","status":"passed","title":"redis doesn't support 'RPOP' with 'count' argument"},{"ancestorTitles":["ListService","deleteElements"],"duration":4,"failureMessages":[],"fullName":"ListService deleteElements user hasn't permissions to RPOP","status":"passed","title":"user hasn't permissions to RPOP"},{"ancestorTitles":["ListService","deleteElements"],"duration":2,"failureMessages":[],"fullName":"ListService deleteElements key with this name does not exists","status":"passed","title":"key with this name does not exists"},{"ancestorTitles":["ListService","_createListWithExpiration"],"duration":2,"failureMessages":[],"fullName":"ListService _createListWithExpiration shouldn't throw error","status":"passed","title":"shouldn't throw error"},{"ancestorTitles":["ListService","_createListWithExpiration"],"duration":2,"failureMessages":[],"fullName":"ListService _createListWithExpiration should throw error","status":"passed","title":"should throw error"}]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501152260,"runtime":632,"slow":false,"start":1733501151628},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/scanner/strategies/standalone.scanner.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":17,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should return appropriate value with filter by type","status":"passed","title":"should return appropriate value with filter by type"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should scan 2000 items when count provided more then 2k","status":"passed","title":"should scan 2000 items when count provided more then 2k"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":2,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should return keys names and type only","status":"passed","title":"should return keys names and type only"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":3,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should call scan 3 times and return appropriate value","status":"passed","title":"should call scan 3 times and return appropriate value"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":2,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should call scan N times until threshold exceeds","status":"passed","title":"should call scan N times until threshold exceeds"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":2,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should call scan N times until threshold exceeds (even when total 0)","status":"passed","title":"should call scan N times until threshold exceeds (even when total 0)"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should call scan with required args","status":"passed","title":"should call scan with required args"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys should throw error on scan command","status":"passed","title":"should throw error on scan command"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","get keys by glob patter"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys get keys by glob patter should call scan when math contains '?' glob","status":"passed","title":"should call scan when math contains '?' glob"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","get keys by glob patter"],"duration":2,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys get keys by glob patter should call scan when math contains '*' glob","status":"passed","title":"should call scan when math contains '*' glob"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","get keys by glob patter"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys get keys by glob patter should call scan when math contains '[ae]' glob","status":"passed","title":"should call scan when math contains '[ae]' glob"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","get keys by glob patter"],"duration":7,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys get keys by glob patter should call scan when math contains '[a-e]' glob","status":"passed","title":"should call scan when math contains '[a-e]' glob"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","get keys by glob patter"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys get keys by glob patter should call scan when math contains '[^e]' glob","status":"passed","title":"should call scan when math contains '[^e]' glob"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","get keys by glob patter"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys get keys by glob patter should not call scan when math contains escaped glob","status":"passed","title":"should not call scan when math contains escaped glob"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","find exact key"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys find exact key should find exact key when match is not glob patter","status":"passed","title":"should find exact key when match is not glob patter"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","find exact key"],"duration":2,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys find exact key should find exact key when match is escaped glob patter","status":"passed","title":"should find exact key when match is escaped glob patter"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","find exact key"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys find exact key should find exact key with correct type","status":"passed","title":"should find exact key with correct type"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","find exact key"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys find exact key should return empty array if key not exist","status":"passed","title":"should return empty array if key not exist"},{"ancestorTitles":["StandaloneScannerStrategy","getKeys","find exact key"],"duration":1,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeys find exact key should return empty array if key has wrong type","status":"passed","title":"should return empty array if key has wrong type"},{"ancestorTitles":["StandaloneScannerStrategy","getKeysInfo"],"duration":3,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeysInfo should return correct keys info","status":"passed","title":"should return correct keys info"},{"ancestorTitles":["StandaloneScannerStrategy","getKeysInfo"],"duration":2,"failureMessages":[],"fullName":"StandaloneScannerStrategy getKeysInfo should not call TYPE pipeline for keys with known type","status":"passed","title":"should not call TYPE pipeline for keys with known type"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501153315,"runtime":885,"slow":false,"start":1733501152430},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/keys.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["KeysService","getKeyInfo"],"duration":17,"failureMessages":[],"fullName":"KeysService getKeyInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["KeysService","getKeyInfo"],"duration":18,"failureMessages":[],"fullName":"KeysService getKeyInfo throw NotFound error when key not found for getKeyInfo","status":"passed","title":"throw NotFound error when key not found for getKeyInfo"},{"ancestorTitles":["KeysService","getKeyInfo"],"duration":11,"failureMessages":[],"fullName":"KeysService getKeyInfo user don't have required permissions for getKeyInfo","status":"passed","title":"user don't have required permissions for getKeyInfo"},{"ancestorTitles":["KeysService","getKeyInfo"],"duration":3,"failureMessages":[],"fullName":"KeysService getKeyInfo should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["KeysService","getKeysInfo"],"duration":1,"failureMessages":[],"fullName":"KeysService getKeysInfo should return keys with info","status":"passed","title":"should return keys with info"},{"ancestorTitles":["KeysService","getKeysInfo"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeysInfo should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["KeysService","getKeysInfo"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeysInfo user don't have required permissions for getKeyInfo","status":"passed","title":"user don't have required permissions for getKeyInfo"},{"ancestorTitles":["KeysService","getKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeys should return appropriate value for standalone database","status":"passed","title":"should return appropriate value for standalone database"},{"ancestorTitles":["KeysService","getKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeys should return appropriate value for cluster","status":"passed","title":"should return appropriate value for cluster"},{"ancestorTitles":["KeysService","getKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeys user don't have required permissions for getKeys","status":"passed","title":"user don't have required permissions for getKeys"},{"ancestorTitles":["KeysService","getKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeys scan per type not supported","status":"passed","title":"scan per type not supported"},{"ancestorTitles":["KeysService","getKeys"],"duration":1,"failureMessages":[],"fullName":"KeysService getKeys should call create browser history item if match !== \"*\"","status":"passed","title":"should call create browser history item if match !== \"*\""},{"ancestorTitles":["KeysService","getKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService getKeys should do not call create browser history item if match === \"*\"","status":"passed","title":"should do not call create browser history item if match === \"*\""},{"ancestorTitles":["KeysService","getKeys"],"duration":1,"failureMessages":[],"fullName":"KeysService getKeys should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["KeysService","deleteKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService deleteKeys succeeded to delete keys","status":"passed","title":"succeeded to delete keys"},{"ancestorTitles":["KeysService","deleteKeys"],"duration":3,"failureMessages":[],"fullName":"KeysService deleteKeys keys not found","status":"passed","title":"keys not found"},{"ancestorTitles":["KeysService","deleteKeys"],"duration":2,"failureMessages":[],"fullName":"KeysService deleteKeys user don't have required permissions for deleteKeys","status":"passed","title":"user don't have required permissions for deleteKeys"},{"ancestorTitles":["KeysService","renameKey"],"duration":2,"failureMessages":[],"fullName":"KeysService renameKey succeeded to rename key","status":"passed","title":"succeeded to rename key"},{"ancestorTitles":["KeysService","renameKey"],"duration":10,"failureMessages":[],"fullName":"KeysService renameKey key with keyName not exist","status":"passed","title":"key with keyName not exist"},{"ancestorTitles":["KeysService","renameKey"],"duration":2,"failureMessages":[],"fullName":"KeysService renameKey key with newKeyName already exists","status":"passed","title":"key with newKeyName already exists"},{"ancestorTitles":["KeysService","renameKey"],"duration":3,"failureMessages":[],"fullName":"KeysService renameKey user don't have required permissions for renameKey","status":"passed","title":"user don't have required permissions for renameKey"},{"ancestorTitles":["KeysService","updateTtl"],"duration":2,"failureMessages":[],"fullName":"KeysService updateTtl set expiration time","status":"passed","title":"set expiration time"},{"ancestorTitles":["KeysService","updateTtl"],"duration":3,"failureMessages":[],"fullName":"KeysService updateTtl remove the existing timeout on key","status":"passed","title":"remove the existing timeout on key"},{"ancestorTitles":["KeysService","updateTtl"],"duration":2,"failureMessages":[],"fullName":"KeysService updateTtl key not found","status":"passed","title":"key not found"},{"ancestorTitles":["KeysService","updateTtl"],"duration":3,"failureMessages":[],"fullName":"KeysService updateTtl user don't have required permissions for updateTtl","status":"passed","title":"user don't have required permissions for updateTtl"},{"ancestorTitles":["KeysService","removeKeyExpiration"],"duration":2,"failureMessages":[],"fullName":"KeysService removeKeyExpiration should remove key expiration","status":"passed","title":"should remove key expiration"},{"ancestorTitles":["KeysService","removeKeyExpiration"],"duration":2,"failureMessages":[],"fullName":"KeysService removeKeyExpiration key not found","status":"passed","title":"key not found"},{"ancestorTitles":["KeysService","removeKeyExpiration"],"duration":3,"failureMessages":[],"fullName":"KeysService removeKeyExpiration user don't have required permissions for removeKeyExpiration","status":"passed","title":"user don't have required permissions for removeKeyExpiration"}]},{"numFailingTests":0,"numPassingTests":24,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501155039,"runtime":1406,"slow":false,"start":1733501153633},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/repositories/local.database.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalDatabaseRepository","exists"],"duration":17,"failureMessages":[],"fullName":"LocalDatabaseRepository exists should return true when receive database entity","status":"passed","title":"should return true when receive database entity"},{"ancestorTitles":["LocalDatabaseRepository","exists"],"duration":10,"failureMessages":[],"fullName":"LocalDatabaseRepository exists should return false when no database received","status":"passed","title":"should return false when no database received"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return standalone database model","status":"passed","title":"should return standalone database model"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return standalone database model with ssh enabled (basic)","status":"passed","title":"should return standalone database model with ssh enabled (basic)"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return standalone database model with ssh enabled (privateKey + passphrase)","status":"passed","title":"should return standalone database model with ssh enabled (privateKey + passphrase)"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return standalone model with ca tls","status":"passed","title":"should return standalone model with ca tls"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return sentinel tls database model (with fields decryption)","status":"passed","title":"should return sentinel tls database model (with fields decryption)"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return cluster database model (with fields decryption)","status":"passed","title":"should return cluster database model (with fields decryption)"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":10,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return null when database was not found","status":"passed","title":"should return null when database was not found"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return standalone database model without omit fields","status":"passed","title":"should return standalone database model without omit fields"},{"ancestorTitles":["LocalDatabaseRepository","get"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository get should return standalone database model without nested fields","status":"passed","title":"should return standalone database model without nested fields"},{"ancestorTitles":["LocalDatabaseRepository","list"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository list should return list of databases with specific fields only","status":"passed","title":"should return list of databases with specific fields only"},{"ancestorTitles":["LocalDatabaseRepository","list"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository list should return list with cloud details","status":"passed","title":"should return list with cloud details"},{"ancestorTitles":["LocalDatabaseRepository","create"],"duration":5,"failureMessages":[],"fullName":"LocalDatabaseRepository create should create standalone database","status":"passed","title":"should create standalone database"},{"ancestorTitles":["LocalDatabaseRepository","create"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository create should create standalone database with cloud details","status":"passed","title":"should create standalone database with cloud details"},{"ancestorTitles":["LocalDatabaseRepository","create"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository create should create standalone database (with existing certificates)","status":"passed","title":"should create standalone database (with existing certificates)"},{"ancestorTitles":["LocalDatabaseRepository","create"],"duration":15,"failureMessages":[],"fullName":"LocalDatabaseRepository create should create standalone database (and certificates)","status":"passed","title":"should create standalone database (and certificates)"},{"ancestorTitles":["LocalDatabaseRepository","create"],"duration":4,"failureMessages":[],"fullName":"LocalDatabaseRepository create should throw an error if create called with cloud details and have the same entity","status":"passed","title":"should throw an error if create called with cloud details and have the same entity"},{"ancestorTitles":["LocalDatabaseRepository","update"],"duration":8,"failureMessages":[],"fullName":"LocalDatabaseRepository update should update standalone database","status":"passed","title":"should update standalone database"},{"ancestorTitles":["LocalDatabaseRepository","update"],"duration":10,"failureMessages":[],"fullName":"LocalDatabaseRepository update should update standalone database with ssh enabled (basic)","status":"passed","title":"should update standalone database with ssh enabled (basic)"},{"ancestorTitles":["LocalDatabaseRepository","update"],"duration":7,"failureMessages":[],"fullName":"LocalDatabaseRepository update should update standalone database with ssh enabled (privateKey)","status":"passed","title":"should update standalone database with ssh enabled (privateKey)"},{"ancestorTitles":["LocalDatabaseRepository","update"],"duration":6,"failureMessages":[],"fullName":"LocalDatabaseRepository update should update standalone database (with existing certificates)","status":"passed","title":"should update standalone database (with existing certificates)"},{"ancestorTitles":["LocalDatabaseRepository","update"],"duration":10,"failureMessages":[],"fullName":"LocalDatabaseRepository update should update standalone database (and certificates)","status":"passed","title":"should update standalone database (and certificates)"},{"ancestorTitles":["LocalDatabaseRepository","delete"],"duration":3,"failureMessages":[],"fullName":"LocalDatabaseRepository delete should delete database by id","status":"passed","title":"should delete database by id"}]},{"numFailingTests":0,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501155883,"runtime":671,"slow":false,"start":1733501155212},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/auth/cloud-auth.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudAuthService","getAuthStrategy"],"duration":4,"failureMessages":[],"fullName":"CloudAuthService getAuthStrategy should get Google auth strategy","status":"passed","title":"should get Google auth strategy"},{"ancestorTitles":["CloudAuthService","getAuthStrategy"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService getAuthStrategy should get GitHub auth strategy","status":"passed","title":"should get GitHub auth strategy"},{"ancestorTitles":["CloudAuthService","getAuthStrategy"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService getAuthStrategy should get Sso auth strategy","status":"passed","title":"should get Sso auth strategy"},{"ancestorTitles":["CloudAuthService","getAuthStrategy"],"duration":1,"failureMessages":[],"fullName":"CloudAuthService getAuthStrategy should throw CloudOauthUnknownAuthorizationRequestException error for unsupported strategy","status":"passed","title":"should throw CloudOauthUnknownAuthorizationRequestException error for unsupported strategy"},{"ancestorTitles":["CloudAuthService","getAuthorizationUrl"],"duration":3,"failureMessages":[],"fullName":"CloudAuthService getAuthorizationUrl should get Google auth url and add auth request to the pool","status":"passed","title":"should get Google auth url and add auth request to the pool"},{"ancestorTitles":["CloudAuthService","getAuthorizationUrl"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService getAuthorizationUrl should get GitHub auth url and add request to the pool but before clear it","status":"passed","title":"should get GitHub auth url and add request to the pool but before clear it"},{"ancestorTitles":["CloudAuthService","getAuthorizationUrl"],"duration":25,"failureMessages":[],"fullName":"CloudAuthService getAuthorizationUrl should throw an error if logout failed","status":"passed","title":"should throw an error if logout failed"},{"ancestorTitles":["CloudAuthService","getAuthorizationUrl"],"duration":7,"failureMessages":[],"fullName":"CloudAuthService getAuthorizationUrl should throw CloudOauthSsoUnsupportedEmailException when no email assign to SAML config","status":"passed","title":"should throw CloudOauthSsoUnsupportedEmailException when no email assign to SAML config"},{"ancestorTitles":["CloudAuthService","exchangeCode"],"duration":3,"failureMessages":[],"fullName":"CloudAuthService exchangeCode should exchange auth code to access token","status":"passed","title":"should exchange auth code to access token"},{"ancestorTitles":["CloudAuthService","exchangeCode"],"duration":4,"failureMessages":[],"fullName":"CloudAuthService exchangeCode should throw http error in case of an error","status":"passed","title":"should throw http error in case of an error"},{"ancestorTitles":["CloudAuthService","getAuthRequestInfo"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService getAuthRequestInfo get only few fields from r0equest and don't remove it","status":"passed","title":"get only few fields from r0equest and don't remove it"},{"ancestorTitles":["CloudAuthService","getAuthRequestInfo"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService getAuthRequestInfo should throw an error if request not found","status":"passed","title":"should throw an error if request not found"},{"ancestorTitles":["CloudAuthService","callback"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService callback should exchange code and remove auth request from the pool","status":"passed","title":"should exchange code and remove auth request from the pool"},{"ancestorTitles":["CloudAuthService","callback"],"duration":3,"failureMessages":[],"fullName":"CloudAuthService callback should throw an error if error field in query parameters (CloudOauthMisconfigurationException)","status":"passed","title":"should throw an error if error field in query parameters (CloudOauthMisconfigurationException)"},{"ancestorTitles":["CloudAuthService","callback"],"duration":1,"failureMessages":[],"fullName":"CloudAuthService callback should throw an error if error field in query parameters (CloudOauthMissedRequiredDataException)","status":"passed","title":"should throw an error if error field in query parameters (CloudOauthMissedRequiredDataException)"},{"ancestorTitles":["CloudAuthService","callback"],"duration":1,"failureMessages":[],"fullName":"CloudAuthService callback should throw an error if request not found","status":"passed","title":"should throw an error if request not found"},{"ancestorTitles":["CloudAuthService","revokeRefreshToken"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService revokeRefreshToken should revoke refresh token","status":"passed","title":"should revoke refresh token"},{"ancestorTitles":["CloudAuthService","revokeRefreshToken"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService revokeRefreshToken should not fail and should not make a http call when there is no refreshToken","status":"passed","title":"should not fail and should not make a http call when there is no refreshToken"},{"ancestorTitles":["CloudAuthService","revokeRefreshToken"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService revokeRefreshToken should not fail in case of an any error","status":"passed","title":"should not fail in case of an any error"},{"ancestorTitles":["CloudAuthService","renewTokens"],"duration":3,"failureMessages":[],"fullName":"CloudAuthService renewTokens should renew tokens","status":"passed","title":"should renew tokens"},{"ancestorTitles":["CloudAuthService","renewTokens"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService renewTokens should throw CloudApiUnauthorizedException in case of an any error","status":"passed","title":"should throw CloudApiUnauthorizedException in case of an any error"},{"ancestorTitles":["CloudAuthService","handleCallback"],"duration":2,"failureMessages":[],"fullName":"CloudAuthService handleCallback should successfully handle auth callback","status":"passed","title":"should successfully handle auth callback"},{"ancestorTitles":["CloudAuthService","handleCallback"],"duration":3,"failureMessages":[],"fullName":"CloudAuthService handleCallback should not fail if async callback failed","status":"passed","title":"should not fail if async callback failed"},{"ancestorTitles":["CloudAuthService","handleCallback"],"duration":3,"failureMessages":[],"fullName":"CloudAuthService handleCallback should not fail if sync callback failed","status":"passed","title":"should not fail if sync callback failed"},{"ancestorTitles":["CloudAuthService","handleCallback"],"duration":9,"failureMessages":[],"fullName":"CloudAuthService handleCallback should response with an error and call callback","status":"passed","title":"should response with an error and call callback"}]},{"numFailingTests":0,"numPassingTests":34,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501157155,"runtime":1092,"slow":false,"start":1733501156063},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/rdi-pipeline.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiPipelineService"],"duration":7,"failureMessages":[],"fullName":"RdiPipelineService should be defined","status":"passed","title":"should be defined"},{"ancestorTitles":["RdiPipelineService","getSchema"],"duration":20,"failureMessages":[],"fullName":"RdiPipelineService getSchema should call getSchema on the RdiClientProvider and return the result","status":"passed","title":"should call getSchema on the RdiClientProvider and return the result"},{"ancestorTitles":["RdiPipelineService","getPipeline"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService getPipeline should call getPipeline on the RdiClientProvider and return the result","status":"passed","title":"should call getPipeline on the RdiClientProvider and return the result"},{"ancestorTitles":["RdiPipelineService","getPipeline"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getPipeline should call sendRdiPipelineFetched on the RdiPipelineAnalytics if successful","status":"passed","title":"should call sendRdiPipelineFetched on the RdiPipelineAnalytics if successful"},{"ancestorTitles":["RdiPipelineService","getPipeline"],"duration":58,"failureMessages":[],"fullName":"RdiPipelineService getPipeline should call sendRdiPipelineFetchFailed on the RdiPipelineAnalytics and throw an error if unsuccessful","status":"passed","title":"should call sendRdiPipelineFetchFailed on the RdiPipelineAnalytics and throw an error if unsuccessful"},{"ancestorTitles":["RdiPipelineService","dryRunJob"],"duration":9,"failureMessages":[],"fullName":"RdiPipelineService dryRunJob should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","dryRunJob"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService dryRunJob should call dryRunJob on the client with the correct dto","status":"passed","title":"should call dryRunJob on the client with the correct dto"},{"ancestorTitles":["RdiPipelineService","dryRunJob"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService dryRunJob should return the result of dryRunJob on the client","status":"passed","title":"should return the result of dryRunJob on the client"},{"ancestorTitles":["RdiPipelineService","deploy"],"duration":16,"failureMessages":[],"fullName":"RdiPipelineService deploy should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","deploy"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService deploy should call deploy on the client with the correct dto","status":"passed","title":"should call deploy on the client with the correct dto"},{"ancestorTitles":["RdiPipelineService","deploy"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService deploy should call sendRdiPipelineDeployed on analytics if deploy succeeds","status":"passed","title":"should call sendRdiPipelineDeployed on analytics if deploy succeeds"},{"ancestorTitles":["RdiPipelineService","deploy"],"duration":9,"failureMessages":[],"fullName":"RdiPipelineService deploy should call sendRdiPipelineDeployFailed on analytics if deploy fails","status":"passed","title":"should call sendRdiPipelineDeployFailed on analytics if deploy fails"},{"ancestorTitles":["RdiPipelineService","deploy"],"duration":7,"failureMessages":[],"fullName":"RdiPipelineService deploy should throw an error if deploy fails","status":"passed","title":"should throw an error if deploy fails"},{"ancestorTitles":["RdiPipelineService","startPipeline"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService startPipeline should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","startPipeline"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService startPipeline should throw an error if startPipeline fails","status":"passed","title":"should throw an error if startPipeline fails"},{"ancestorTitles":["RdiPipelineService","stopPipeline"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService stopPipeline should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","stopPipeline"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService stopPipeline should throw an error if stopPipeline fails","status":"passed","title":"should throw an error if stopPipeline fails"},{"ancestorTitles":["RdiPipelineService","resetPipeline"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService resetPipeline should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","resetPipeline"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService resetPipeline should throw an error if resetPipeline fails","status":"passed","title":"should throw an error if resetPipeline fails"},{"ancestorTitles":["RdiPipelineService","testConnections"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService testConnections should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","testConnections"],"duration":31,"failureMessages":[],"fullName":"RdiPipelineService testConnections should call testConnections on the client with the correct config","status":"passed","title":"should call testConnections on the client with the correct config"},{"ancestorTitles":["RdiPipelineService","testConnections"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService testConnections should return the result of testConnections on the client","status":"passed","title":"should return the result of testConnections on the client"},{"ancestorTitles":["RdiPipelineService","getStrategies"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getStrategies should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","getStrategies"],"duration":13,"failureMessages":[],"fullName":"RdiPipelineService getStrategies should call getStrategies on the client","status":"passed","title":"should call getStrategies on the client"},{"ancestorTitles":["RdiPipelineService","getStrategies"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService getStrategies should return the result of getStrategies on the client","status":"passed","title":"should return the result of getStrategies on the client"},{"ancestorTitles":["RdiPipelineService","getConfigTemplate"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getConfigTemplate should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","getConfigTemplate"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getConfigTemplate should call getConfigTemplate on the client with the correct arguments","status":"passed","title":"should call getConfigTemplate on the client with the correct arguments"},{"ancestorTitles":["RdiPipelineService","getConfigTemplate"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService getConfigTemplate should return the result of getConfigTemplate on the client","status":"passed","title":"should return the result of getConfigTemplate on the client"},{"ancestorTitles":["RdiPipelineService","getPipelineStatus"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getPipelineStatus should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","getPipelineStatus"],"duration":16,"failureMessages":[],"fullName":"RdiPipelineService getPipelineStatus should call getPipelineStatus on the client","status":"passed","title":"should call getPipelineStatus on the client"},{"ancestorTitles":["RdiPipelineService","getPipelineStatus"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getPipelineStatus should return the result of getPipelineStatus on the client","status":"passed","title":"should return the result of getPipelineStatus on the client"},{"ancestorTitles":["RdiPipelineService","getJobFunctions"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineService getJobFunctions should call getOrCreate on rdiClientProvider with the correct metadata","status":"passed","title":"should call getOrCreate on rdiClientProvider with the correct metadata"},{"ancestorTitles":["RdiPipelineService","getJobFunctions"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getJobFunctions should call getJobFunctions on the client","status":"passed","title":"should call getJobFunctions on the client"},{"ancestorTitles":["RdiPipelineService","getJobFunctions"],"duration":3,"failureMessages":[],"fullName":"RdiPipelineService getJobFunctions should return the result of getJobFunctions on the client","status":"passed","title":"should return the result of getJobFunctions on the client"}]},{"numFailingTests":0,"numPassingTests":42,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501158116,"runtime":651,"slow":false,"start":1733501157465},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/providers/feature-flag/strategies/feature.flag.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":4,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false for range: []","status":"passed","title":"should return false for range: []"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return true for range: [0,100]","status":"passed","title":"should return true for range: [0,100]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return true for range: [0,50]","status":"passed","title":"should return true for range: [0,50]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return true for range: [0,1,2,3,5,10]","status":"passed","title":"should return true for range: [0,1,2,3,5,10]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":0,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false for range: [0,1]","status":"passed","title":"should return false for range: [0,1]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":0,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false for range: [5,-600]","status":"passed","title":"should return false for range: [5,-600]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false for range: [100,-600]","status":"passed","title":"should return false for range: [100,-600]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false for range: [0,0]","status":"passed","title":"should return false for range: [0,0]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false for range: [0,7.68]","status":"passed","title":"should return false for range: [0,7.68]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return true for range: [0,7.6899999999999995]","status":"passed","title":"should return true for range: [0,7.6899999999999995]"},{"ancestorTitles":["FeatureFlagStrategy","isInTargetRange"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy isInTargetRange should return false in case of any error","status":"passed","title":"should return false in case of any error"},{"ancestorTitles":["FeatureFlagStrategy","getServerState"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy getServerState should return server state","status":"passed","title":"should return server state"},{"ancestorTitles":["FeatureFlagStrategy","getServerState"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy getServerState should return nulls in case of any error","status":"passed","title":"should return nulls in case of any error"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return when no filters defined","status":"passed","title":"should return when no filters defined"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return true for single filter by agreements (eq)","status":"passed","title":"should return true for single filter by agreements (eq)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false for single filter by agreements (eq)","status":"passed","title":"should return false for single filter by agreements (eq)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false for single filter by agreements (neq)","status":"passed","title":"should return false for single filter by agreements (neq)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false for unsupported condition (unsupported)","status":"passed","title":"should return false for unsupported condition (unsupported)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false numeric settings (eq)","status":"passed","title":"should return false numeric settings (eq)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false for numeric settings (gt)","status":"passed","title":"should return false for numeric settings (gt)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return true for numeric settings (gt)","status":"passed","title":"should return true for numeric settings (gt)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return true numeric settings (gte)","status":"passed","title":"should return true numeric settings (gte)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false for numeric settings (lt)","status":"passed","title":"should return false for numeric settings (lt)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return true for numeric settings (lt)","status":"passed","title":"should return true for numeric settings (lt)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":8,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return true numeric settings (lte)","status":"passed","title":"should return true numeric settings (lte)"},{"ancestorTitles":["FeatureFlagStrategy","filter"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy filter should return false in case of an error","status":"passed","title":"should return false in case of an error"},{"ancestorTitles":["FeatureFlagStrategy","filter (complex)"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter (complex) should return true since 2nd \"or\" condition is true","status":"passed","title":"should return true since 2nd \"or\" condition is true"},{"ancestorTitles":["FeatureFlagStrategy","filter (complex)"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy filter (complex) should return false since 2nd \"or\" condition is false due to \"and\" inside is false","status":"passed","title":"should return false since 2nd \"or\" condition is false due to \"and\" inside is false"},{"ancestorTitles":["FeatureFlagStrategy","filter (complex)"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter (complex) should return true since 2nd \"or\" condition is true due to \"or\" inside is true","status":"passed","title":"should return true since 2nd \"or\" condition is true due to \"or\" inside is true"},{"ancestorTitles":["FeatureFlagStrategy","filter (complex)"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy filter (complex) should return false since all 2 or conditions are false","status":"passed","title":"should return false since all 2 or conditions are false"},{"ancestorTitles":["FeatureFlagStrategy","filter (complex)"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy filter (complex) should return true since 1st \"or\" condition is true","status":"passed","title":"should return true since 1st \"or\" condition is true"},{"ancestorTitles":["FeatureFlagStrategy","checkFilter"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy checkFilter should return false in case of any error","status":"passed","title":"should return false in case of any error"},{"ancestorTitles":["FeatureFlagStrategy","checkAndFilters"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy checkAndFilters should return true since all filters returned true","status":"passed","title":"should return true since all filters returned true"},{"ancestorTitles":["FeatureFlagStrategy","checkAndFilters"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy checkAndFilters should return false since at least one filter returned false","status":"passed","title":"should return false since at least one filter returned false"},{"ancestorTitles":["FeatureFlagStrategy","checkAndFilters"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy checkAndFilters should return false due to error","status":"passed","title":"should return false due to error"},{"ancestorTitles":["FeatureFlagStrategy","checkOrFilters"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy checkOrFilters should return true since at least one filter returned true","status":"passed","title":"should return true since at least one filter returned true"},{"ancestorTitles":["FeatureFlagStrategy","checkOrFilters"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy checkOrFilters should return false since all filters returned false","status":"passed","title":"should return false since all filters returned false"},{"ancestorTitles":["FeatureFlagStrategy","checkOrFilters"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy checkOrFilters should return false due to error","status":"passed","title":"should return false due to error"},{"ancestorTitles":["FeatureFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy calculate should return false since feature control number is out of range","status":"passed","title":"should return false since feature control number is out of range"},{"ancestorTitles":["FeatureFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy calculate should return false since feature filters does not match","status":"passed","title":"should return false since feature filters does not match"},{"ancestorTitles":["FeatureFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagStrategy calculate should return true since all checks passes","status":"passed","title":"should return true since all checks passes"},{"ancestorTitles":["FeatureFlagStrategy","DefaultFlagStrategy"],"duration":2,"failureMessages":[],"fullName":"FeatureFlagStrategy DefaultFlagStrategy should always return false","status":"passed","title":"should always return false"}]},{"numFailingTests":0,"numPassingTests":35,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501165869,"runtime":7581,"slow":true,"start":1733501158288},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/client/api.rdi.client.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ApiRdiClient","getSchema"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient getSchema should return schema","status":"passed","title":"should return schema"},{"ancestorTitles":["ApiRdiClient","getSchema"],"duration":16,"failureMessages":[],"fullName":"ApiRdiClient getSchema should throw error if request fails","status":"passed","title":"should throw error if request fails"},{"ancestorTitles":["ApiRdiClient","getPipeline"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient getPipeline should return pipeline","status":"passed","title":"should return pipeline"},{"ancestorTitles":["ApiRdiClient","getPipeline"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient getPipeline should throw error if request fails","status":"passed","title":"should throw error if request fails"},{"ancestorTitles":["ApiRdiClient","getStrategies"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getStrategies should return strategies data when API call is successful","status":"passed","title":"should return strategies data when API call is successful"},{"ancestorTitles":["ApiRdiClient","getStrategies"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient getStrategies should throw an error when API call fails","status":"passed","title":"should throw an error when API call fails"},{"ancestorTitles":["ApiRdiClient","getConfigTemplate"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getConfigTemplate should return the config template when the API call is successful","status":"passed","title":"should return the config template when the API call is successful"},{"ancestorTitles":["ApiRdiClient","getConfigTemplate"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getConfigTemplate should throw an error when the API call fails","status":"passed","title":"should throw an error when the API call fails"},{"ancestorTitles":["ApiRdiClient","getJobTemplate"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getJobTemplate should return the job template when the API call is successful","status":"passed","title":"should return the job template when the API call is successful"},{"ancestorTitles":["ApiRdiClient","getJobTemplate"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient getJobTemplate should throw an error when the API call fails","status":"passed","title":"should throw an error when the API call fails"},{"ancestorTitles":["ApiRdiClient","deploy"],"duration":1003,"failureMessages":[],"fullName":"ApiRdiClient deploy should deploy the pipeline and poll for status","status":"passed","title":"should deploy the pipeline and poll for status"},{"ancestorTitles":["ApiRdiClient","deploy"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient deploy should throw an error if the deployment fails","status":"passed","title":"should throw an error if the deployment fails"},{"ancestorTitles":["ApiRdiClient","startPipeline"],"duration":1002,"failureMessages":[],"fullName":"ApiRdiClient startPipeline should start the pipeline and poll for status","status":"passed","title":"should start the pipeline and poll for status"},{"ancestorTitles":["ApiRdiClient","startPipeline"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient startPipeline should throw an error if start pipeline fails","status":"passed","title":"should throw an error if start pipeline fails"},{"ancestorTitles":["ApiRdiClient","stopPipeline"],"duration":1002,"failureMessages":[],"fullName":"ApiRdiClient stopPipeline should stop the pipeline and poll for status","status":"passed","title":"should stop the pipeline and poll for status"},{"ancestorTitles":["ApiRdiClient","stopPipeline"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient stopPipeline should throw an error if stop pipeline fails","status":"passed","title":"should throw an error if stop pipeline fails"},{"ancestorTitles":["ApiRdiClient","resetPipeline"],"duration":1001,"failureMessages":[],"fullName":"ApiRdiClient resetPipeline should reset the pipeline and poll for status","status":"passed","title":"should reset the pipeline and poll for status"},{"ancestorTitles":["ApiRdiClient","resetPipeline"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient resetPipeline should throw an error if reset pipeline fails","status":"passed","title":"should throw an error if reset pipeline fails"},{"ancestorTitles":["ApiRdiClient","dryRunJob"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient dryRunJob should call the RDI client with the correct URL and data","status":"passed","title":"should call the RDI client with the correct URL and data"},{"ancestorTitles":["ApiRdiClient","dryRunJob"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient dryRunJob should throw an error if the client call fails","status":"passed","title":"should throw an error if the client call fails"},{"ancestorTitles":["ApiRdiClient","testConnections"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient testConnections should return a successful response","status":"passed","title":"should return a successful response"},{"ancestorTitles":["ApiRdiClient","testConnections"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient testConnections should throw an error if the request fails","status":"passed","title":"should throw an error if the request fails"},{"ancestorTitles":["ApiRdiClient","getPipelineStatus"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getPipelineStatus should return pipeline status when API call is successful","status":"passed","title":"should return pipeline status when API call is successful"},{"ancestorTitles":["ApiRdiClient","getPipelineStatus"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getPipelineStatus should throw an error when API call fails","status":"passed","title":"should throw an error when API call fails"},{"ancestorTitles":["ApiRdiClient","getStatistics"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient getStatistics should return success status and data when API call succeeds","status":"passed","title":"should return success status and data when API call succeeds"},{"ancestorTitles":["ApiRdiClient","getStatistics"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getStatistics should return fail status and error message when API call fails","status":"passed","title":"should return fail status and error message when API call fails"},{"ancestorTitles":["ApiRdiClient","getJobFunctions"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getJobFunctions should return job functions","status":"passed","title":"should return job functions"},{"ancestorTitles":["ApiRdiClient","getJobFunctions"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient getJobFunctions should throw an error if the API call fails","status":"passed","title":"should throw an error if the API call fails"},{"ancestorTitles":["ApiRdiClient","connect"],"duration":2,"failureMessages":[],"fullName":"ApiRdiClient connect should set auth and authorization headers on successful login","status":"passed","title":"should set auth and authorization headers on successful login"},{"ancestorTitles":["ApiRdiClient","connect"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient connect should throw an error if login fails","status":"passed","title":"should throw an error if login fails"},{"ancestorTitles":["ApiRdiClient","ensureAuth"],"duration":1,"failureMessages":[],"fullName":"ApiRdiClient ensureAuth should not call connect if token is not expired","status":"passed","title":"should not call connect if token is not expired"},{"ancestorTitles":["ApiRdiClient","ensureAuth"],"duration":0,"failureMessages":[],"fullName":"ApiRdiClient ensureAuth should call connect if token is expired","status":"passed","title":"should call connect if token is expired"},{"ancestorTitles":["ApiRdiClient","pollActionStatus"],"duration":1002,"failureMessages":[],"fullName":"ApiRdiClient pollActionStatus should return response data on success","status":"passed","title":"should return response data on success"},{"ancestorTitles":["ApiRdiClient","pollActionStatus"],"duration":1001,"failureMessages":[],"fullName":"ApiRdiClient pollActionStatus should throw an error if action status is failed","status":"passed","title":"should throw an error if action status is failed"},{"ancestorTitles":["ApiRdiClient","pollActionStatus"],"duration":1003,"failureMessages":[],"fullName":"ApiRdiClient pollActionStatus should throw an error if an error occurs during polling","status":"passed","title":"should throw an error if an error occurs during polling"}]},{"numFailingTests":0,"numPassingTests":23,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501166840,"runtime":804,"slow":false,"start":1733501166036},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/stream/services/stream.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StreamService","createStream"],"duration":23,"failureMessages":[],"fullName":"StreamService createStream create stream with expiration","status":"passed","title":"create stream with expiration"},{"ancestorTitles":["StreamService","createStream"],"duration":2,"failureMessages":[],"fullName":"StreamService createStream create stream without expiration","status":"passed","title":"create stream without expiration"},{"ancestorTitles":["StreamService","createStream"],"duration":17,"failureMessages":[],"fullName":"StreamService createStream should throw error key exists","status":"passed","title":"should throw error key exists"},{"ancestorTitles":["StreamService","createStream"],"duration":3,"failureMessages":[],"fullName":"StreamService createStream should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["StreamService","createStream"],"duration":3,"failureMessages":[],"fullName":"StreamService createStream should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["StreamService","createStream"],"duration":2,"failureMessages":[],"fullName":"StreamService createStream should throw Bad Request when incorrect ID","status":"passed","title":"should throw Bad Request when incorrect ID"},{"ancestorTitles":["StreamService","createStream"],"duration":3,"failureMessages":[],"fullName":"StreamService createStream should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["StreamService","addEntries"],"duration":2,"failureMessages":[],"fullName":"StreamService addEntries add entries","status":"passed","title":"add entries"},{"ancestorTitles":["StreamService","addEntries"],"duration":3,"failureMessages":[],"fullName":"StreamService addEntries should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["StreamService","addEntries"],"duration":3,"failureMessages":[],"fullName":"StreamService addEntries should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["StreamService","addEntries"],"duration":2,"failureMessages":[],"fullName":"StreamService addEntries should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["StreamService","addEntries"],"duration":9,"failureMessages":[],"fullName":"StreamService addEntries should throw Bad Request when incorrect ID","status":"passed","title":"should throw Bad Request when incorrect ID"},{"ancestorTitles":["StreamService","addEntries"],"duration":3,"failureMessages":[],"fullName":"StreamService addEntries should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["StreamService","get entries from empty stream"],"duration":3,"failureMessages":[],"fullName":"StreamService get entries from empty stream Should return stream with 0 entries","status":"passed","title":"Should return stream with 0 entries"},{"ancestorTitles":["StreamService","getEntries"],"duration":5,"failureMessages":[],"fullName":"StreamService getEntries get entries DESC","status":"passed","title":"get entries DESC"},{"ancestorTitles":["StreamService","getEntries"],"duration":4,"failureMessages":[],"fullName":"StreamService getEntries get entries ASC","status":"passed","title":"get entries ASC"},{"ancestorTitles":["StreamService","getEntries"],"duration":4,"failureMessages":[],"fullName":"StreamService getEntries should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["StreamService","getEntries"],"duration":3,"failureMessages":[],"fullName":"StreamService getEntries should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["StreamService","getEntries"],"duration":5,"failureMessages":[],"fullName":"StreamService getEntries should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["StreamService","getEntries"],"duration":13,"failureMessages":[],"fullName":"StreamService getEntries should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["StreamService","deleteEntries"],"duration":4,"failureMessages":[],"fullName":"StreamService deleteEntries delete entries","status":"passed","title":"delete entries"},{"ancestorTitles":["StreamService","deleteEntries"],"duration":6,"failureMessages":[],"fullName":"StreamService deleteEntries should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["StreamService","deleteEntries"],"duration":3,"failureMessages":[],"fullName":"StreamService deleteEntries should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501168200,"runtime":1145,"slow":false,"start":1733501167055},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/bulk-import.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkImportService","executeBatch"],"duration":4,"failureMessages":[],"fullName":"BulkImportService executeBatch should execute batch in pipeline for standalone","status":"passed","title":"should execute batch in pipeline for standalone"},{"ancestorTitles":["BulkImportService","executeBatch"],"duration":1,"failureMessages":[],"fullName":"BulkImportService executeBatch should execute batch in pipeline for standalone with errors","status":"passed","title":"should execute batch in pipeline for standalone with errors"},{"ancestorTitles":["BulkImportService","executeBatch"],"duration":24,"failureMessages":[],"fullName":"BulkImportService executeBatch should return all failed in case of global error","status":"passed","title":"should return all failed in case of global error"},{"ancestorTitles":["BulkImportService","executeBatch"],"duration":2,"failureMessages":[],"fullName":"BulkImportService executeBatch should execute batch of commands without pipeline for cluster","status":"passed","title":"should execute batch of commands without pipeline for cluster"},{"ancestorTitles":["BulkImportService","import"],"duration":4,"failureMessages":[],"fullName":"BulkImportService import should import data","status":"passed","title":"should import data"},{"ancestorTitles":["BulkImportService","import"],"duration":271,"failureMessages":[],"fullName":"BulkImportService import should import data (100K) from file in batches 10K each","status":"passed","title":"should import data (100K) from file in batches 10K each"},{"ancestorTitles":["BulkImportService","import"],"duration":46,"failureMessages":[],"fullName":"BulkImportService import should import data (10K) from file in batches 10K each","status":"passed","title":"should import data (10K) from file in batches 10K each"},{"ancestorTitles":["BulkImportService","import"],"duration":3,"failureMessages":[],"fullName":"BulkImportService import should not import any data due to parse error","status":"passed","title":"should not import any data due to parse error"},{"ancestorTitles":["BulkImportService","import"],"duration":3,"failureMessages":[],"fullName":"BulkImportService import should ignore blank lines","status":"passed","title":"should ignore blank lines"},{"ancestorTitles":["BulkImportService","import"],"duration":3,"failureMessages":[],"fullName":"BulkImportService import should throw an error in case of global error","status":"passed","title":"should throw an error in case of global error"},{"ancestorTitles":["BulkImportService","uploadFromTutorial"],"duration":1,"failureMessages":[],"fullName":"BulkImportService uploadFromTutorial should import file by path","status":"passed","title":"should import file by path"},{"ancestorTitles":["BulkImportService","uploadFromTutorial"],"duration":1,"failureMessages":[],"fullName":"BulkImportService uploadFromTutorial should import file by path with static","status":"passed","title":"should import file by path with static"},{"ancestorTitles":["BulkImportService","uploadFromTutorial"],"duration":1,"failureMessages":[],"fullName":"BulkImportService uploadFromTutorial should normalize path before importing and not search for file outside home folder","status":"passed","title":"should normalize path before importing and not search for file outside home folder"},{"ancestorTitles":["BulkImportService","uploadFromTutorial"],"duration":3,"failureMessages":[],"fullName":"BulkImportService uploadFromTutorial should normalize path before importing and throw an error when search for file outside home folder (relative)","status":"passed","title":"should normalize path before importing and throw an error when search for file outside home folder (relative)"},{"ancestorTitles":["BulkImportService","uploadFromTutorial"],"duration":3,"failureMessages":[],"fullName":"BulkImportService uploadFromTutorial should throw BadRequest when no file found","status":"passed","title":"should throw BadRequest when no file found"},{"ancestorTitles":["BulkImportService","importDefaultData"],"duration":4,"failureMessages":[],"fullName":"BulkImportService importDefaultData should import default data for 2 known modules","status":"passed","title":"should import default data for 2 known modules"},{"ancestorTitles":["BulkImportService","importDefaultData"],"duration":3,"failureMessages":[],"fullName":"BulkImportService importDefaultData should import default data for search module","status":"passed","title":"should import default data for search module"},{"ancestorTitles":["BulkImportService","importDefaultData"],"duration":4,"failureMessages":[],"fullName":"BulkImportService importDefaultData should import default data for searchlight module","status":"passed","title":"should import default data for searchlight module"},{"ancestorTitles":["BulkImportService","importDefaultData"],"duration":9,"failureMessages":[],"fullName":"BulkImportService importDefaultData should import default data for core module only","status":"passed","title":"should import default data for core module only"},{"ancestorTitles":["BulkImportService","importDefaultData"],"duration":3,"failureMessages":[],"fullName":"BulkImportService importDefaultData should throw an error in case when something went wrong","status":"passed","title":"should throw an error in case when something went wrong"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501169515,"runtime":1116,"slow":false,"start":1733501168399},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/providers/database-info.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseInfoProvider","getDatabasesCount"],"duration":25,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabasesCount get databases count","status":"passed","title":"get databases count"},{"ancestorTitles":["DatabaseInfoProvider","getDatabasesCount"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabasesCount get databases count for limited redis db","status":"passed","title":"get databases count for limited redis db"},{"ancestorTitles":["DatabaseInfoProvider","getDatabasesCount"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabasesCount failed to get databases config","status":"passed","title":"failed to get databases config"},{"ancestorTitles":["DatabaseInfoProvider","getClientListInfo"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider getClientListInfo get client list info","status":"passed","title":"get client list info"},{"ancestorTitles":["DatabaseInfoProvider","getClientListInfo"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoProvider getClientListInfo failed to get client list","status":"passed","title":"failed to get client list"},{"ancestorTitles":["DatabaseInfoProvider","getDatabaseCountFromKeyspace"],"duration":1,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabaseCountFromKeyspace should return 1 since db0 keys presented only","status":"passed","title":"should return 1 since db0 keys presented only"},{"ancestorTitles":["DatabaseInfoProvider","getDatabaseCountFromKeyspace"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabaseCountFromKeyspace should return 7 since db6 is the last logical databases with known keys","status":"passed","title":"should return 7 since db6 is the last logical databases with known keys"},{"ancestorTitles":["DatabaseInfoProvider","getDatabaseCountFromKeyspace"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabaseCountFromKeyspace should return 1 when empty keySpace provided","status":"passed","title":"should return 1 when empty keySpace provided"},{"ancestorTitles":["DatabaseInfoProvider","getDatabaseCountFromKeyspace"],"duration":1,"failureMessages":[],"fullName":"DatabaseInfoProvider getDatabaseCountFromKeyspace should return 1 when incorrect keySpace provided","status":"passed","title":"should return 1 when incorrect keySpace provided"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseModules"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseModules get modules by using MODULE LIST command (without filters)","status":"passed","title":"get modules by using MODULE LIST command (without filters)"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseModules"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseModules get modules by using MODULE LIST command (with filters applied)","status":"passed","title":"get modules by using MODULE LIST command (with filters applied)"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseModules"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseModules detect all modules by using COMMAND INFO command (without filter)","status":"passed","title":"detect all modules by using COMMAND INFO command (without filter)"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseModules"],"duration":4,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseModules detect all modules by using COMMAND INFO command (with filter)","status":"passed","title":"detect all modules by using COMMAND INFO command (with filter)"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseModules"],"duration":4,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseModules detect only RediSearch module by using COMMAND INFO command","status":"passed","title":"detect only RediSearch module by using COMMAND INFO command"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseModules"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseModules should return empty array if MODULE LIST and COMMAND command not allowed","status":"passed","title":"should return empty array if MODULE LIST and COMMAND command not allowed"},{"ancestorTitles":["DatabaseInfoProvider","determineDatabaseServer"],"duration":13,"failureMessages":[],"fullName":"DatabaseInfoProvider determineDatabaseServer get modules by using MODULE LIST command","status":"passed","title":"get modules by using MODULE LIST command"},{"ancestorTitles":["DatabaseInfoProvider","getRedisDBSize"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoProvider getRedisDBSize get dbsize for redis standalone","status":"passed","title":"get dbsize for redis standalone"},{"ancestorTitles":["DatabaseInfoProvider","getRedisDBSize"],"duration":8,"failureMessages":[],"fullName":"DatabaseInfoProvider getRedisDBSize get general info for redis cluster","status":"passed","title":"get general info for redis cluster"},{"ancestorTitles":["DatabaseInfoProvider","getRedisGeneralInfo"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider getRedisGeneralInfo get general info for redis standalone","status":"passed","title":"get general info for redis standalone"},{"ancestorTitles":["DatabaseInfoProvider","getRedisGeneralInfo"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoProvider getRedisGeneralInfo get general info for redis standalone without some optional fields","status":"passed","title":"get general info for redis standalone without some optional fields"},{"ancestorTitles":["DatabaseInfoProvider","getRedisGeneralInfo"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoProvider getRedisGeneralInfo get general info for redis cluster","status":"passed","title":"get general info for redis cluster"},{"ancestorTitles":["DatabaseInfoProvider","getRedisGeneralInfo"],"duration":14,"failureMessages":[],"fullName":"DatabaseInfoProvider getRedisGeneralInfo should throw an error if no permission to run 'info' command","status":"passed","title":"should throw an error if no permission to run 'info' command"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501170440,"runtime":741,"slow":false,"start":1733501169699},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/stream/services/consumer-group.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ConsumerGroupService","getGroups"],"duration":24,"failureMessages":[],"fullName":"ConsumerGroupService getGroups should get consumer groups with info","status":"passed","title":"should get consumer groups with info"},{"ancestorTitles":["ConsumerGroupService","getGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService getGroups should throw error when key does not exists","status":"passed","title":"should throw error when key does not exists"},{"ancestorTitles":["ConsumerGroupService","getGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService getGroups should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerGroupService","getGroups"],"duration":18,"failureMessages":[],"fullName":"ConsumerGroupService getGroups should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerGroupService","getGroups"],"duration":3,"failureMessages":[],"fullName":"ConsumerGroupService getGroups should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerGroupService","createGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService createGroups add groups","status":"passed","title":"add groups"},{"ancestorTitles":["ConsumerGroupService","createGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService createGroups should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerGroupService","createGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService createGroups should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerGroupService","createGroups"],"duration":1,"failureMessages":[],"fullName":"ConsumerGroupService createGroups should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerGroupService","createGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService createGroups should throw Conflict when trying to create existing group","status":"passed","title":"should throw Conflict when trying to create existing group"},{"ancestorTitles":["ConsumerGroupService","createGroups"],"duration":1,"failureMessages":[],"fullName":"ConsumerGroupService createGroups should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerGroupService","updateGroup"],"duration":3,"failureMessages":[],"fullName":"ConsumerGroupService updateGroup update group","status":"passed","title":"update group"},{"ancestorTitles":["ConsumerGroupService","updateGroup"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService updateGroup should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerGroupService","updateGroup"],"duration":1,"failureMessages":[],"fullName":"ConsumerGroupService updateGroup should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerGroupService","updateGroup"],"duration":8,"failureMessages":[],"fullName":"ConsumerGroupService updateGroup should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerGroupService","updateGroup"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService updateGroup should throw NotFound when trying to modify not-existing group","status":"passed","title":"should throw NotFound when trying to modify not-existing group"},{"ancestorTitles":["ConsumerGroupService","updateGroup"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService updateGroup should throw Internal Server error","status":"passed","title":"should throw Internal Server error"},{"ancestorTitles":["ConsumerGroupService","deleteGroups"],"duration":3,"failureMessages":[],"fullName":"ConsumerGroupService deleteGroups add groups","status":"passed","title":"add groups"},{"ancestorTitles":["ConsumerGroupService","deleteGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService deleteGroups should throw Not Found when key does not exists","status":"passed","title":"should throw Not Found when key does not exists"},{"ancestorTitles":["ConsumerGroupService","deleteGroups"],"duration":2,"failureMessages":[],"fullName":"ConsumerGroupService deleteGroups should throw Not Found error","status":"passed","title":"should throw Not Found error"},{"ancestorTitles":["ConsumerGroupService","deleteGroups"],"duration":1,"failureMessages":[],"fullName":"ConsumerGroupService deleteGroups should throw Wrong Type error","status":"passed","title":"should throw Wrong Type error"},{"ancestorTitles":["ConsumerGroupService","deleteGroups"],"duration":1,"failureMessages":[],"fullName":"ConsumerGroupService deleteGroups should throw Internal Server error","status":"passed","title":"should throw Internal Server error"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501171464,"runtime":812,"slow":false,"start":1733501170652},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/redisearch/redisearch.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisearchService","list"],"duration":5,"failureMessages":[],"fullName":"RedisearchService list should get list of indexes for standalone","status":"passed","title":"should get list of indexes for standalone"},{"ancestorTitles":["RedisearchService","list"],"duration":1,"failureMessages":[],"fullName":"RedisearchService list should get list of indexes for cluster (handle unique index name)","status":"passed","title":"should get list of indexes for cluster (handle unique index name)"},{"ancestorTitles":["RedisearchService","list"],"duration":21,"failureMessages":[],"fullName":"RedisearchService list should handle ACL error","status":"passed","title":"should handle ACL error"},{"ancestorTitles":["RedisearchService","createIndex"],"duration":3,"failureMessages":[],"fullName":"RedisearchService createIndex should create index for standalone","status":"passed","title":"should create index for standalone"},{"ancestorTitles":["RedisearchService","createIndex"],"duration":8,"failureMessages":[],"fullName":"RedisearchService createIndex should create index for cluster","status":"passed","title":"should create index for cluster"},{"ancestorTitles":["RedisearchService","createIndex"],"duration":2,"failureMessages":[],"fullName":"RedisearchService createIndex should handle already existing index error","status":"passed","title":"should handle already existing index error"},{"ancestorTitles":["RedisearchService","createIndex"],"duration":1,"failureMessages":[],"fullName":"RedisearchService createIndex should handle ACL error (ft.info command)","status":"passed","title":"should handle ACL error (ft.info command)"},{"ancestorTitles":["RedisearchService","createIndex"],"duration":2,"failureMessages":[],"fullName":"RedisearchService createIndex should handle ACL error (ft.create command)","status":"passed","title":"should handle ACL error (ft.create command)"},{"ancestorTitles":["RedisearchService","search"],"duration":3,"failureMessages":[],"fullName":"RedisearchService search should search in standalone","status":"passed","title":"should search in standalone"},{"ancestorTitles":["RedisearchService","search"],"duration":3,"failureMessages":[],"fullName":"RedisearchService search should search in cluster","status":"passed","title":"should search in cluster"},{"ancestorTitles":["RedisearchService","search"],"duration":2,"failureMessages":[],"fullName":"RedisearchService search should handle ACL error (ft.info command)","status":"passed","title":"should handle ACL error (ft.info command)"},{"ancestorTitles":["RedisearchService","search"],"duration":5,"failureMessages":[],"fullName":"RedisearchService search should call \"TYPE\" and once \"FT.CONFIG GET MAXSEARCHRESULTS\" for all requests","status":"passed","title":"should call \"TYPE\" and once \"FT.CONFIG GET MAXSEARCHRESULTS\" for all requests"},{"ancestorTitles":["RedisearchService","getInfo"],"duration":3,"failureMessages":[],"fullName":"RedisearchService getInfo should get indexInfo","status":"passed","title":"should get indexInfo"},{"ancestorTitles":["RedisearchService","getInfo"],"duration":5,"failureMessages":[],"fullName":"RedisearchService getInfo should throw error if index name was not provided","status":"passed","title":"should throw error if index name was not provided"},{"ancestorTitles":["RedisearchService","getInfo"],"duration":3,"failureMessages":[],"fullName":"RedisearchService getInfo should throw error if client was not created","status":"passed","title":"should throw error if client was not created"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501172896,"runtime":1193,"slow":false,"start":1733501171703},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/set/set.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SetService","createSet"],"duration":15,"failureMessages":[],"fullName":"SetService createSet create set with expiration","status":"passed","title":"create set with expiration"},{"ancestorTitles":["SetService","createSet"],"duration":2,"failureMessages":[],"fullName":"SetService createSet create set without expiration","status":"passed","title":"create set without expiration"},{"ancestorTitles":["SetService","createSet"],"duration":13,"failureMessages":[],"fullName":"SetService createSet key with this name exist","status":"passed","title":"key with this name exist"},{"ancestorTitles":["SetService","createSet"],"duration":2,"failureMessages":[],"fullName":"SetService createSet try to use 'SADD' command not for set data type","status":"passed","title":"try to use 'SADD' command not for set data type"},{"ancestorTitles":["SetService","createSet"],"duration":12,"failureMessages":[],"fullName":"SetService createSet user don't have required permissions for createSet","status":"passed","title":"user don't have required permissions for createSet"},{"ancestorTitles":["SetService","createSetWithExpiration"],"duration":1,"failureMessages":[],"fullName":"SetService createSetWithExpiration succeed to create Set data type with expiration","status":"passed","title":"succeed to create Set data type with expiration"},{"ancestorTitles":["SetService","createSetWithExpiration"],"duration":2,"failureMessages":[],"fullName":"SetService createSetWithExpiration throw transaction error","status":"passed","title":"throw transaction error"},{"ancestorTitles":["SetService","getMembers"],"duration":3,"failureMessages":[],"fullName":"SetService getMembers succeed to get members of the set","status":"passed","title":"succeed to get members of the set"},{"ancestorTitles":["SetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"SetService getMembers succeed to find exact member in the set","status":"passed","title":"succeed to find exact member in the set"},{"ancestorTitles":["SetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"SetService getMembers failed to find exact member in the set","status":"passed","title":"failed to find exact member in the set"},{"ancestorTitles":["SetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"SetService getMembers should not call scan when math contains escaped glob","status":"passed","title":"should not call scan when math contains escaped glob"},{"ancestorTitles":["SetService","getMembers"],"duration":3,"failureMessages":[],"fullName":"SetService getMembers key with this name does not exist for getMembers","status":"passed","title":"key with this name does not exist for getMembers"},{"ancestorTitles":["SetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"SetService getMembers try to use 'SCARD' command not for list data type","status":"passed","title":"try to use 'SCARD' command not for list data type"},{"ancestorTitles":["SetService","getMembers"],"duration":2,"failureMessages":[],"fullName":"SetService getMembers user don't have required permissions for getMembers","status":"passed","title":"user don't have required permissions for getMembers"},{"ancestorTitles":["SetService","addMembers"],"duration":1,"failureMessages":[],"fullName":"SetService addMembers succeed to add members to the Set data type","status":"passed","title":"succeed to add members to the Set data type"},{"ancestorTitles":["SetService","addMembers"],"duration":4,"failureMessages":[],"fullName":"SetService addMembers key with this name does not exist for addMembers","status":"passed","title":"key with this name does not exist for addMembers"},{"ancestorTitles":["SetService","addMembers"],"duration":2,"failureMessages":[],"fullName":"SetService addMembers try to use 'SADD' command not for set data type","status":"passed","title":"try to use 'SADD' command not for set data type"},{"ancestorTitles":["SetService","addMembers"],"duration":9,"failureMessages":[],"fullName":"SetService addMembers user don't have required permissions for addMembers","status":"passed","title":"user don't have required permissions for addMembers"},{"ancestorTitles":["SetService","deleteMembers"],"duration":2,"failureMessages":[],"fullName":"SetService deleteMembers succeeded to delete members from Set data type","status":"passed","title":"succeeded to delete members from Set data type"},{"ancestorTitles":["SetService","deleteMembers"],"duration":3,"failureMessages":[],"fullName":"SetService deleteMembers key with this name does not exist for deleteMembers","status":"passed","title":"key with this name does not exist for deleteMembers"},{"ancestorTitles":["SetService","deleteMembers"],"duration":3,"failureMessages":[],"fullName":"SetService deleteMembers try to use 'SREM' command not for set data type","status":"passed","title":"try to use 'SREM' command not for set data type"},{"ancestorTitles":["SetService","deleteMembers"],"duration":2,"failureMessages":[],"fullName":"SetService deleteMembers user don't have required permissions for deleteMembers","status":"passed","title":"user don't have required permissions for deleteMembers"}]},{"numFailingTests":0,"numPassingTests":23,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501173653,"runtime":554,"slow":false,"start":1733501173099},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cli/services/cli-analytics/cli-analytics.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CliAnalyticsService","sendCliClientCreatedEvent"],"duration":4,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreatedEvent should emit CliIndexInfoSubmitted event","status":"passed","title":"should emit CliIndexInfoSubmitted event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreatedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreatedEvent should not fail and should not emit when there is no data","status":"passed","title":"should not fail and should not emit when there is no data"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreatedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreatedEvent should emit CliClientCreated event","status":"passed","title":"should emit CliClientCreated event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreatedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreatedEvent should emit CliClientCreated event without additional data","status":"passed","title":"should emit CliClientCreated event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreationFailedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreationFailedEvent should emit CliClientCreationFailed event","status":"passed","title":"should emit CliClientCreationFailed event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreationFailedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreationFailedEvent should emit CliClientCreationFailed event without additional data","status":"passed","title":"should emit CliClientCreationFailed event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliClientRecreatedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientRecreatedEvent should emit CliClientRecreated event","status":"passed","title":"should emit CliClientRecreated event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientRecreatedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientRecreatedEvent should emit CliClientRecreated event without additional data","status":"passed","title":"should emit CliClientRecreated event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliClientDeletedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientDeletedEvent should emit CliClientDeleted event","status":"passed","title":"should emit CliClientDeleted event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientDeletedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientDeletedEvent should emit CliClientDeleted event without additional data","status":"passed","title":"should emit CliClientDeleted event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliClientDeletedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientDeletedEvent should not emit event","status":"passed","title":"should not emit event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientDeletedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientDeletedEvent should not emit event on invalid input values","status":"passed","title":"should not emit event on invalid input values"},{"ancestorTitles":["CliAnalyticsService","sendCliCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliCommandExecutedEvent should emit CliCommandExecuted event","status":"passed","title":"should emit CliCommandExecuted event"},{"ancestorTitles":["CliAnalyticsService","sendCliCommandExecutedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliCommandExecutedEvent should emit CliCommandExecuted event without additional data","status":"passed","title":"should emit CliCommandExecuted event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliCommandErrorEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliCommandErrorEvent should emit CliCommandError event","status":"passed","title":"should emit CliCommandError event"},{"ancestorTitles":["CliAnalyticsService","sendCliCommandErrorEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliCommandErrorEvent should emit CliCommandError event without additional data","status":"passed","title":"should emit CliCommandError event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliCommandErrorEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliCommandErrorEvent should emit event for custom error","status":"passed","title":"should emit event for custom error"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreationFailedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreationFailedEvent should emit CliConnectionError event","status":"passed","title":"should emit CliConnectionError event"},{"ancestorTitles":["CliAnalyticsService","sendCliClientCreationFailedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClientCreationFailedEvent should emit CliConnectionError event without additional data","status":"passed","title":"should emit CliConnectionError event without additional data"},{"ancestorTitles":["CliAnalyticsService","sendCliClusterCommandExecutedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClusterCommandExecutedEvent should emit success event","status":"passed","title":"should emit success event"},{"ancestorTitles":["CliAnalyticsService","sendCliClusterCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClusterCommandExecutedEvent should emit event failed event for [RedisReply] error","status":"passed","title":"should emit event failed event for [RedisReply] error"},{"ancestorTitles":["CliAnalyticsService","sendCliClusterCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClusterCommandExecutedEvent should emit event failed for custom error","status":"passed","title":"should emit event failed for custom error"},{"ancestorTitles":["CliAnalyticsService","sendCliClusterCommandExecutedEvent"],"duration":2,"failureMessages":[],"fullName":"CliAnalyticsService sendCliClusterCommandExecutedEvent should not emit event event","status":"passed","title":"should not emit event event"}]},{"numFailingTests":0,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501174514,"runtime":685,"slow":false,"start":1733501173829},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/workbench.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["WorkbenchService","createCommandExecution"],"duration":4,"failureMessages":[],"fullName":"WorkbenchService createCommandExecution should successfully execute command and save it","status":"passed","title":"should successfully execute command and save it"},{"ancestorTitles":["WorkbenchService","createCommandExecution"],"duration":2,"failureMessages":[],"fullName":"WorkbenchService createCommandExecution should save db index","status":"passed","title":"should save db index"},{"ancestorTitles":["WorkbenchService","createCommandExecution"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService createCommandExecution should save result as unsupported command message","status":"passed","title":"should save result as unsupported command message"},{"ancestorTitles":["WorkbenchService","createCommandExecution"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService createCommandExecution should throw an error when command execution failed","status":"passed","title":"should throw an error when command execution failed"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":2,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should successfully execute commands and save them","status":"passed","title":"should successfully execute commands and save them"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":12,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should successfully execute commands and save in group mode view","status":"passed","title":"should successfully execute commands and save in group mode view"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":2,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should successfully execute commands and save in silent mode view","status":"passed","title":"should successfully execute commands and save in silent mode view"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":2,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should successfully execute commands with error and save summary","status":"passed","title":"should successfully execute commands with error and save summary"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":2,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should successfully execute commands with error and save summary in silent mode view","status":"passed","title":"should successfully execute commands with error and save summary in silent mode view"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should throw an error when command execution failed","status":"passed","title":"should throw an error when command execution failed"},{"ancestorTitles":["WorkbenchService","createCommandExecutions"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService createCommandExecutions should throw an error from command execution provider (create)","status":"passed","title":"should throw an error from command execution provider (create)"},{"ancestorTitles":["WorkbenchService","listCommandExecutions"],"duration":9,"failureMessages":[],"fullName":"WorkbenchService listCommandExecutions should return list of command executions","status":"passed","title":"should return list of command executions"},{"ancestorTitles":["WorkbenchService","listCommandExecutions"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService listCommandExecutions should throw an error from command execution provider (getList)","status":"passed","title":"should throw an error from command execution provider (getList)"},{"ancestorTitles":["WorkbenchService","getCommandExecution"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService getCommandExecution should return full command executions","status":"passed","title":"should return full command executions"},{"ancestorTitles":["WorkbenchService","getCommandExecution"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService getCommandExecution should throw an error from command execution provider (getOne)","status":"passed","title":"should throw an error from command execution provider (getOne)"},{"ancestorTitles":["WorkbenchService","deleteCommandExecution"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService deleteCommandExecution should not return anything on delete","status":"passed","title":"should not return anything on delete"},{"ancestorTitles":["WorkbenchService","deleteCommandExecutions"],"duration":1,"failureMessages":[],"fullName":"WorkbenchService deleteCommandExecutions should not return anything on delete","status":"passed","title":"should not return anything on delete"}]},{"numFailingTests":0,"numPassingTests":55,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501176192,"runtime":1438,"slow":false,"start":1733501174754},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/utils/context.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":1,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should add quotes when needed","status":"passed","title":"should add quotes when needed"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should add quotes when needed","status":"passed","title":"should add quotes when needed"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should add quotes when needed","status":"passed","title":"should add quotes when needed"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":1,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should add quotes when needed","status":"passed","title":"should add quotes when needed"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should add quotes when needed","status":"passed","title":"should add quotes when needed"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should add quotes when needed","status":"passed","title":"should add quotes when needed"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":1,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":1,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","quotesIfNeeded"],"duration":0,"failureMessages":[],"fullName":"ContextUtility quotesIfNeeded should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":1,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoAttributeReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoAttributeReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":1,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":1,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","convertIndexInfoReply"],"duration":0,"failureMessages":[],"fullName":"ContextUtility convertIndexInfoReply should return attribute info","status":"passed","title":"should return attribute info"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":1,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":1,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":1,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should return top values","status":"passed","title":"should return top values"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":1,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should not fail when empty array received and set count to 0","status":"passed","title":"should not fail when empty array received and set count to 0"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should not fail when count 0 and no keys","status":"passed","title":"should not fail when count 0 and no keys"},{"ancestorTitles":["ContextUtility","getAttributeTopValues"],"duration":0,"failureMessages":[],"fullName":"ContextUtility getAttributeTopValues should not fail","status":"passed","title":"should not fail"},{"ancestorTitles":["ContextUtility","createIndexCreateStatement"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexCreateStatement should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexCreateStatement"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexCreateStatement should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexCreateStatement"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexCreateStatement should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexCreateStatement"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexCreateStatement should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexCreateStatement"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexCreateStatement should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexCreateStatement"],"duration":5,"failureMessages":[],"fullName":"ContextUtility createIndexCreateStatement should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexContext"],"duration":1,"failureMessages":[],"fullName":"ContextUtility createIndexContext should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexContext"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexContext should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexContext"],"duration":1,"failureMessages":[],"fullName":"ContextUtility createIndexContext should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexContext"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexContext should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","createIndexContext"],"duration":0,"failureMessages":[],"fullName":"ContextUtility createIndexContext should return object","status":"passed","title":"should return object"},{"ancestorTitles":["ContextUtility","getDocumentsSchema"],"duration":112,"failureMessages":[],"fullName":"ContextUtility getDocumentsSchema Should get document schema for json type","status":"passed","title":"Should get document schema for json type"},{"ancestorTitles":["ContextUtility","getDocumentsSchema"],"duration":4,"failureMessages":[],"fullName":"ContextUtility getDocumentsSchema Should get document schema for hash type","status":"passed","title":"Should get document schema for hash type"},{"ancestorTitles":["ContextUtility","getDocumentsSchema"],"duration":3,"failureMessages":[],"fullName":"ContextUtility getDocumentsSchema Should return empty schema object for non-supported type","status":"passed","title":"Should return empty schema object for non-supported type"},{"ancestorTitles":["ContextUtility","getIndexContext"],"duration":7,"failureMessages":[],"fullName":"ContextUtility getIndexContext Should get index context","status":"passed","title":"Should get index context"},{"ancestorTitles":["ContextUtility","getFullDbContext"],"duration":1,"failureMessages":[],"fullName":"ContextUtility getFullDbContext Should get index context","status":"passed","title":"Should get index context"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501176993,"runtime":621,"slow":false,"start":1733501176372},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/analytics/analytics.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AnalyticsService","init"],"duration":4,"failureMessages":[],"fullName":"AnalyticsService init should set anonymousId and send application started event","status":"passed","title":"should set anonymousId and send application started event"},{"ancestorTitles":["AnalyticsService","init"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService init should NOT send application started event since sessionMetadata was not provided","status":"passed","title":"should NOT send application started event since sessionMetadata was not provided"},{"ancestorTitles":["AnalyticsService","init"],"duration":2,"failureMessages":[],"fullName":"AnalyticsService init should set anonymousId and send application first start event","status":"passed","title":"should set anonymousId and send application first start event"},{"ancestorTitles":["AnalyticsService","getAnonymousId"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService getAnonymousId should always return anonymousId defined with init","status":"passed","title":"should always return anonymousId defined with init"},{"ancestorTitles":["AnalyticsService","getAnonymousId"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService getAnonymousId should return anonymousId from sessionMetadata or \"unknown\"","status":"passed","title":"should return anonymousId from sessionMetadata or \"unknown\""},{"ancestorTitles":["AnalyticsService","getSessionId"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService getSessionId should always return sessionId defined with init method","status":"passed","title":"should always return sessionId defined with init method"},{"ancestorTitles":["AnalyticsService","getSessionId"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService getSessionId should return sessionId from sessionMetadata or -1","status":"passed","title":"should return sessionId from sessionMetadata or -1"},{"ancestorTitles":["AnalyticsService","sendEvent"],"duration":2,"failureMessages":[],"fullName":"AnalyticsService sendEvent should send event with anonymousId if permission are granted","status":"passed","title":"should send event with anonymousId if permission are granted"},{"ancestorTitles":["AnalyticsService","sendEvent"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService sendEvent should not send event if permission are not granted","status":"passed","title":"should not send event if permission are not granted"},{"ancestorTitles":["AnalyticsService","sendEvent"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService sendEvent should send event for non tracking events event if permission are not granted","status":"passed","title":"should send event for non tracking events event if permission are not granted"},{"ancestorTitles":["AnalyticsService","sendEvent"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService sendEvent should send event for non tracking with regular payload","status":"passed","title":"should send event for non tracking with regular payload"},{"ancestorTitles":["AnalyticsService","sendPage"],"duration":2,"failureMessages":[],"fullName":"AnalyticsService sendPage should send page with anonymousId if permission are granted","status":"passed","title":"should send page with anonymousId if permission are granted"},{"ancestorTitles":["AnalyticsService","sendPage"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService sendPage should not send page if permission are not granted","status":"passed","title":"should not send page if permission are not granted"},{"ancestorTitles":["AnalyticsService","sendPage"],"duration":1,"failureMessages":[],"fullName":"AnalyticsService sendPage should send page for non tracking events event if permission are not granted","status":"passed","title":"should send page for non tracking events event if permission are not granted"},{"ancestorTitles":["AnalyticsService","sendPage"],"duration":2,"failureMessages":[],"fullName":"AnalyticsService sendPage should send page for non tracking events with regular payload","status":"passed","title":"should send page for non tracking events with regular payload"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501178606,"runtime":1421,"slow":false,"start":1733501177185},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/bulk-action.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AbstractBulkActionSimpleRunner","prepare"],"duration":4,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner prepare should generate single runner for standalone","status":"passed","title":"should generate single runner for standalone"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","prepare"],"duration":2,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner prepare should generate 2 runners for cluster with 2 master nodes","status":"passed","title":"should generate 2 runners for cluster with 2 master nodes"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","prepare"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner prepare should fail when bulk action in inappropriate state","status":"passed","title":"should fail when bulk action in inappropriate state"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","start"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner start should throw an error when status is not READY","status":"passed","title":"should throw an error when status is not READY"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","start"],"duration":103,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner start should start and run until the end","status":"passed","title":"should start and run until the end"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","start"],"duration":103,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner start should start and run until the end for clusters","status":"passed","title":"should start and run until the end for clusters"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","start"],"duration":103,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner start should start and run until the error occur","status":"passed","title":"should start and run until the error occur"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","getOverview"],"duration":7,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner getOverview should return overview for standalone","status":"passed","title":"should return overview for standalone"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","getOverview"],"duration":8,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner getOverview should return overview for cluster","status":"passed","title":"should return overview for cluster"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to completed and  set a time","status":"passed","title":"should change state to completed and  set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to failed and  set a time","status":"passed","title":"should change state to failed and  set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to aborted and  set a time","status":"passed","title":"should change state to aborted and  set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to initializing and do not set a time","status":"passed","title":"should change state to initializing and do not set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to initialized and do not set a time","status":"passed","title":"should change state to initialized and do not set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to preparing and do not set a time","status":"passed","title":"should change state to preparing and do not set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should change state to ready and do not set a time","status":"passed","title":"should change state to ready and do not set a time"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should not change state from completed","status":"passed","title":"should not change state from completed"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should not change state from failed","status":"passed","title":"should not change state from failed"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should not change state from aborted","status":"passed","title":"should not change state from aborted"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should  change state from initialized","status":"passed","title":"should  change state from initialized"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should  change state from preparing","status":"passed","title":"should  change state from preparing"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","setStatus"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner setStatus should  change state from ready","status":"passed","title":"should  change state from ready"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","sendOverview"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner sendOverview Should not fail on emit error","status":"passed","title":"Should not fail on emit error"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","sendOverview"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner sendOverview Should send overview","status":"passed","title":"Should send overview"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","sendOverview"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner sendOverview Should call sendActionSucceed","status":"passed","title":"Should call sendActionSucceed"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","sendOverview"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner sendOverview Should call sendActionFailed","status":"passed","title":"Should call sendActionFailed"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","sendOverview"],"duration":0,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner sendOverview Should call sendActionStopped","status":"passed","title":"Should call sendActionStopped"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","Other"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner Other getters","status":"passed","title":"getters"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501179449,"runtime":660,"slow":false,"start":1733501178789},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-import/certificate-import.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CertificateImportService","processCaCertificate"],"duration":15,"failureMessages":[],"fullName":"CertificateImportService processCaCertificate should successfully process certificate","status":"passed","title":"should successfully process certificate"},{"ancestorTitles":["CertificateImportService","processCaCertificate"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService processCaCertificate should fail when no name defined","status":"passed","title":"should fail when no name defined"},{"ancestorTitles":["CertificateImportService","processCaCertificate"],"duration":3,"failureMessages":[],"fullName":"CertificateImportService processCaCertificate should successfully process certificate from file","status":"passed","title":"should successfully process certificate from file"},{"ancestorTitles":["CertificateImportService","processCaCertificate"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService processCaCertificate should fail when no file found","status":"passed","title":"should fail when no file found"},{"ancestorTitles":["CertificateImportService","prepareCaCertificateForImport"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService prepareCaCertificateForImport should return existing certificate","status":"passed","title":"should return existing certificate"},{"ancestorTitles":["CertificateImportService","prepareCaCertificateForImport"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService prepareCaCertificateForImport should return new certificate","status":"passed","title":"should return new certificate"},{"ancestorTitles":["CertificateImportService","prepareCaCertificateForImport"],"duration":9,"failureMessages":[],"fullName":"CertificateImportService prepareCaCertificateForImport should generate name with prefix","status":"passed","title":"should generate name with prefix"},{"ancestorTitles":["CertificateImportService","processClientCertificate"],"duration":3,"failureMessages":[],"fullName":"CertificateImportService processClientCertificate should successfully process client certificate","status":"passed","title":"should successfully process client certificate"},{"ancestorTitles":["CertificateImportService","processClientCertificate"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService processClientCertificate should fail when no name defined","status":"passed","title":"should fail when no name defined"},{"ancestorTitles":["CertificateImportService","processClientCertificate"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService processClientCertificate should successfully process certificate from file","status":"passed","title":"should successfully process certificate from file"},{"ancestorTitles":["CertificateImportService","processClientCertificate"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService processClientCertificate should fail when no cert file found","status":"passed","title":"should fail when no cert file found"},{"ancestorTitles":["CertificateImportService","processClientCertificate"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService processClientCertificate should fail when no key file found","status":"passed","title":"should fail when no key file found"},{"ancestorTitles":["CertificateImportService","prepareClientCertificateForImport"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService prepareClientCertificateForImport should return existing certificate","status":"passed","title":"should return existing certificate"},{"ancestorTitles":["CertificateImportService","prepareClientCertificateForImport"],"duration":2,"failureMessages":[],"fullName":"CertificateImportService prepareClientCertificateForImport should return new certificate","status":"passed","title":"should return new certificate"},{"ancestorTitles":["CertificateImportService","prepareClientCertificateForImport"],"duration":3,"failureMessages":[],"fullName":"CertificateImportService prepareClientCertificateForImport should generate name with prefix","status":"passed","title":"should generate name with prefix"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501180452,"runtime":806,"slow":false,"start":1733501179646},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/autodiscovery/cloud-autodiscovery.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudAutodiscoveryService","getAccount"],"duration":4,"failureMessages":[],"fullName":"CloudAutodiscoveryService getAccount successfully get cloud account info","status":"passed","title":"successfully get cloud account info"},{"ancestorTitles":["CloudAutodiscoveryService","getAccount"],"duration":15,"failureMessages":[],"fullName":"CloudAutodiscoveryService getAccount should throw CloudApiUnauthorizedException exception","status":"passed","title":"should throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudAutodiscoveryService","discoverSubscriptions"],"duration":3,"failureMessages":[],"fullName":"CloudAutodiscoveryService discoverSubscriptions successfully discover fixed and flexible cloud subscriptions","status":"passed","title":"successfully discover fixed and flexible cloud subscriptions"},{"ancestorTitles":["CloudAutodiscoveryService","discoverSubscriptions"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService discoverSubscriptions throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudAutodiscoveryService","discoverDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService discoverDatabases should call getDatabases 2 times","status":"passed","title":"should call getDatabases 2 times"},{"ancestorTitles":["CloudAutodiscoveryService","discoverDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService discoverDatabases should call getDatabases 2 times (same id but different types)","status":"passed","title":"should call getDatabases 2 times (same id but different types)"},{"ancestorTitles":["CloudAutodiscoveryService","discoverDatabases"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryService discoverDatabases should call getDatabases 2 times (uniq by id and type)","status":"passed","title":"should call getDatabases 2 times (uniq by id and type)"},{"ancestorTitles":["CloudAutodiscoveryService","discoverDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService discoverDatabases subscription not found","status":"passed","title":"subscription not found"},{"ancestorTitles":["CloudAutodiscoveryService","addRedisCloudDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService addRedisCloudDatabases should successfully add 1 fixed and 1 flexible databases","status":"passed","title":"should successfully add 1 fixed and 1 flexible databases"},{"ancestorTitles":["CloudAutodiscoveryService","addRedisCloudDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService addRedisCloudDatabases should successfully add 1 fixed database and report 1 error without database details (404)","status":"passed","title":"should successfully add 1 fixed database and report 1 error without database details (404)"},{"ancestorTitles":["CloudAutodiscoveryService","addRedisCloudDatabases"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryService addRedisCloudDatabases should successfully add 1 fixed database and report 1 error with database details","status":"passed","title":"should successfully add 1 fixed database and report 1 error with database details"},{"ancestorTitles":["CloudAutodiscoveryService","addRedisCloudDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryService addRedisCloudDatabases should successfully add 1 fixed database and report 1 error if db is not actives","status":"passed","title":"should successfully add 1 fixed database and report 1 error if db is not actives"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501181815,"runtime":1156,"slow":false,"start":1733501180659},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/local.redis.client.factory.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":6,"failureMessages":[],"fullName":"LocalRedisClientFactory init should set ioredis as default strategy from config","status":"passed","title":"should set ioredis as default strategy from config"},{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":2,"failureMessages":[],"fullName":"LocalRedisClientFactory init should set default (ioredis for now) strategy if unknown strategy in the config","status":"passed","title":"should set default (ioredis for now) strategy if unknown strategy in the config"},{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":1,"failureMessages":[],"fullName":"LocalRedisClientFactory init should set default (ioredis for now) strategy if no feature found","status":"passed","title":"should set default (ioredis for now) strategy if no feature found"},{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":1,"failureMessages":[],"fullName":"LocalRedisClientFactory init should set default (ioredis for now) strategy if no feature.data specified","status":"passed","title":"should set default (ioredis for now) strategy if no feature.data specified"},{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":1,"failureMessages":[],"fullName":"LocalRedisClientFactory init should set default (ioredis for now) strategy if no feature.data.strategy specified","status":"passed","title":"should set default (ioredis for now) strategy if no feature.data.strategy specified"},{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":2,"failureMessages":[],"fullName":"LocalRedisClientFactory init should set node-redis as default strategy from config","status":"passed","title":"should set node-redis as default strategy from config"},{"ancestorTitles":["LocalRedisClientFactory","init"],"duration":27,"failureMessages":[],"fullName":"LocalRedisClientFactory init should nor fail in case of an error","status":"passed","title":"should nor fail in case of an error"},{"ancestorTitles":["LocalRedisClientFactory","createClientAutomatically"],"duration":3,"failureMessages":[],"fullName":"LocalRedisClientFactory createClientAutomatically should create standalone client (when unable to create cluster and sentinel)","status":"passed","title":"should create standalone client (when unable to create cluster and sentinel)"},{"ancestorTitles":["LocalRedisClientFactory","createClientAutomatically"],"duration":5,"failureMessages":[],"fullName":"LocalRedisClientFactory createClientAutomatically should create cluster client","status":"passed","title":"should create cluster client"},{"ancestorTitles":["LocalRedisClientFactory","createClientAutomatically"],"duration":2,"failureMessages":[],"fullName":"LocalRedisClientFactory createClientAutomatically should create sentinel client","status":"passed","title":"should create sentinel client"},{"ancestorTitles":["LocalRedisClientFactory","createClient"],"duration":3,"failureMessages":[],"fullName":"LocalRedisClientFactory createClient should create standalone client (default ioredis strategy)","status":"passed","title":"should create standalone client (default ioredis strategy)"},{"ancestorTitles":["LocalRedisClientFactory","createClient"],"duration":3,"failureMessages":[],"fullName":"LocalRedisClientFactory createClient should create standalone client (ioredis strategy)","status":"passed","title":"should create standalone client (ioredis strategy)"},{"ancestorTitles":["LocalRedisClientFactory","createClient"],"duration":2,"failureMessages":[],"fullName":"LocalRedisClientFactory createClient should create standalone client (node-redis strategy)","status":"passed","title":"should create standalone client (node-redis strategy)"},{"ancestorTitles":["LocalRedisClientFactory","createClient"],"duration":3,"failureMessages":[],"fullName":"LocalRedisClientFactory createClient should trigger auto discovery connection type (when no connectionType defined)","status":"passed","title":"should trigger auto discovery connection type (when no connectionType defined)"},{"ancestorTitles":["LocalRedisClientFactory","createClient"],"duration":3,"failureMessages":[],"fullName":"LocalRedisClientFactory createClient should create cluster client","status":"passed","title":"should create cluster client"},{"ancestorTitles":["LocalRedisClientFactory","createClient"],"duration":3,"failureMessages":[],"fullName":"LocalRedisClientFactory createClient should create sentinel client","status":"passed","title":"should create sentinel client"}]},{"numFailingTests":0,"numPassingTests":69,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501184370,"runtime":2316,"slow":false,"start":1733501182054},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/cli-helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":1,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"memory\",\"usage\",\"key\"] for command memory usage key","status":"passed","title":"should return [\"memory\",\"usage\",\"key\"] for command memory usage key"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":1,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"set\",\"test\",\"—\"] for command set test \"—\"","status":"passed","title":"should return [\"set\",\"test\",\"—\"] for command set test \"—\""},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"set\",\"test\",\"—\"] for command set test '—'","status":"passed","title":"should return [\"set\",\"test\",\"—\"] for command set test '—'"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"info\"] for command info","status":"passed","title":"should return [\"info\"] for command info"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"get\",\"key name\"] for command get \"key name\"","status":"passed","title":"should return [\"get\",\"key name\"] for command get \"key name\""},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":1,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"get\",\"key ' name\"] for command get \"key ' name\"","status":"passed","title":"should return [\"get\",\"key ' name\"] for command get \"key ' name\""},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"get\",\"key \\\" name\"] for command get \"key \\\" name\"","status":"passed","title":"should return [\"get\",\"key \\\" name\"] for command get \"key \\\" name\""},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"get\",\"key name\"] for command get 'key name'","status":"passed","title":"should return [\"get\",\"key name\"] for command get 'key name'"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":1,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"set\",\"~\\\\\\\\nk\\\"k \\\"ey\",\"1\"] for command s\"et\" ~\\'\\nk\"k \"ey' 1","status":"passed","title":"should return [\"set\",\"~\\\\\\\\nk\\\"k \\\"ey\",\"1\"] for command s\"et\" ~\\'\\nk\"k \"ey' 1"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"set\",\"key\",\"\\u0007\\b\\t\\n\\r\"] for command set key \"\\a\\b\\t\\n\\r\"","status":"passed","title":"should return [\"set\",\"key\",\"\\u0007\\b\\t\\n\\r\"] for command set key \"\\a\\b\\t\\n\\r\""},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"set\",\"key\",{\"type\":\"Buffer\",\"data\":[172,237]}] for command set key \"\\xac\\xed\"","status":"passed","title":"should return [\"set\",\"key\",{\"type\":\"Buffer\",\"data\":[172,237]}] for command set key \"\\xac\\xed\""},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should return [\"ACL\",\"SETUSER\",\"t\",\"on\",\"nopass\",\"~\\\\x00\",\"&*\",\"+@all\"] for command ACL SETUSER t on nopass ~'\\x00' &* +@all","status":"passed","title":"should return [\"ACL\",\"SETUSER\",\"t\",\"on\",\"nopass\",\"~\\\\x00\",\"&*\",\"+@all\"] for command ACL SETUSER t on nopass ~'\\x00' &* +@all"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should throw [CLI_INVALID_QUOTES_CLOSING] error for command with double quotes","status":"passed","title":"should throw [CLI_INVALID_QUOTES_CLOSING] error for command with double quotes"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":1,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should throw [CLI_UNTERMINATED_QUOTES] error for command with double quotes","status":"passed","title":"should throw [CLI_UNTERMINATED_QUOTES] error for command with double quotes"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should throw [CLI_INVALID_QUOTES_CLOSING] error for command with single quotes","status":"passed","title":"should throw [CLI_INVALID_QUOTES_CLOSING] error for command with single quotes"},{"ancestorTitles":["Cli helper","splitCliCommandLine"],"duration":0,"failureMessages":[],"fullName":"Cli helper splitCliCommandLine should throw [CLI_UNTERMINATED_QUOTES] error for command with single quotes","status":"passed","title":"should throw [CLI_UNTERMINATED_QUOTES] error for command with single quotes"},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":1,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: info ","status":"passed","title":"should be output: true for input: info "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: info server ","status":"passed","title":"should be output: true for input: info server "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: lolwut ","status":"passed","title":"should be output: true for input: lolwut "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: LOLWUT ","status":"passed","title":"should be output: true for input: LOLWUT "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":1,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: debug hstats ","status":"passed","title":"should be output: true for input: debug hstats "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: debug hstats-key ","status":"passed","title":"should be output: true for input: debug hstats-key "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: DEBUG HSTATS-KEY ","status":"passed","title":"should be output: true for input: DEBUG HSTATS-KEY "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: memory doctor ","status":"passed","title":"should be output: true for input: memory doctor "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: memory malloc-stats ","status":"passed","title":"should be output: true for input: memory malloc-stats "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: cluster nodes ","status":"passed","title":"should be output: true for input: cluster nodes "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: cluster info ","status":"passed","title":"should be output: true for input: cluster info "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: client list ","status":"passed","title":"should be output: true for input: client list "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: latency graph ","status":"passed","title":"should be output: true for input: latency graph "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":1,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: latency doctor ","status":"passed","title":"should be output: true for input: latency doctor "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: proxy info ","status":"passed","title":"should be output: true for input: proxy info "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: true for input: PROXY INFO ","status":"passed","title":"should be output: true for input: PROXY INFO "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: false for input: get key ","status":"passed","title":"should be output: false for input: get key "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: false for input: debug object ","status":"passed","title":"should be output: false for input: debug object "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: false for input: DEBUG OBJECT ","status":"passed","title":"should be output: false for input: DEBUG OBJECT "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":1,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: false for input: client kill ","status":"passed","title":"should be output: false for input: client kill "},{"ancestorTitles":["Cli helper","checkHumanReadableCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkHumanReadableCommands should be output: false for input: scan 0 COUNT 15 MATCH * ","status":"passed","title":"should be output: false for input: scan 0 COUNT 15 MATCH * "},{"ancestorTitles":["Cli helper","getBlockingCommands"],"duration":0,"failureMessages":[],"fullName":"Cli helper getBlockingCommands should return fixed predefined list of blocking commands","status":"passed","title":"should return fixed predefined list of blocking commands"},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: true for input: [object Object] ","status":"passed","title":"should be output: true for input: [object Object] "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: true for input: [object Object] ","status":"passed","title":"should be output: true for input: [object Object] "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: [object Object] ","status":"passed","title":"should be output: false for input: [object Object] "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: [object Object] ","status":"passed","title":"should be output: false for input: [object Object] "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: info ","status":"passed","title":"should be output: false for input: info "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: undefined ","status":"passed","title":"should be output: false for input: undefined "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":1,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: false ","status":"passed","title":"should be output: false for input: false "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: null ","status":"passed","title":"should be output: false for input: null "},{"ancestorTitles":["Cli helper","checkRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper checkRedirectionError should be output: false for input: [object Object] ","status":"passed","title":"should be output: false for input: [object Object] "},{"ancestorTitles":["Cli helper","parseRedirectionError"],"duration":1,"failureMessages":[],"fullName":"Cli helper parseRedirectionError should get slot and address from MOVED error","status":"passed","title":"should get slot and address from MOVED error"},{"ancestorTitles":["Cli helper","parseRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper parseRedirectionError should get slot and address from ASK error","status":"passed","title":"should get slot and address from ASK error"},{"ancestorTitles":["Cli helper","parseRedirectionError"],"duration":17,"failureMessages":[],"fullName":"Cli helper parseRedirectionError should throw exception for wrong node address","status":"passed","title":"should throw exception for wrong node address"},{"ancestorTitles":["Cli helper","parseRedirectionError"],"duration":1,"failureMessages":[],"fullName":"Cli helper parseRedirectionError should throw exception for incorrect redirection message format","status":"passed","title":"should throw exception for incorrect redirection message format"},{"ancestorTitles":["Cli helper","parseRedirectionError"],"duration":0,"failureMessages":[],"fullName":"Cli helper parseRedirectionError should throw exception","status":"passed","title":"should throw exception"},{"ancestorTitles":["Cli helper","getRedisPipelineSummary"],"duration":1,"failureMessages":[],"fullName":"Cli helper getRedisPipelineSummary should be output: {\"length\":50,\"summary\":\"[\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"...\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]]} ","status":"passed","title":"should be output: {\"length\":50,\"summary\":\"[\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"...\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]]} "},{"ancestorTitles":["Cli helper","getRedisPipelineSummary"],"duration":0,"failureMessages":[],"fullName":"Cli helper getRedisPipelineSummary should be output: {\"length\":50,\"summary\":\"[\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"...\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]],\"limit\":10} ","status":"passed","title":"should be output: {\"length\":50,\"summary\":\"[\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"...\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]],\"limit\":10} "},{"ancestorTitles":["Cli helper","getRedisPipelineSummary"],"duration":0,"failureMessages":[],"fullName":"Cli helper getRedisPipelineSummary should be output: {\"length\":50,\"summary\":\"[\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]],\"limit\":1000} ","status":"passed","title":"should be output: {\"length\":50,\"summary\":\"[\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\",\\\"get\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]],\"limit\":1000} "},{"ancestorTitles":["Cli helper","getRedisPipelineSummary"],"duration":0,"failureMessages":[],"fullName":"Cli helper getRedisPipelineSummary should be output: {\"length\":0,\"summary\":\"[]\"} for input: {\"pipeline\":{},\"limit\":1000} ","status":"passed","title":"should be output: {\"length\":0,\"summary\":\"[]\"} for input: {\"pipeline\":{},\"limit\":1000} "},{"ancestorTitles":["Cli helper","getRedisPipelineSummary"],"duration":0,"failureMessages":[],"fullName":"Cli helper getRedisPipelineSummary should be output: {\"length\":50,\"summary\":\"[\\\"...\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]],\"limit\":-10} ","status":"passed","title":"should be output: {\"length\":50,\"summary\":\"[\\\"...\\\"]\"} for input: {\"pipeline\":[[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"],[\"get\",\"foo\"]],\"limit\":-10} "},{"ancestorTitles":["Cli helper","getASCIISafeStringFromBuffer"],"duration":7,"failureMessages":[],"fullName":"Cli helper getASCIISafeStringFromBuffer should convert simple to buffer and to ASCII string representation","status":"passed","title":"should convert simple to buffer and to ASCII string representation"},{"ancestorTitles":["Cli helper","getASCIISafeStringFromBuffer"],"duration":1,"failureMessages":[],"fullName":"Cli helper getASCIISafeStringFromBuffer should convert Euro - € to buffer and to ASCII string representation","status":"passed","title":"should convert Euro - € to buffer and to ASCII string representation"},{"ancestorTitles":["Cli helper","getASCIISafeStringFromBuffer"],"duration":1,"failureMessages":[],"fullName":"Cli helper getASCIISafeStringFromBuffer should convert € != \\e2\\xzs\\02 to buffer and to ASCII string representation","status":"passed","title":"should convert € != \\e2\\xzs\\02 to buffer and to ASCII string representation"},{"ancestorTitles":["Cli helper","getASCIISafeStringFromBuffer"],"duration":0,"failureMessages":[],"fullName":"Cli helper getASCIISafeStringFromBuffer should convert \u0002\u0000\u0000\u0000zipcode to buffer and to ASCII string representation","status":"passed","title":"should convert \u0002\u0000\u0000\u0000zipcode to buffer and to ASCII string representation"},{"ancestorTitles":["Cli helper","getASCIISafeStringFromBuffer"],"duration":1,"failureMessages":[],"fullName":"Cli helper getASCIISafeStringFromBuffer test json data structure","status":"passed","title":"test json data structure"},{"ancestorTitles":["Cli helper","getASCIISafeStringFromBuffer"],"duration":1725,"failureMessages":[],"fullName":"Cli helper getASCIISafeStringFromBuffer test huge string timings","status":"passed","title":"test huge string timings"},{"ancestorTitles":["Cli helper","getUTF8FromRedisString"],"duration":0,"failureMessages":[],"fullName":"Cli helper getUTF8FromRedisString should be output: abc for input: abc ","status":"passed","title":"should be output: abc for input: abc "},{"ancestorTitles":["Cli helper","getUTF8FromRedisString"],"duration":1,"failureMessages":[],"fullName":"Cli helper getUTF8FromRedisString should be output: 123 for input: 123 ","status":"passed","title":"should be output: 123 for input: 123 "},{"ancestorTitles":["Cli helper","getUTF8FromRedisString"],"duration":0,"failureMessages":[],"fullName":"Cli helper getUTF8FromRedisString should be output: ntoheuthao u2312 for input: ntoheuthao u2312 ","status":"passed","title":"should be output: ntoheuthao u2312 for input: ntoheuthao u2312 "},{"ancestorTitles":["Cli helper","getUTF8FromRedisString"],"duration":0,"failureMessages":[],"fullName":"Cli helper getUTF8FromRedisString should be output: q;tkoeh uoaecr342 \"\"ueo!@# for input: q;tkoeh uoaecr342 \"\"ueo!@# ","status":"passed","title":"should be output: q;tkoeh uoaecr342 \"\"ueo!@# for input: q;tkoeh uoaecr342 \"\"ueo!@# "},{"ancestorTitles":["Cli helper","getUTF8FromRedisString"],"duration":0,"failureMessages":[],"fullName":"Cli helper getUTF8FromRedisString should be output: \\x02\\x00\\x00\\x00zipcode for input: \\x02\\x00\\x00\\x00zipcode ","status":"passed","title":"should be output: \\x02\\x00\\x00\\x00zipcode for input: \\x02\\x00\\x00\\x00zipcode "},{"ancestorTitles":["Cli helper","getUTF8FromRedisString"],"duration":0,"failureMessages":[],"fullName":"Cli helper getUTF8FromRedisString should be output: € != \\e2\\xzs\\02 for input: € != \\e2\\xzs\\02 ","status":"passed","title":"should be output: € != \\e2\\xzs\\02 for input: € != \\e2\\xzs\\02 "}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501185793,"runtime":1232,"slow":false,"start":1733501184561},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-import/database-import.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseImportService","importDatabase"],"duration":127,"failureMessages":[],"fullName":"DatabaseImportService importDatabase should import databases from json","status":"passed","title":"should import databases from json"},{"ancestorTitles":["DatabaseImportService","importDatabase"],"duration":45,"failureMessages":[],"fullName":"DatabaseImportService importDatabase should import databases from base64","status":"passed","title":"should import databases from base64"},{"ancestorTitles":["DatabaseImportService","importDatabase"],"duration":7,"failureMessages":[],"fullName":"DatabaseImportService importDatabase should fail due to file was not provided","status":"passed","title":"should fail due to file was not provided"},{"ancestorTitles":["DatabaseImportService","importDatabase"],"duration":5,"failureMessages":[],"fullName":"DatabaseImportService importDatabase should fail due to file exceeded size limitations","status":"passed","title":"should fail due to file exceeded size limitations"},{"ancestorTitles":["DatabaseImportService","importDatabase"],"duration":6,"failureMessages":[],"fullName":"DatabaseImportService importDatabase should fail due to incorrect json","status":"passed","title":"should fail due to incorrect json"},{"ancestorTitles":["DatabaseImportService","importDatabase"],"duration":5,"failureMessages":[],"fullName":"DatabaseImportService importDatabase should fail due to incorrect base64 + truncate filename","status":"passed","title":"should fail due to incorrect base64 + truncate filename"},{"ancestorTitles":["DatabaseImportService","createDatabase"],"duration":5,"failureMessages":[],"fullName":"DatabaseImportService createDatabase should create standalone database","status":"passed","title":"should create standalone database"},{"ancestorTitles":["DatabaseImportService","createDatabase"],"duration":5,"failureMessages":[],"fullName":"DatabaseImportService createDatabase should create standalone with created name","status":"passed","title":"should create standalone with created name"},{"ancestorTitles":["DatabaseImportService","createDatabase"],"duration":6,"failureMessages":[],"fullName":"DatabaseImportService createDatabase should create standalone with none compressor","status":"passed","title":"should create standalone with none compressor"},{"ancestorTitles":["DatabaseImportService","createDatabase"],"duration":5,"failureMessages":[],"fullName":"DatabaseImportService createDatabase should create standalone with compressor and tlsServername","status":"passed","title":"should create standalone with compressor and tlsServername"},{"ancestorTitles":["DatabaseImportService","createDatabase"],"duration":6,"failureMessages":[],"fullName":"DatabaseImportService createDatabase should create cluster database","status":"passed","title":"should create cluster database"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":19,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return NOT CONNECTED when called with {}","status":"passed","title":"should return NOT CONNECTED when called with {}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return CLUSTER when called with {\"isCluster\":true}","status":"passed","title":"should return CLUSTER when called with {\"isCluster\":true}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return NOT CONNECTED when called with {\"isCluster\":false}","status":"passed","title":"should return NOT CONNECTED when called with {\"isCluster\":false}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return NOT CONNECTED when called with {}","status":"passed","title":"should return NOT CONNECTED when called with {}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return SENTINEL when called with {\"sentinelMasterName\":\"some name\"}","status":"passed","title":"should return SENTINEL when called with {\"sentinelMasterName\":\"some name\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return STANDALONE when called with {\"connectionType\":\"STANDALONE\"}","status":"passed","title":"should return STANDALONE when called with {\"connectionType\":\"STANDALONE\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return CLUSTER when called with {\"connectionType\":\"CLUSTER\"}","status":"passed","title":"should return CLUSTER when called with {\"connectionType\":\"CLUSTER\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return SENTINEL when called with {\"connectionType\":\"SENTINEL\"}","status":"passed","title":"should return SENTINEL when called with {\"connectionType\":\"SENTINEL\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return NOT CONNECTED when called with {\"connectionType\":\"something not supported\"}","status":"passed","title":"should return NOT CONNECTED when called with {\"connectionType\":\"something not supported\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return STANDALONE when called with {\"type\":\"standalone\"}","status":"passed","title":"should return STANDALONE when called with {\"type\":\"standalone\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return CLUSTER when called with {\"type\":\"cluster\"}","status":"passed","title":"should return CLUSTER when called with {\"type\":\"cluster\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return SENTINEL when called with {\"type\":\"sentinel\"}","status":"passed","title":"should return SENTINEL when called with {\"type\":\"sentinel\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return NOT CONNECTED when called with {\"type\":\"something not supported\"}","status":"passed","title":"should return NOT CONNECTED when called with {\"type\":\"something not supported\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return SENTINEL when called with {\"connectionType\":\"SENTINEL\",\"type\":\"standalone\",\"isCluster\":true,\"sentinelMasterName\":\"some name\"}","status":"passed","title":"should return SENTINEL when called with {\"connectionType\":\"SENTINEL\",\"type\":\"standalone\",\"isCluster\":true,\"sentinelMasterName\":\"some name\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":3,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return STANDALONE when called with {\"type\":\"standalone\",\"isCluster\":true,\"sentinelMasterName\":\"some name\"}","status":"passed","title":"should return STANDALONE when called with {\"type\":\"standalone\",\"isCluster\":true,\"sentinelMasterName\":\"some name\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return CLUSTER when called with {\"isCluster\":true,\"sentinelMasterName\":\"some name\"}","status":"passed","title":"should return CLUSTER when called with {\"isCluster\":true,\"sentinelMasterName\":\"some name\"}"},{"ancestorTitles":["DatabaseImportService","determineConnectionType"],"duration":2,"failureMessages":[],"fullName":"DatabaseImportService determineConnectionType should return SENTINEL when called with {\"sentinelMasterName\":\"some name\"}","status":"passed","title":"should return SENTINEL when called with {\"sentinelMasterName\":\"some name\"}"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501187562,"runtime":1247,"slow":false,"start":1733501186315},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/ai-query.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AiQueryService","stream"],"duration":50,"failureMessages":[],"fullName":"AiQueryService stream should stream an answer","status":"passed","title":"should stream an answer"},{"ancestorTitles":["AiQueryService","stream"],"duration":23,"failureMessages":[],"fullName":"AiQueryService stream should not fail in case of empty ack","status":"passed","title":"should not fail in case of empty ack"},{"ancestorTitles":["AiQueryService","stream"],"duration":31,"failureMessages":[],"fullName":"AiQueryService stream should calculate index and get from cache on 2nd attempt and send error on 3d attempt","status":"passed","title":"should calculate index and get from cache on 2nd attempt and send error on 3d attempt"},{"ancestorTitles":["AiQueryService","stream"],"duration":19,"failureMessages":[],"fullName":"AiQueryService stream should return errors for run queries","status":"passed","title":"should return errors for run queries"},{"ancestorTitles":["AiQueryService","stream"],"duration":13,"failureMessages":[],"fullName":"AiQueryService stream should fail when ack has error property","status":"passed","title":"should fail when ack has error property"},{"ancestorTitles":["AiQueryService","getHistory"],"duration":2,"failureMessages":[],"fullName":"AiQueryService getHistory should get history","status":"passed","title":"should get history"},{"ancestorTitles":["AiQueryService","getHistory"],"duration":3,"failureMessages":[],"fullName":"AiQueryService getHistory should get history from 2nd attempt","status":"passed","title":"should get history from 2nd attempt"},{"ancestorTitles":["AiQueryService","getHistory"],"duration":2,"failureMessages":[],"fullName":"AiQueryService getHistory throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["AiQueryService","clearHistory"],"duration":1,"failureMessages":[],"fullName":"AiQueryService clearHistory should clear history","status":"passed","title":"should clear history"},{"ancestorTitles":["AiQueryService","clearHistory"],"duration":2,"failureMessages":[],"fullName":"AiQueryService clearHistory should clear history from 2nd attempt","status":"passed","title":"should clear history from 2nd attempt"},{"ancestorTitles":["AiQueryService","clearHistory"],"duration":1,"failureMessages":[],"fullName":"AiQueryService clearHistory throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":24,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501188669,"runtime":876,"slow":false,"start":1733501187793},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/capi-key/cloud-capi-key.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudCapiKeyService","generateName"],"duration":15,"failureMessages":[],"fullName":"CloudCapiKeyService generateName successfully generate capi key name","status":"passed","title":"successfully generate capi key name"},{"ancestorTitles":["CloudCapiKeyService","generateName"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService generateName successfully generate capi key name when no createdAt field","status":"passed","title":"successfully generate capi key name when no createdAt field"},{"ancestorTitles":["CloudCapiKeyService","generateName"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService generateName successfully generate capi key name when no capi key was provided","status":"passed","title":"successfully generate capi key name when no capi key was provided"},{"ancestorTitles":["CloudCapiKeyService","ensureCapiKeys"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyService ensureCapiKeys Should return exist capi key","status":"passed","title":"Should return exist capi key"},{"ancestorTitles":["CloudCapiKeyService","ensureCapiKeys"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService ensureCapiKeys Should generate new capi key","status":"passed","title":"Should generate new capi key"},{"ancestorTitles":["CloudCapiKeyService","ensureCapiKeys"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService ensureCapiKeys Should generate new capi key but enable CAPI before","status":"passed","title":"Should generate new capi key but enable CAPI before"},{"ancestorTitles":["CloudCapiKeyService","ensureCapiKeys"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService ensureCapiKeys Should throw CloudCapiKeyUnauthorizedException if capiKey is not valid","status":"passed","title":"Should throw CloudCapiKeyUnauthorizedException if capiKey is not valid"},{"ancestorTitles":["CloudCapiKeyService","ensureCapiKeys"],"duration":24,"failureMessages":[],"fullName":"CloudCapiKeyService ensureCapiKeys Should throw CloudApiBadRequestException","status":"passed","title":"Should throw CloudApiBadRequestException"},{"ancestorTitles":["CloudCapiKeyService","getCapiCredentials"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService getCapiCredentials Should generate new capi key","status":"passed","title":"Should generate new capi key"},{"ancestorTitles":["CloudCapiKeyService","get"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService get Should get capi key","status":"passed","title":"Should get capi key"},{"ancestorTitles":["CloudCapiKeyService","get"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService get Should throw CloudCapiKeyNotFoundException when there is no capi key","status":"passed","title":"Should throw CloudCapiKeyNotFoundException when there is no capi key"},{"ancestorTitles":["CloudCapiKeyService","get"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService get Should wrap an error in case of any","status":"passed","title":"Should wrap an error in case of any"},{"ancestorTitles":["CloudCapiKeyService","getByUserAccount"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyService getByUserAccount Should get capi key","status":"passed","title":"Should get capi key"},{"ancestorTitles":["CloudCapiKeyService","getByUserAccount"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyService getByUserAccount Should throw CloudCapiKeyNotFoundException when there is no capi key","status":"passed","title":"Should throw CloudCapiKeyNotFoundException when there is no capi key"},{"ancestorTitles":["CloudCapiKeyService","list"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService list Should get list of capi keys","status":"passed","title":"Should get list of capi keys"},{"ancestorTitles":["CloudCapiKeyService","list"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyService list Should wrap an error in case of any","status":"passed","title":"Should wrap an error in case of any"},{"ancestorTitles":["CloudCapiKeyService","delete"],"duration":1,"failureMessages":[],"fullName":"CloudCapiKeyService delete Should delete capi key","status":"passed","title":"Should delete capi key"},{"ancestorTitles":["CloudCapiKeyService","delete"],"duration":4,"failureMessages":[],"fullName":"CloudCapiKeyService delete Should wrap an error in case of any","status":"passed","title":"Should wrap an error in case of any"},{"ancestorTitles":["CloudCapiKeyService","deleteAll"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService deleteAll Should delete all capi keys","status":"passed","title":"Should delete all capi keys"},{"ancestorTitles":["CloudCapiKeyService","deleteAll"],"duration":4,"failureMessages":[],"fullName":"CloudCapiKeyService deleteAll Should wrap an error in case of any","status":"passed","title":"Should wrap an error in case of any"},{"ancestorTitles":["CloudCapiKeyService","handleCapiKeyUnauthorizedError"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService handleCapiKeyUnauthorizedError should show BadRequestException error","status":"passed","title":"should show BadRequestException error"},{"ancestorTitles":["CloudCapiKeyService","handleCapiKeyUnauthorizedError"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyService handleCapiKeyUnauthorizedError should throw CloudCapiKeyUnauthorizedException error and mark as invalid","status":"passed","title":"should throw CloudCapiKeyUnauthorizedException error and mark as invalid"},{"ancestorTitles":["CloudCapiKeyService","handleCapiKeyUnauthorizedError"],"duration":2,"failureMessages":[],"fullName":"CloudCapiKeyService handleCapiKeyUnauthorizedError should throw CloudCapiUnauthorizedException if no key","status":"passed","title":"should throw CloudCapiUnauthorizedException if no key"},{"ancestorTitles":["CloudCapiKeyService","handleCapiKeyUnauthorizedError"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyService handleCapiKeyUnauthorizedError should throw CloudCapiUnauthorizedException if no user","status":"passed","title":"should throw CloudCapiUnauthorizedException if no user"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501190080,"runtime":1077,"slow":false,"start":1733501189003},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/database.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseAnalytics","sendInstanceAddedEvent"],"duration":4,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceAddedEvent should emit event with enabled tls and sni, and ssh","status":"passed","title":"should emit event with enabled tls and sni, and ssh"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceAddedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceAddedEvent should emit event with disabled tls and sni","status":"passed","title":"should emit event with disabled tls and sni"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceAddedEvent"],"duration":2,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceAddedEvent should emit event without additional info","status":"passed","title":"should emit event without additional info"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceAddedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceAddedEvent should emit event without db index","status":"passed","title":"should emit event without db index"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceEditedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceEditedEvent should emit event for manual update by user with disabled tls","status":"passed","title":"should emit event for manual update by user with disabled tls"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceEditedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceEditedEvent should emit event for manual update by user with enabled tls","status":"passed","title":"should emit event for manual update by user with enabled tls"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceEditedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceEditedEvent should not emit event if instance updated not by user","status":"passed","title":"should not emit event if instance updated not by user"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceAddFailedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceAddFailedEvent should emit AddFailed event","status":"passed","title":"should emit AddFailed event"},{"ancestorTitles":["DatabaseAnalytics","sendInstanceDeletedEvent"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalytics sendInstanceDeletedEvent should emit Deleted event","status":"passed","title":"should emit Deleted event"},{"ancestorTitles":["DatabaseAnalytics","sendConnectionFailedEvent"],"duration":9,"failureMessages":[],"fullName":"DatabaseAnalytics sendConnectionFailedEvent should emit ConnectionFailed event","status":"passed","title":"should emit ConnectionFailed event"},{"ancestorTitles":["DatabaseAnalytics","sendDatabaseConnectedClientListEvent"],"duration":2,"failureMessages":[],"fullName":"DatabaseAnalytics sendDatabaseConnectedClientListEvent should emit event","status":"passed","title":"should emit event"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501190881,"runtime":620,"slow":false,"start":1733501190261},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/connection/ioredis.redis.connection.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["IoredisRedisConnectionStrategy","retryStrategy"],"duration":4,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy retryStrategy should return 500ms delay for first retry","status":"passed","title":"should return 500ms delay for first retry"},{"ancestorTitles":["IoredisRedisConnectionStrategy","retryStrategy"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy retryStrategy should return 1000ms delay for second retry","status":"passed","title":"should return 1000ms delay for second retry"},{"ancestorTitles":["IoredisRedisConnectionStrategy","retryStrategy"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy retryStrategy should return undefined when number of retries exceeded","status":"passed","title":"should return undefined when number of retries exceeded"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":3,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should successfully create standalone client","status":"passed","title":"should successfully create standalone client"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should successfully create standalone client with reconnect","status":"passed","title":"should successfully create standalone client with reconnect"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should successfully create standalone client with ssh","status":"passed","title":"should successfully create standalone client with ssh"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should successfully create standalone client with db = 0 for sentinel","status":"passed","title":"should successfully create standalone client with db = 0 for sentinel"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should successfully create standalone client with db > 0 for !sentinel","status":"passed","title":"should successfully create standalone client with db > 0 for !sentinel"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":35,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should fail to create standalone connection","status":"passed","title":"should fail to create standalone connection"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":3,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should fail to create standalone connection due to \"end\" event","status":"passed","title":"should fail to create standalone connection due to \"end\" event"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createStandaloneClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createStandaloneClient should handle sync error during standalone client creation","status":"passed","title":"should handle sync error during standalone client creation"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createClusterClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createClusterClient should successfully create cluster client","status":"passed","title":"should successfully create cluster client"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createClusterClient"],"duration":3,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createClusterClient should fail to create cluster connection due to \"error\" event","status":"passed","title":"should fail to create cluster connection due to \"error\" event"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createClusterClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createClusterClient should fail with lastNodeError","status":"passed","title":"should fail with lastNodeError"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createClusterClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createClusterClient should fail to create cluster connection due to \"end\" event","status":"passed","title":"should fail to create cluster connection due to \"end\" event"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createClusterClient"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createClusterClient should handle sync error during cluster client creation","status":"passed","title":"should handle sync error during cluster client creation"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createSentinelClient"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createSentinelClient should successfully create sentinel client","status":"passed","title":"should successfully create sentinel client"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createSentinelClient"],"duration":3,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createSentinelClient should fail to create sentinel connection due to \"error\" event","status":"passed","title":"should fail to create sentinel connection due to \"error\" event"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createSentinelClient"],"duration":2,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createSentinelClient should fail to create sentinel connection due to \"end\" event","status":"passed","title":"should fail to create sentinel connection due to \"end\" event"},{"ancestorTitles":["IoredisRedisConnectionStrategy","createSentinelClient"],"duration":1,"failureMessages":[],"fullName":"IoredisRedisConnectionStrategy createSentinelClient should handle sync error during sentinel client creation","status":"passed","title":"should handle sync error during sentinel client creation"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501191222,"runtime":160,"slow":false,"start":1733501191062},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/providers/database-analyzer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseAnalyzer","calculateSimpleSummary"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateSimpleSummary should calculate simple summary by memory","status":"passed","title":"should calculate simple summary by memory"},{"ancestorTitles":["DatabaseAnalyzer","calculateSimpleSummary"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateSimpleSummary should calculate simple summary by memory (null handled)","status":"passed","title":"should calculate simple summary by memory (null handled)"},{"ancestorTitles":["DatabaseAnalyzer","calculateSimpleSummary"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateSimpleSummary should calculate simple summary by keys number","status":"passed","title":"should calculate simple summary by keys number"},{"ancestorTitles":["DatabaseAnalyzer","calculateSimpleSummary"],"duration":0,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateSimpleSummary should calculate simple summary by keys number (null handled)","status":"passed","title":"should calculate simple summary by keys number (null handled)"},{"ancestorTitles":["DatabaseAnalyzer","calculateTopKeys"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateTopKeys should calculate top keys by memory","status":"passed","title":"should calculate top keys by memory"},{"ancestorTitles":["DatabaseAnalyzer","calculateTopKeys"],"duration":0,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateTopKeys should calculate top keys by memory (with null)","status":"passed","title":"should calculate top keys by memory (with null)"},{"ancestorTitles":["DatabaseAnalyzer","calculateTopKeys"],"duration":1,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateTopKeys should calculate top keys by length","status":"passed","title":"should calculate top keys by length"},{"ancestorTitles":["DatabaseAnalyzer","calculateTopKeys"],"duration":0,"failureMessages":[],"fullName":"DatabaseAnalyzer calculateTopKeys should calculate top keys by length (with null)","status":"passed","title":"should calculate top keys by length (with null)"},{"ancestorTitles":["DatabaseAnalyzer","getNamespacesMap"],"duration":2,"failureMessages":[],"fullName":"DatabaseAnalyzer getNamespacesMap should get namespaces map","status":"passed","title":"should get namespaces map"},{"ancestorTitles":["DatabaseAnalyzer","getNamespacesMap"],"duration":0,"failureMessages":[],"fullName":"DatabaseAnalyzer getNamespacesMap should get namespaces map (for keys without nsps)","status":"passed","title":"should get namespaces map (for keys without nsps)"},{"ancestorTitles":["DatabaseAnalyzer","analyze"],"duration":3,"failureMessages":[],"fullName":"DatabaseAnalyzer analyze should return analysis","status":"passed","title":"should return analysis"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501191801,"runtime":574,"slow":false,"start":1733501191227},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/providers/workbench-commands.executor.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":6,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should successfully send ft.info","status":"passed","title":"should successfully send ft.info"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":2,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should successfully send command for standalone","status":"passed","title":"should successfully send command for standalone"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":20,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should return fail status in case of unsupported command error","status":"passed","title":"should return fail status in case of unsupported command error"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":2,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should return fail status when replyError happened","status":"passed","title":"should return fail status when replyError happened"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":1,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should successfully execute command and return ascii response","status":"passed","title":"should successfully execute command and return ascii response"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":1,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should successfully execute command and return raw response","status":"passed","title":"should successfully execute command and return raw response"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","sendCommandForStandalone"],"duration":3,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand sendCommandForStandalone should return fail status when on unexpected error","status":"passed","title":"should return fail status when on unexpected error"},{"ancestorTitles":["WorkbenchCommandsExecutor","sendCommand","CommandParsingError"],"duration":6,"failureMessages":[],"fullName":"WorkbenchCommandsExecutor sendCommand CommandParsingError should return response with [CLI_UNTERMINATED_QUOTES] error for sendCommandForNodes","status":"passed","title":"should return response with [CLI_UNTERMINATED_QUOTES] error for sendCommandForNodes"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501193231,"runtime":1180,"slow":false,"start":1733501192051},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/workbench.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["WorkbenchAnalytics","sendIndexInfoEvent"],"duration":4,"failureMessages":[],"fullName":"WorkbenchAnalytics sendIndexInfoEvent should emit index info event","status":"passed","title":"should emit index info event"},{"ancestorTitles":["WorkbenchAnalytics","sendIndexInfoEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendIndexInfoEvent should not fail and should not emit when no data to send","status":"passed","title":"should not fail and should not emit when no data to send"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvents"],"duration":2,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvents should emit multiple events","status":"passed","title":"should emit multiple events"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandExecuted event","status":"passed","title":"should emit WorkbenchCommandExecuted event"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit event if failed to fetch commands groups","status":"passed","title":"should emit event if failed to fetch commands groups"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandExecuted event (module with cap.)","status":"passed","title":"should emit WorkbenchCommandExecuted event (module with cap.)"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandExecuted event (module w\\o cap.)","status":"passed","title":"should emit WorkbenchCommandExecuted event (module w\\o cap.)"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandExecuted event (custom module)","status":"passed","title":"should emit WorkbenchCommandExecuted event (custom module)"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandExecuted event without additional data","status":"passed","title":"should emit WorkbenchCommandExecuted event without additional data"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":2,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandError event","status":"passed","title":"should emit WorkbenchCommandError event"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandError event without additional data","status":"passed","title":"should emit WorkbenchCommandError event without additional data"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandError event for custom error","status":"passed","title":"should emit WorkbenchCommandError event for custom error"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandExecutedEvent"],"duration":2,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandExecutedEvent should emit WorkbenchCommandError event for HttpException","status":"passed","title":"should emit WorkbenchCommandError event for HttpException"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandDeletedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandDeletedEvent should emit WorkbenchCommandDeleted event","status":"passed","title":"should emit WorkbenchCommandDeleted event"},{"ancestorTitles":["WorkbenchAnalytics","sendCommandDeletedEvent"],"duration":1,"failureMessages":[],"fullName":"WorkbenchAnalytics sendCommandDeletedEvent should emit WorkbenchCommandDeleted event without additional data","status":"passed","title":"should emit WorkbenchCommandDeleted event without additional data"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501194013,"runtime":606,"slow":false,"start":1733501193407},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/providers/database-overview.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":15,"failureMessages":[],"fullName":"OverviewService getOverview Standalone should return proper overview","status":"passed","title":"should return proper overview"},{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":1,"failureMessages":[],"fullName":"OverviewService getOverview Standalone should return total 0 and empty total per db object","status":"passed","title":"should return total 0 and empty total per db object"},{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":1,"failureMessages":[],"fullName":"OverviewService getOverview Standalone should return total 3 and empty total per db object (even when role is not master)","status":"passed","title":"should return total 3 and empty total per db object (even when role is not master)"},{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":1,"failureMessages":[],"fullName":"OverviewService getOverview Standalone should not return particular fields when metrics are not available","status":"passed","title":"should not return particular fields when metrics are not available"},{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":1,"failureMessages":[],"fullName":"OverviewService getOverview Standalone check for cpu on second attempt","status":"passed","title":"check for cpu on second attempt"},{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":2,"failureMessages":[],"fullName":"OverviewService getOverview Standalone check for cpu max value = 100","status":"passed","title":"check for cpu max value = 100"},{"ancestorTitles":["OverviewService","getOverview","Standalone"],"duration":1,"failureMessages":[],"fullName":"OverviewService getOverview Standalone should not return cpu (undefined) when used_cpu_sys = 0","status":"passed","title":"should not return cpu (undefined) when used_cpu_sys = 0"},{"ancestorTitles":["OverviewService","getOverview","Cluster"],"duration":2,"failureMessages":[],"fullName":"OverviewService getOverview Cluster Should calculate overview and ignore replica where needed","status":"passed","title":"Should calculate overview and ignore replica where needed"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501195489,"runtime":1296,"slow":false,"start":1733501194193},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis-enterprise/redis-enterprise.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisEnterpriseService","getDatabases"],"duration":8,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabases successfully get databases from RE cluster","status":"passed","title":"successfully get databases from RE cluster"},{"ancestorTitles":["RedisEnterpriseService","getDatabases"],"duration":232,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabases the user could not be authenticated","status":"passed","title":"the user could not be authenticated"},{"ancestorTitles":["RedisEnterpriseService","getDatabases"],"duration":4,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabases connection refused","status":"passed","title":"connection refused"},{"ancestorTitles":["RedisEnterpriseService","getDatabaseExternalEndpoint"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabaseExternalEndpoint should return only one external endpoints","status":"passed","title":"should return only one external endpoints"},{"ancestorTitles":["RedisEnterpriseService","getDatabaseExternalEndpoint"],"duration":1,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabaseExternalEndpoint should return undefined","status":"passed","title":"should return undefined"},{"ancestorTitles":["RedisEnterpriseService","getDatabasePersistencePolicy"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabasePersistencePolicy should return AofEveryOneSecond","status":"passed","title":"should return AofEveryOneSecond"},{"ancestorTitles":["RedisEnterpriseService","getDatabasePersistencePolicy"],"duration":1,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabasePersistencePolicy should return AofEveryWrite","status":"passed","title":"should return AofEveryWrite"},{"ancestorTitles":["RedisEnterpriseService","getDatabasePersistencePolicy"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabasePersistencePolicy should return SnapshotEveryOneHour","status":"passed","title":"should return SnapshotEveryOneHour"},{"ancestorTitles":["RedisEnterpriseService","getDatabasePersistencePolicy"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabasePersistencePolicy should return SnapshotEverySixHours","status":"passed","title":"should return SnapshotEverySixHours"},{"ancestorTitles":["RedisEnterpriseService","getDatabasePersistencePolicy"],"duration":1,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabasePersistencePolicy should return SnapshotEveryTwelveHours","status":"passed","title":"should return SnapshotEveryTwelveHours"},{"ancestorTitles":["RedisEnterpriseService","getDatabasePersistencePolicy"],"duration":1,"failureMessages":[],"fullName":"RedisEnterpriseService getDatabasePersistencePolicy should return None","status":"passed","title":"should return None"},{"ancestorTitles":["RedisEnterpriseService","findReplicasForDatabase"],"duration":1,"failureMessages":[],"fullName":"RedisEnterpriseService findReplicasForDatabase successfully return replicas","status":"passed","title":"successfully return replicas"},{"ancestorTitles":["RedisEnterpriseService","findReplicasForDatabase"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseService findReplicasForDatabase source dont have replicas","status":"passed","title":"source dont have replicas"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501196315,"runtime":542,"slow":false,"start":1733501195773},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/autodiscovery/cloud-autodicovery.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsSucceedEvent"],"duration":4,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsSucceedEvent should emit event with active subscriptions","status":"passed","title":"should emit event with active subscriptions"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsSucceedEvent should emit event with active and not active subscription","status":"passed","title":"should emit event with active and not active subscription"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsSucceedEvent should emit event without active subscriptions","status":"passed","title":"should emit event without active subscriptions"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsSucceedEvent should emit GetRECloudSubsSucceedEvent event for empty list","status":"passed","title":"should emit GetRECloudSubsSucceedEvent event for empty list"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsSucceedEvent should emit GetRECloudSubsSucceedEvent event for undefined input value","status":"passed","title":"should emit GetRECloudSubsSucceedEvent event for undefined input value"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsSucceedEvent should not throw on error when sending GetRECloudSubsSucceedEvent event","status":"passed","title":"should not throw on error when sending GetRECloudSubsSucceedEvent event"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudSubsFailedEvent"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudSubsFailedEvent should emit GetRECloudSubsFailedEvent event","status":"passed","title":"should emit GetRECloudSubsFailedEvent event"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsSucceedEvent should emit event with active databases","status":"passed","title":"should emit event with active databases"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsSucceedEvent should emit event with active and not active database","status":"passed","title":"should emit event with active and not active database"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsSucceedEvent should emit event without active databases","status":"passed","title":"should emit event without active databases"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsSucceedEvent should emit event for empty list","status":"passed","title":"should emit event for empty list"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsSucceedEvent should emit event for undefined input value","status":"passed","title":"should emit event for undefined input value"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsSucceedEvent should not throw on error","status":"passed","title":"should not throw on error"},{"ancestorTitles":["CloudAutodiscoveryAnalytics","sendGetRECloudDbsFailedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAutodiscoveryAnalytics sendGetRECloudDbsFailedEvent should emit event","status":"passed","title":"should emit event"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501197034,"runtime":544,"slow":false,"start":1733501196490},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/bulk-actions.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkActionsAnalytics","sendActionStarted"],"duration":4,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStarted should emit event when action started (without summary)","status":"passed","title":"should emit event when action started (without summary)"},{"ancestorTitles":["BulkActionsAnalytics","sendActionStarted"],"duration":2,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStarted should emit event when action started without progress data and filter as \"PATTERN\"","status":"passed","title":"should emit event when action started without progress data and filter as \"PATTERN\""},{"ancestorTitles":["BulkActionsAnalytics","sendActionStarted"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStarted should emit event when action started without progress and filter","status":"passed","title":"should emit event when action started without progress and filter"},{"ancestorTitles":["BulkActionsAnalytics","sendActionStarted"],"duration":2,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStarted should not emit event in case of an error and should not fail","status":"passed","title":"should not emit event in case of an error and should not fail"},{"ancestorTitles":["BulkActionsAnalytics","sendActionStopped"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStopped should emit event when action paused/stopped","status":"passed","title":"should emit event when action paused/stopped"},{"ancestorTitles":["BulkActionsAnalytics","sendActionStopped"],"duration":2,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStopped should emit event when action paused/stopped without progress, filter and summary","status":"passed","title":"should emit event when action paused/stopped without progress, filter and summary"},{"ancestorTitles":["BulkActionsAnalytics","sendActionStopped"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionStopped should not emit event in case of an error and should not fail","status":"passed","title":"should not emit event in case of an error and should not fail"},{"ancestorTitles":["BulkActionsAnalytics","sendActionSucceed"],"duration":2,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionSucceed should emit event when action succeed (without progress)","status":"passed","title":"should emit event when action succeed (without progress)"},{"ancestorTitles":["BulkActionsAnalytics","sendActionSucceed"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionSucceed should emit event when action succeed without filter and summary","status":"passed","title":"should emit event when action succeed without filter and summary"},{"ancestorTitles":["BulkActionsAnalytics","sendActionSucceed"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionSucceed should not emit event in case of an error and should not fail","status":"passed","title":"should not emit event in case of an error and should not fail"},{"ancestorTitles":["BulkActionsAnalytics","sendActionFailed"],"duration":2,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionFailed should emit event when action failed (without progress)","status":"passed","title":"should emit event when action failed (without progress)"},{"ancestorTitles":["BulkActionsAnalytics","sendActionFailed"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendActionFailed should not emit event in case of an error and should not fail","status":"passed","title":"should not emit event in case of an error and should not fail"},{"ancestorTitles":["BulkActionsAnalytics","sendImportSamplesUploaded"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendImportSamplesUploaded should emit event when action succeed (without progress)","status":"passed","title":"should emit event when action succeed (without progress)"},{"ancestorTitles":["BulkActionsAnalytics","sendImportSamplesUploaded"],"duration":2,"failureMessages":[],"fullName":"BulkActionsAnalytics sendImportSamplesUploaded should emit event when action succeed without filter and summary","status":"passed","title":"should emit event when action succeed without filter and summary"},{"ancestorTitles":["BulkActionsAnalytics","sendImportSamplesUploaded"],"duration":1,"failureMessages":[],"fullName":"BulkActionsAnalytics sendImportSamplesUploaded should not emit event in case of an error and should not fail","status":"passed","title":"should not emit event in case of an error and should not fail"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501198659,"runtime":1353,"slow":false,"start":1733501197306},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/custom-tutorial/custom-tutorial.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CustomTutorialService","determineTutorialName"],"duration":5,"failureMessages":[],"fullName":"CustomTutorialService determineTutorialName Should generate proper tutorial name for all possible inputs","status":"passed","title":"Should generate proper tutorial name for all possible inputs"},{"ancestorTitles":["CustomTutorialService","create"],"duration":4,"failureMessages":[],"fullName":"CustomTutorialService create Should create custom tutorial from file","status":"passed","title":"Should create custom tutorial from file"},{"ancestorTitles":["CustomTutorialService","create"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialService create Should create custom tutorial from external url (w/o manifest)","status":"passed","title":"Should create custom tutorial from external url (w/o manifest)"},{"ancestorTitles":["CustomTutorialService","create"],"duration":19,"failureMessages":[],"fullName":"CustomTutorialService create Should throw BadRequestException in case when either link or file was not provided","status":"passed","title":"Should throw BadRequestException in case when either link or file was not provided"},{"ancestorTitles":["CustomTutorialService","create"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialService create Should throw BadRequestException in case when manifest exists but unable to parse it","status":"passed","title":"Should throw BadRequestException in case when manifest exists but unable to parse it"},{"ancestorTitles":["CustomTutorialService","create"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialService create Should throw BadRequestException in case when manifest is not an object","status":"passed","title":"Should throw BadRequestException in case when manifest is not an object"},{"ancestorTitles":["CustomTutorialService","create"],"duration":5,"failureMessages":[],"fullName":"CustomTutorialService create Should throw BadRequestException in case when manifest json has invalid schema","status":"passed","title":"Should throw BadRequestException in case when manifest json has invalid schema"},{"ancestorTitles":["CustomTutorialService","create"],"duration":4,"failureMessages":[],"fullName":"CustomTutorialService create Should throw InternalServerError in case of any non-HttpException error","status":"passed","title":"Should throw InternalServerError in case of any non-HttpException error"},{"ancestorTitles":["CustomTutorialService","getGlobalManifest"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialService getGlobalManifest Should return global manifest with 2 tutorials","status":"passed","title":"Should return global manifest with 2 tutorials"},{"ancestorTitles":["CustomTutorialService","getGlobalManifest"],"duration":9,"failureMessages":[],"fullName":"CustomTutorialService getGlobalManifest Should return global manifest with 1 tutorials since 1 failed to fetch","status":"passed","title":"Should return global manifest with 1 tutorials since 1 failed to fetch"},{"ancestorTitles":["CustomTutorialService","getGlobalManifest"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialService getGlobalManifest Should return global manifest without children in case of any error","status":"passed","title":"Should return global manifest without children in case of any error"},{"ancestorTitles":["CustomTutorialService","delete"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialService delete Should successfully delete entity and remove related directory","status":"passed","title":"Should successfully delete entity and remove related directory"},{"ancestorTitles":["CustomTutorialService","delete"],"duration":4,"failureMessages":[],"fullName":"CustomTutorialService delete Should throw NotFound error when try to delete not existing tutorial","status":"passed","title":"Should throw NotFound error when try to delete not existing tutorial"},{"ancestorTitles":["CustomTutorialService","delete"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialService delete Should throw InternalServerError in case of any non-HttpException error","status":"passed","title":"Should throw InternalServerError in case of any non-HttpException error"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501199407,"runtime":572,"slow":false,"start":1733501198835},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/settings/settings.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SettingsService","getAppSettings"],"duration":5,"failureMessages":[],"fullName":"SettingsService getAppSettings should return default application settings","status":"passed","title":"should return default application settings"},{"ancestorTitles":["SettingsService","getAppSettings"],"duration":1,"failureMessages":[],"fullName":"SettingsService getAppSettings should return some application settings already defined by user","status":"passed","title":"should return some application settings already defined by user"},{"ancestorTitles":["SettingsService","getAppSettings"],"duration":21,"failureMessages":[],"fullName":"SettingsService getAppSettings should throw InternalServerError","status":"passed","title":"should throw InternalServerError"},{"ancestorTitles":["SettingsService","updateAppSettings"],"duration":3,"failureMessages":[],"fullName":"SettingsService updateAppSettings should update settings only","status":"passed","title":"should update settings only"},{"ancestorTitles":["SettingsService","updateAppSettings"],"duration":2,"failureMessages":[],"fullName":"SettingsService updateAppSettings should update agreements only","status":"passed","title":"should update agreements only"},{"ancestorTitles":["SettingsService","updateAppSettings"],"duration":3,"failureMessages":[],"fullName":"SettingsService updateAppSettings should update agreements and settings","status":"passed","title":"should update agreements and settings"},{"ancestorTitles":["SettingsService","updateAppSettings"],"duration":2,"failureMessages":[],"fullName":"SettingsService updateAppSettings should throw AgreementIsNotDefinedException","status":"passed","title":"should throw AgreementIsNotDefinedException"},{"ancestorTitles":["SettingsService","updateAppSettings"],"duration":4,"failureMessages":[],"fullName":"SettingsService updateAppSettings should throw InternalServerError","status":"passed","title":"should throw InternalServerError"},{"ancestorTitles":["SettingsService","getAgreementsSpec"],"duration":2,"failureMessages":[],"fullName":"SettingsService getAgreementsSpec should get agreements spec","status":"passed","title":"should get agreements spec"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501200174,"runtime":582,"slow":false,"start":1733501199592},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/models/redis.observer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisObserver"],"duration":0,"failureMessages":[],"fullName":"RedisObserver initialization","status":"passed","title":"initialization"},{"ancestorTitles":["RedisObserver","init"],"duration":0,"failureMessages":[],"fullName":"RedisObserver init successfully init","status":"passed","title":"successfully init"},{"ancestorTitles":["RedisObserver","init"],"duration":1,"failureMessages":[],"fullName":"RedisObserver init init error due to redis connection","status":"passed","title":"init error due to redis connection"},{"ancestorTitles":["RedisObserver","subscribe"],"duration":2,"failureMessages":[],"fullName":"RedisObserver subscribe should subscribe to a standalone","status":"passed","title":"should subscribe to a standalone"},{"ancestorTitles":["RedisObserver","subscribe"],"duration":1,"failureMessages":[],"fullName":"RedisObserver subscribe should subscribe to a cluster","status":"passed","title":"should subscribe to a cluster"},{"ancestorTitles":["RedisObserver","unsubscribe"],"duration":2,"failureMessages":[],"fullName":"RedisObserver unsubscribe unsubscribe","status":"passed","title":"unsubscribe"},{"ancestorTitles":["RedisObserver","unsubscribe"],"duration":2,"failureMessages":[],"fullName":"RedisObserver unsubscribe disconnect","status":"passed","title":"disconnect"},{"ancestorTitles":["RedisObserver","connect"],"duration":1,"failureMessages":[],"fullName":"RedisObserver connect connect to standalone","status":"passed","title":"connect to standalone"},{"ancestorTitles":["RedisObserver","connect"],"duration":1,"failureMessages":[],"fullName":"RedisObserver connect connect fail due to NOPERM","status":"passed","title":"connect fail due to NOPERM"},{"ancestorTitles":["RedisObserver","connect"],"duration":1,"failureMessages":[],"fullName":"RedisObserver connect connect fail due an error","status":"passed","title":"connect fail due an error"},{"ancestorTitles":["RedisObserver","connect"],"duration":0,"failureMessages":[],"fullName":"RedisObserver connect connect to cluster","status":"passed","title":"connect to cluster"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501201672,"runtime":1257,"slow":false,"start":1733501200415},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/providers/database.client.factory.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseClientFactory","getOrCreateClient"],"duration":5,"failureMessages":[],"fullName":"DatabaseClientFactory getOrCreateClient should get existing client","status":"passed","title":"should get existing client"},{"ancestorTitles":["DatabaseClientFactory","getOrCreateClient"],"duration":3,"failureMessages":[],"fullName":"DatabaseClientFactory getOrCreateClient should create new and save it client","status":"passed","title":"should create new and save it client"},{"ancestorTitles":["DatabaseClientFactory","getOrCreateClient"],"duration":3,"failureMessages":[],"fullName":"DatabaseClientFactory getOrCreateClient should only instantiate a single client per unique client metadata","status":"passed","title":"should only instantiate a single client per unique client metadata"},{"ancestorTitles":["DatabaseClientFactory","getOrCreateClient"],"duration":2,"failureMessages":[],"fullName":"DatabaseClientFactory getOrCreateClient should reject multiple failed calls with the same error instance","status":"passed","title":"should reject multiple failed calls with the same error instance"},{"ancestorTitles":["DatabaseClientFactory","createClient"],"duration":1,"failureMessages":[],"fullName":"DatabaseClientFactory createClient should create new client and not update connection type","status":"passed","title":"should create new client and not update connection type"},{"ancestorTitles":["DatabaseClientFactory","createClient"],"duration":3,"failureMessages":[],"fullName":"DatabaseClientFactory createClient should create new client and update connection type (first connection)","status":"passed","title":"should create new client and update connection type (first connection)"},{"ancestorTitles":["DatabaseClientFactory","createClient"],"duration":28,"failureMessages":[],"fullName":"DatabaseClientFactory createClient should throw Unauthorized error in case of NOAUTH","status":"passed","title":"should throw Unauthorized error in case of NOAUTH"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501202579,"runtime":716,"slow":false,"start":1733501201863},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/string/string.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StringService","setString"],"duration":13,"failureMessages":[],"fullName":"StringService setString set string with expiration","status":"passed","title":"set string with expiration"},{"ancestorTitles":["StringService","setString"],"duration":2,"failureMessages":[],"fullName":"StringService setString set string without expiration","status":"passed","title":"set string without expiration"},{"ancestorTitles":["StringService","setString"],"duration":11,"failureMessages":[],"fullName":"StringService setString key with this name exist","status":"passed","title":"key with this name exist"},{"ancestorTitles":["StringService","setString"],"duration":4,"failureMessages":[],"fullName":"StringService setString user don't have required permissions for setString","status":"passed","title":"user don't have required permissions for setString"},{"ancestorTitles":["StringService","setString"],"duration":3,"failureMessages":[],"fullName":"StringService setString Should proxy EncryptionService errors","status":"passed","title":"Should proxy EncryptionService errors"},{"ancestorTitles":["StringService","getStringValue"],"duration":2,"failureMessages":[],"fullName":"StringService getStringValue succeed to get string value","status":"passed","title":"succeed to get string value"},{"ancestorTitles":["StringService","getStringValue"],"duration":2,"failureMessages":[],"fullName":"StringService getStringValue try to use 'GET' command not for string data type","status":"passed","title":"try to use 'GET' command not for string data type"},{"ancestorTitles":["StringService","getStringValue"],"duration":3,"failureMessages":[],"fullName":"StringService getStringValue key not found","status":"passed","title":"key not found"},{"ancestorTitles":["StringService","getStringValue"],"duration":3,"failureMessages":[],"fullName":"StringService getStringValue user don't have required permissions for getStringValue","status":"passed","title":"user don't have required permissions for getStringValue"},{"ancestorTitles":["StringService","getStringValue"],"duration":2,"failureMessages":[],"fullName":"StringService getStringValue should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["StringService","updateStringValue"],"duration":2,"failureMessages":[],"fullName":"StringService updateStringValue succeed to update string without expiration","status":"passed","title":"succeed to update string without expiration"},{"ancestorTitles":["StringService","updateStringValue"],"duration":3,"failureMessages":[],"fullName":"StringService updateStringValue succeed to update string with expiration","status":"passed","title":"succeed to update string with expiration"},{"ancestorTitles":["StringService","updateStringValue"],"duration":2,"failureMessages":[],"fullName":"StringService updateStringValue key with this name does not exist","status":"passed","title":"key with this name does not exist"},{"ancestorTitles":["StringService","updateStringValue"],"duration":3,"failureMessages":[],"fullName":"StringService updateStringValue user don't have required permissions for updateStringValue","status":"passed","title":"user don't have required permissions for updateStringValue"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501203422,"runtime":641,"slow":false,"start":1733501202781},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/repositories/local-command-execution.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalCommandExecutionRepository","create"],"duration":27,"failureMessages":[],"fullName":"LocalCommandExecutionRepository create should process new entity","status":"passed","title":"should process new entity"},{"ancestorTitles":["LocalCommandExecutionRepository","create"],"duration":11,"failureMessages":[],"fullName":"LocalCommandExecutionRepository create should return full result even if size limit exceeded","status":"passed","title":"should return full result even if size limit exceeded"},{"ancestorTitles":["LocalCommandExecutionRepository","getList"],"duration":3,"failureMessages":[],"fullName":"LocalCommandExecutionRepository getList should return list (2) of command execution","status":"passed","title":"should return list (2) of command execution"},{"ancestorTitles":["LocalCommandExecutionRepository","getList"],"duration":4,"failureMessages":[],"fullName":"LocalCommandExecutionRepository getList should return list (1) of command execution without failed decrypted item","status":"passed","title":"should return list (1) of command execution without failed decrypted item"},{"ancestorTitles":["LocalCommandExecutionRepository","getOne"],"duration":3,"failureMessages":[],"fullName":"LocalCommandExecutionRepository getOne should return decrypted and transformed command execution","status":"passed","title":"should return decrypted and transformed command execution"},{"ancestorTitles":["LocalCommandExecutionRepository","getOne"],"duration":3,"failureMessages":[],"fullName":"LocalCommandExecutionRepository getOne should return null fields in case of decryption errors","status":"passed","title":"should return null fields in case of decryption errors"},{"ancestorTitles":["LocalCommandExecutionRepository","getOne"],"duration":2,"failureMessages":[],"fullName":"LocalCommandExecutionRepository getOne should return not found exception","status":"passed","title":"should return not found exception"},{"ancestorTitles":["LocalCommandExecutionRepository","delete"],"duration":2,"failureMessages":[],"fullName":"LocalCommandExecutionRepository delete Should not return anything on delete","status":"passed","title":"Should not return anything on delete"},{"ancestorTitles":["LocalCommandExecutionRepository","deleteAll"],"duration":2,"failureMessages":[],"fullName":"LocalCommandExecutionRepository deleteAll Should not return anything on delete","status":"passed","title":"Should not return anything on delete"},{"ancestorTitles":["LocalCommandExecutionRepository","cleanupDatabaseHistory"],"duration":2,"failureMessages":[],"fullName":"LocalCommandExecutionRepository cleanupDatabaseHistory Should should not return anything on cleanup","status":"passed","title":"Should should not return anything on cleanup"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501204889,"runtime":1210,"slow":false,"start":1733501203679},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/exceptions/a-queryi.error.handler.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryBadRequestException of status code is 400","status":"passed","title":"Should return AiQueryBadRequestException of status code is 400"},{"ancestorTitles":["wrapConvAiError"],"duration":8,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryUnauthorizedException of status code is 401","status":"passed","title":"Should return AiQueryUnauthorizedException of status code is 401"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryForbiddenException of status code is 403","status":"passed","title":"Should return AiQueryForbiddenException of status code is 403"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryNotFoundException if statusCode is 404","status":"passed","title":"Should return AiQueryNotFoundException if statusCode is 404"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryInternalServerErrorException of status code is 500","status":"passed","title":"Should return AiQueryInternalServerErrorException of status code is 500"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryInternalServerErrorException by default","status":"passed","title":"Should return AiQueryInternalServerErrorException by default"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return AiQueryInternalServerErrorException if no response field","status":"passed","title":"Should return AiQueryInternalServerErrorException if no response field"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return HttpException if passed children of it","status":"passed","title":"Should return HttpException if passed children of it"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryRateLimitTokenException","status":"passed","title":"Should throw AiQueryRateLimitTokenException"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryRateLimitTokenException with default message","status":"passed","title":"Should throw AiQueryRateLimitTokenException with default message"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryRateLimitRequestException","status":"passed","title":"Should throw AiQueryRateLimitRequestException"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryRateLimitRequestException with default message","status":"passed","title":"Should throw AiQueryRateLimitRequestException with default message"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryRateLimitMaxTokensException","status":"passed","title":"Should throw AiQueryRateLimitMaxTokensException"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryRateLimitMaxTokensException with default message","status":"passed","title":"Should throw AiQueryRateLimitMaxTokensException with default message"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should throw AiQueryInternalServerErrorException when unsupported rate limiter error","status":"passed","title":"Should throw AiQueryInternalServerErrorException when unsupported rate limiter error"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError additional checks for default values for rate limits errors","status":"passed","title":"additional checks for default values for rate limits errors"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501205643,"runtime":576,"slow":false,"start":1733501205067},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/feature.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdated"],"duration":4,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdated should emit FEATURE_FLAG_CONFIG_UPDATED telemetry event","status":"passed","title":"should emit FEATURE_FLAG_CONFIG_UPDATED telemetry event"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdated"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdated should not fail and do not send in case of any error","status":"passed","title":"should not fail and do not send in case of any error"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagRecalculated"],"duration":2,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagRecalculated should emit FEATURE_FLAG_RECALCULATED telemetry event","status":"passed","title":"should emit FEATURE_FLAG_RECALCULATED telemetry event"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagRecalculated"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagRecalculated should not fail and do not send in case of an error","status":"passed","title":"should not fail and do not send in case of an error"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdateError"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdateError should emit telemetry event (common Error)","status":"passed","title":"should emit telemetry event (common Error)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdateError"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdateError should emit telemetry event (UnableToFetchRemoteConfigException)","status":"passed","title":"should emit telemetry event (UnableToFetchRemoteConfigException)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdateError"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdateError should emit telemetry event (ValidationError)","status":"passed","title":"should emit telemetry event (ValidationError)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdateError"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdateError should emit telemetry event ([ValidationError] only first exception)","status":"passed","title":"should emit telemetry event ([ValidationError] only first exception)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagConfigUpdateError"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagConfigUpdateError should not fail and not send in case of an error","status":"passed","title":"should not fail and not send in case of an error"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagInvalidRemoteConfig"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagInvalidRemoteConfig should emit telemetry event (common Error)","status":"passed","title":"should emit telemetry event (common Error)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagInvalidRemoteConfig"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagInvalidRemoteConfig should emit telemetry event (UnableToFetchRemoteConfigException)","status":"passed","title":"should emit telemetry event (UnableToFetchRemoteConfigException)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagInvalidRemoteConfig"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagInvalidRemoteConfig should emit telemetry event (ValidationError)","status":"passed","title":"should emit telemetry event (ValidationError)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagInvalidRemoteConfig"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagInvalidRemoteConfig should emit telemetry event ([ValidationError] only first exception)","status":"passed","title":"should emit telemetry event ([ValidationError] only first exception)"},{"ancestorTitles":["FeatureAnalytics","sendFeatureFlagInvalidRemoteConfig"],"duration":1,"failureMessages":[],"fullName":"FeatureAnalytics sendFeatureFlagInvalidRemoteConfig should not fail and not send in case of an error","status":"passed","title":"should not fail and not send in case of an error"}]},{"numFailingTests":0,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501206464,"runtime":641,"slow":false,"start":1733501205823},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/slow-log/slow-log.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SlowLogService","getSlowLogs"],"duration":5,"failureMessages":[],"fullName":"SlowLogService getSlowLogs should return slowlogs for standalone","status":"passed","title":"should return slowlogs for standalone"},{"ancestorTitles":["SlowLogService","getSlowLogs"],"duration":1,"failureMessages":[],"fullName":"SlowLogService getSlowLogs should return slowlogs for standalone without active connection","status":"passed","title":"should return slowlogs for standalone without active connection"},{"ancestorTitles":["SlowLogService","getSlowLogs"],"duration":2,"failureMessages":[],"fullName":"SlowLogService getSlowLogs should return slowlogs cluster","status":"passed","title":"should return slowlogs cluster"},{"ancestorTitles":["SlowLogService","getSlowLogs"],"duration":1,"failureMessages":[],"fullName":"SlowLogService getSlowLogs should proxy HttpException","status":"passed","title":"should proxy HttpException"},{"ancestorTitles":["SlowLogService","getSlowLogs"],"duration":1,"failureMessages":[],"fullName":"SlowLogService getSlowLogs should throw an Forbidden error when command execution failed","status":"passed","title":"should throw an Forbidden error when command execution failed"},{"ancestorTitles":["SlowLogService","reset"],"duration":1,"failureMessages":[],"fullName":"SlowLogService reset should reset slowlogs for standalone","status":"passed","title":"should reset slowlogs for standalone"},{"ancestorTitles":["SlowLogService","reset"],"duration":1,"failureMessages":[],"fullName":"SlowLogService reset should reset slowlogs cluster","status":"passed","title":"should reset slowlogs cluster"},{"ancestorTitles":["SlowLogService","reset"],"duration":1,"failureMessages":[],"fullName":"SlowLogService reset should proxy HttpException","status":"passed","title":"should proxy HttpException"},{"ancestorTitles":["SlowLogService","reset"],"duration":2,"failureMessages":[],"fullName":"SlowLogService reset should throw an Forbidden error when command execution failed","status":"passed","title":"should throw an Forbidden error when command execution failed"},{"ancestorTitles":["SlowLogService","getConfig"],"duration":1,"failureMessages":[],"fullName":"SlowLogService getConfig should get slowlogs config","status":"passed","title":"should get slowlogs config"},{"ancestorTitles":["SlowLogService","getConfig"],"duration":1,"failureMessages":[],"fullName":"SlowLogService getConfig should get ONLY supported slowlogs config even if there some extra fields in resp","status":"passed","title":"should get ONLY supported slowlogs config even if there some extra fields in resp"},{"ancestorTitles":["SlowLogService","getConfig"],"duration":1,"failureMessages":[],"fullName":"SlowLogService getConfig should proxy HttpException","status":"passed","title":"should proxy HttpException"},{"ancestorTitles":["SlowLogService","getConfig"],"duration":2,"failureMessages":[],"fullName":"SlowLogService getConfig should throw an Forbidden error when command execution failed","status":"passed","title":"should throw an Forbidden error when command execution failed"},{"ancestorTitles":["SlowLogService","updateConfig"],"duration":1,"failureMessages":[],"fullName":"SlowLogService updateConfig should update slowlogs config (1 field)","status":"passed","title":"should update slowlogs config (1 field)"},{"ancestorTitles":["SlowLogService","updateConfig"],"duration":2,"failureMessages":[],"fullName":"SlowLogService updateConfig should update slowlogs config (2 fields)","status":"passed","title":"should update slowlogs config (2 fields)"},{"ancestorTitles":["SlowLogService","updateConfig"],"duration":1,"failureMessages":[],"fullName":"SlowLogService updateConfig should throw an error for cluster","status":"passed","title":"should throw an error for cluster"},{"ancestorTitles":["SlowLogService","updateConfig"],"duration":10,"failureMessages":[],"fullName":"SlowLogService updateConfig should proxy HttpException","status":"passed","title":"should proxy HttpException"},{"ancestorTitles":["SlowLogService","updateConfig"],"duration":1,"failureMessages":[],"fullName":"SlowLogService updateConfig should throw an Forbidden error when command execution failed","status":"passed","title":"should throw an Forbidden error when command execution failed"}]},{"numFailingTests":0,"numPassingTests":23,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501207755,"runtime":1052,"slow":false,"start":1733501206703},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/statics-management/providers/auto-updated-statics.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AutoUpdatedStaticsProvider","onModuleInit"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider onModuleInit should invoke autoUpdate and initDefaults","status":"passed","title":"should invoke autoUpdate and initDefaults"},{"ancestorTitles":["AutoUpdatedStaticsProvider","onModuleInit"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider onModuleInit should invoke autoUpdate but not initDefaults","status":"passed","title":"should invoke autoUpdate but not initDefaults"},{"ancestorTitles":["AutoUpdatedStaticsProvider","onModuleInit"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider onModuleInit should not invoke autoUpdate but invoke initDefaults","status":"passed","title":"should not invoke autoUpdate but invoke initDefaults"},{"ancestorTitles":["AutoUpdatedStaticsProvider","onModuleInit"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider onModuleInit should not invoke autoUpdate and initDefaults","status":"passed","title":"should not invoke autoUpdate and initDefaults"},{"ancestorTitles":["AutoUpdatedStaticsProvider","initDefaults"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider initDefaults should not copy defaults when files already exists","status":"passed","title":"should not copy defaults when files already exists"},{"ancestorTitles":["AutoUpdatedStaticsProvider","initDefaults"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider initDefaults should copy defaults when no files in home directory","status":"passed","title":"should copy defaults when no files in home directory"},{"ancestorTitles":["AutoUpdatedStaticsProvider","initDefaults"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider initDefaults should not fail when there is an error during copying default files","status":"passed","title":"should not fail when there is an error during copying default files"},{"ancestorTitles":["AutoUpdatedStaticsProvider","autoUpdate"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider autoUpdate should not try to update when there is nothing to update","status":"passed","title":"should not try to update when there is nothing to update"},{"ancestorTitles":["AutoUpdatedStaticsProvider","autoUpdate"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider autoUpdate should try to update","status":"passed","title":"should try to update"},{"ancestorTitles":["AutoUpdatedStaticsProvider","autoUpdate"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider autoUpdate should not throw and error when update failed","status":"passed","title":"should not throw and error when update failed"},{"ancestorTitles":["AutoUpdatedStaticsProvider","updateStaticFiles"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider updateStaticFiles should not process when no archive found","status":"passed","title":"should not process when no archive found"},{"ancestorTitles":["AutoUpdatedStaticsProvider","updateStaticFiles"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider updateStaticFiles should extract all files","status":"passed","title":"should extract all files"},{"ancestorTitles":["AutoUpdatedStaticsProvider","getLatestArchive"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider getLatestArchive should return latest archive buffer","status":"passed","title":"should return latest archive buffer"},{"ancestorTitles":["AutoUpdatedStaticsProvider","getLatestArchive"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider getLatestArchive should return null when error during downloading archive","status":"passed","title":"should return null when error during downloading archive"},{"ancestorTitles":["AutoUpdatedStaticsProvider","isUpdatesAvailable"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider isUpdatesAvailable should return true when current timestamp is less then remote","status":"passed","title":"should return true when current timestamp is less then remote"},{"ancestorTitles":["AutoUpdatedStaticsProvider","isUpdatesAvailable"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider isUpdatesAvailable should return true when no current timestamp but remote timestamp exists","status":"passed","title":"should return true when no current timestamp but remote timestamp exists"},{"ancestorTitles":["AutoUpdatedStaticsProvider","isUpdatesAvailable"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider isUpdatesAvailable should return false when no remote timestamp but has current","status":"passed","title":"should return false when no remote timestamp but has current"},{"ancestorTitles":["AutoUpdatedStaticsProvider","isUpdatesAvailable"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider isUpdatesAvailable should return false when no remote and current timestamps","status":"passed","title":"should return false when no remote and current timestamps"},{"ancestorTitles":["AutoUpdatedStaticsProvider","isUpdatesAvailable"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider isUpdatesAvailable should return false when remote is less then current","status":"passed","title":"should return false when remote is less then current"},{"ancestorTitles":["AutoUpdatedStaticsProvider","getRemoteBuildInfo"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider getRemoteBuildInfo should return remote build info json","status":"passed","title":"should return remote build info json"},{"ancestorTitles":["AutoUpdatedStaticsProvider","getRemoteBuildInfo"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider getRemoteBuildInfo should return empty object on fail","status":"passed","title":"should return empty object on fail"},{"ancestorTitles":["AutoUpdatedStaticsProvider","getCurrentBuildInfo"],"duration":0,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider getCurrentBuildInfo should return current build info json","status":"passed","title":"should return current build info json"},{"ancestorTitles":["AutoUpdatedStaticsProvider","getCurrentBuildInfo"],"duration":1,"failureMessages":[],"fullName":"AutoUpdatedStaticsProvider getCurrentBuildInfo should return empty object on fail","status":"passed","title":"should return empty object on fail"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501208407,"runtime":603,"slow":false,"start":1733501207804},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/custom-tutorial/providers/custom-tutorial.fs.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromMemoryStoredFile"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromMemoryStoredFile should unzip data","status":"passed","title":"should unzip data"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromMemoryStoredFile"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromMemoryStoredFile should unzip data into just generated tmp folder","status":"passed","title":"should unzip data into just generated tmp folder"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromExternalLink"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromExternalLink should unzip data from external link","status":"passed","title":"should unzip data from external link"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromExternalLink"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromExternalLink should unzip data from external link","status":"passed","title":"should unzip data from external link"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromExternalLink"],"duration":14,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromExternalLink should unzip data from external link","status":"passed","title":"should unzip data from external link"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromExternalLink"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromExternalLink should unzip data from external link","status":"passed","title":"should unzip data from external link"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromExternalLink"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromExternalLink should unzip data from external link","status":"passed","title":"should unzip data from external link"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder","unzipFromExternalLink"],"duration":15,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder unzipFromExternalLink should throw InternalServerError when incorrect external link provided","status":"passed","title":"should throw InternalServerError when incorrect external link provided"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder should unzip data to particular tmp folder","status":"passed","title":"should unzip data to particular tmp folder"},{"ancestorTitles":["CustomTutorialFsProvider","unzipToTmpFolder"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialFsProvider unzipToTmpFolder should throw InternalServerError","status":"passed","title":"should throw InternalServerError"},{"ancestorTitles":["CustomTutorialFsProvider","moveFolder"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider moveFolder should move folder","status":"passed","title":"should move folder"},{"ancestorTitles":["CustomTutorialFsProvider","moveFolder"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider moveFolder should move folder when there is no such folder in the dest path","status":"passed","title":"should move folder when there is no such folder in the dest path"},{"ancestorTitles":["CustomTutorialFsProvider","moveFolder"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider moveFolder should move folder when and remove existing one before","status":"passed","title":"should move folder when and remove existing one before"},{"ancestorTitles":["CustomTutorialFsProvider","moveFolder"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialFsProvider moveFolder should throw InternalServerError","status":"passed","title":"should throw InternalServerError"},{"ancestorTitles":["CustomTutorialFsProvider","removeFolder"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialFsProvider removeFolder should remove folder","status":"passed","title":"should remove folder"},{"ancestorTitles":["CustomTutorialFsProvider","removeFolder"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialFsProvider removeFolder should not fail in case of any error","status":"passed","title":"should not fail in case of any error"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501209464,"runtime":882,"slow":false,"start":1733501208582},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/providers/database-analysis.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseAnalysisProvider","create"],"duration":31,"failureMessages":[],"fullName":"DatabaseAnalysisProvider create should process new entity","status":"passed","title":"should process new entity"},{"ancestorTitles":["DatabaseAnalysisProvider","get"],"duration":13,"failureMessages":[],"fullName":"DatabaseAnalysisProvider get should get analysis","status":"passed","title":"should get analysis"},{"ancestorTitles":["DatabaseAnalysisProvider","get"],"duration":8,"failureMessages":[],"fullName":"DatabaseAnalysisProvider get should return null fields in case of decryption errors","status":"passed","title":"should return null fields in case of decryption errors"},{"ancestorTitles":["DatabaseAnalysisProvider","get"],"duration":5,"failureMessages":[],"fullName":"DatabaseAnalysisProvider get should throw an error","status":"passed","title":"should throw an error"},{"ancestorTitles":["DatabaseAnalysisProvider","list"],"duration":4,"failureMessages":[],"fullName":"DatabaseAnalysisProvider list should get list of analysis","status":"passed","title":"should get list of analysis"},{"ancestorTitles":["DatabaseAnalysisProvider","cleanupDatabaseHistory"],"duration":3,"failureMessages":[],"fullName":"DatabaseAnalysisProvider cleanupDatabaseHistory Should not return anything on cleanup","status":"passed","title":"Should not return anything on cleanup"},{"ancestorTitles":["DatabaseAnalysisProvider","recommendationVote"],"duration":7,"failureMessages":[],"fullName":"DatabaseAnalysisProvider recommendationVote should return updated database analysis","status":"passed","title":"should return updated database analysis"},{"ancestorTitles":["DatabaseAnalysisProvider","recommendationVote"],"duration":18,"failureMessages":[],"fullName":"DatabaseAnalysisProvider recommendationVote should throw an error","status":"passed","title":"should throw an error"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501210913,"runtime":1256,"slow":false,"start":1733501209657},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/rdi.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiService","list"],"duration":8,"failureMessages":[],"fullName":"RdiService list should return a list of Rdi instances","status":"passed","title":"should return a list of Rdi instances"},{"ancestorTitles":["RdiService","get"],"duration":3,"failureMessages":[],"fullName":"RdiService get should return an Rdi instance by id","status":"passed","title":"should return an Rdi instance by id"},{"ancestorTitles":["RdiService","get"],"duration":238,"failureMessages":[],"fullName":"RdiService get should throw an error if Rdi instance is not found","status":"passed","title":"should throw an error if Rdi instance is not found"},{"ancestorTitles":["RdiService","update"],"duration":4,"failureMessages":[],"fullName":"RdiService update should update an Rdi instance","status":"passed","title":"should update an Rdi instance"},{"ancestorTitles":["RdiService","update"],"duration":3,"failureMessages":[],"fullName":"RdiService update should create a client and delete rdis if updating connectionFields","status":"passed","title":"should create a client and delete rdis if updating connectionFields"},{"ancestorTitles":["RdiService","update"],"duration":16,"failureMessages":[],"fullName":"RdiService update should throw an error if update fails","status":"passed","title":"should throw an error if update fails"},{"ancestorTitles":["RdiService","create"],"duration":3,"failureMessages":[],"fullName":"RdiService create should create an Rdi instance","status":"passed","title":"should create an Rdi instance"},{"ancestorTitles":["RdiService","create"],"duration":4,"failureMessages":[],"fullName":"RdiService create should throw an error if create fails","status":"passed","title":"should throw an error if create fails"},{"ancestorTitles":["RdiService","delete"],"duration":2,"failureMessages":[],"fullName":"RdiService delete should delete Rdi instances","status":"passed","title":"should delete Rdi instances"},{"ancestorTitles":["RdiService","delete"],"duration":4,"failureMessages":[],"fullName":"RdiService delete should throw an error if delete fails","status":"passed","title":"should throw an error if delete fails"},{"ancestorTitles":["RdiService","connect"],"duration":2,"failureMessages":[],"fullName":"RdiService connect should connect to an Rdi instance","status":"passed","title":"should connect to an Rdi instance"},{"ancestorTitles":["RdiService","connect"],"duration":3,"failureMessages":[],"fullName":"RdiService connect should throw an error if connection fails","status":"passed","title":"should throw an error if connection fails"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501211928,"runtime":729,"slow":false,"start":1733501211199},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/autodiscovery/me.cloud-autodiscovery.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MeCloudAutodiscoveryService","getAccount"],"duration":4,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService getAccount successfully get cloud account info","status":"passed","title":"successfully get cloud account info"},{"ancestorTitles":["MeCloudAutodiscoveryService","getAccount"],"duration":7,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService getAccount should throw CloudApiUnauthorizedException exception if failed twice","status":"passed","title":"should throw CloudApiUnauthorizedException exception if failed twice"},{"ancestorTitles":["MeCloudAutodiscoveryService","getAccount"],"duration":2,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService getAccount should throw CloudApiForbiddenException exception","status":"passed","title":"should throw CloudApiForbiddenException exception"},{"ancestorTitles":["MeCloudAutodiscoveryService","discoverSubscriptions"],"duration":1,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService discoverSubscriptions successfully discover fixed and flexible cloud subscriptions","status":"passed","title":"successfully discover fixed and flexible cloud subscriptions"},{"ancestorTitles":["MeCloudAutodiscoveryService","discoverSubscriptions"],"duration":2,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService discoverSubscriptions should throw CloudApiUnauthorizedException exception if failed twice","status":"passed","title":"should throw CloudApiUnauthorizedException exception if failed twice"},{"ancestorTitles":["MeCloudAutodiscoveryService","discoverSubscriptions"],"duration":8,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService discoverSubscriptions should throw CloudApiForbiddenException exception","status":"passed","title":"should throw CloudApiForbiddenException exception"},{"ancestorTitles":["MeCloudAutodiscoveryService","discoverDatabases"],"duration":2,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService discoverDatabases should call getDatabases 2 times","status":"passed","title":"should call getDatabases 2 times"},{"ancestorTitles":["MeCloudAutodiscoveryService","discoverDatabases"],"duration":2,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService discoverDatabases should throw CloudApiUnauthorizedException exception if failed twice","status":"passed","title":"should throw CloudApiUnauthorizedException exception if failed twice"},{"ancestorTitles":["MeCloudAutodiscoveryService","discoverDatabases"],"duration":1,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService discoverDatabases should throw CloudApiBadRequestException exception","status":"passed","title":"should throw CloudApiBadRequestException exception"},{"ancestorTitles":["MeCloudAutodiscoveryService","addRedisCloudDatabases"],"duration":1,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService addRedisCloudDatabases should successfully add 1 fixed and 1 flexible databases","status":"passed","title":"should successfully add 1 fixed and 1 flexible databases"},{"ancestorTitles":["MeCloudAutodiscoveryService","addRedisCloudDatabases"],"duration":1,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService addRedisCloudDatabases should throw CloudApiUnauthorizedException exception if failed twice","status":"passed","title":"should throw CloudApiUnauthorizedException exception if failed twice"},{"ancestorTitles":["MeCloudAutodiscoveryService","addRedisCloudDatabases"],"duration":2,"failureMessages":[],"fullName":"MeCloudAutodiscoveryService addRedisCloudDatabases should throw CloudApiInternalServerErrorException exception","status":"passed","title":"should throw CloudApiInternalServerErrorException exception"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501212718,"runtime":560,"slow":false,"start":1733501212158},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/providers/rdi.client.storage.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiClientStorage","syncClients"],"duration":4,"failureMessages":[],"fullName":"RdiClientStorage syncClients should not remove any client since no idle time passed","status":"passed","title":"should not remove any client since no idle time passed"},{"ancestorTitles":["RdiClientStorage","syncClients"],"duration":1,"failureMessages":[],"fullName":"RdiClientStorage syncClients should remove client with exceeded time in idle","status":"passed","title":"should remove client with exceeded time in idle"},{"ancestorTitles":["RdiClientStorage","syncClients","get"],"duration":1,"failureMessages":[],"fullName":"RdiClientStorage syncClients get should correctly get client instance and update last used time","status":"passed","title":"should correctly get client instance and update last used time"},{"ancestorTitles":["RdiClientStorage","syncClients","get"],"duration":1,"failureMessages":[],"fullName":"RdiClientStorage syncClients get should not fail when there is no client","status":"passed","title":"should not fail when there is no client"},{"ancestorTitles":["RdiClientStorage","syncClients","getByMetadata"],"duration":1,"failureMessages":[],"fullName":"RdiClientStorage syncClients getByMetadata should correctly get client instance and update last used time","status":"passed","title":"should correctly get client instance and update last used time"},{"ancestorTitles":["RdiClientStorage","syncClients","getByMetadata"],"duration":0,"failureMessages":[],"fullName":"RdiClientStorage syncClients getByMetadata should not fail when there is no client","status":"passed","title":"should not fail when there is no client"},{"ancestorTitles":["RdiClientStorage","syncClients","getByMetadata"],"duration":12,"failureMessages":[],"fullName":"RdiClientStorage syncClients getByMetadata should throw BadRequestException when metadata is invalid","status":"passed","title":"should throw BadRequestException when metadata is invalid"},{"ancestorTitles":["RdiClientStorage","syncClients","set"],"duration":2,"failureMessages":[],"fullName":"RdiClientStorage syncClients set should add new client","status":"passed","title":"should add new client"},{"ancestorTitles":["RdiClientStorage","syncClients","set"],"duration":3,"failureMessages":[],"fullName":"RdiClientStorage syncClients set should replace new client with existing","status":"passed","title":"should replace new client with existing"},{"ancestorTitles":["RdiClientStorage","syncClients","set"],"duration":3,"failureMessages":[],"fullName":"RdiClientStorage syncClients set should throw BadRequestException when metadata is invalid","status":"passed","title":"should throw BadRequestException when metadata is invalid"},{"ancestorTitles":["RdiClientStorage","syncClients","delete"],"duration":1,"failureMessages":[],"fullName":"RdiClientStorage syncClients delete should remove only one","status":"passed","title":"should remove only one"},{"ancestorTitles":["RdiClientStorage","syncClients","delete"],"duration":0,"failureMessages":[],"fullName":"RdiClientStorage syncClients delete should not fail in case when no client found","status":"passed","title":"should not fail in case when no client found"},{"ancestorTitles":["RdiClientStorage","syncClients","findClients + deleteManyByRdiId"],"duration":9,"failureMessages":[],"fullName":"RdiClientStorage syncClients findClients + deleteManyByRdiId should correctly find clients for particular rdi instance","status":"passed","title":"should correctly find clients for particular rdi instance"},{"ancestorTitles":["RdiClientStorage","syncClients","findClients + deleteManyByRdiId"],"duration":1,"failureMessages":[],"fullName":"RdiClientStorage syncClients findClients + deleteManyByRdiId should not find any instances","status":"passed","title":"should not find any instances"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501214135,"runtime":1170,"slow":false,"start":1733501212965},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/providers/feature-flag/strategies/switchable.flag.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":4,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should not fail when no featureConfig provided","status":"passed","title":"should not fail when no featureConfig provided"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:true when no force flag defined (default behavior)","status":"passed","title":"should return flag:true when no force flag defined (default behavior)"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:true when unexpected force flag defined","status":"passed","title":"should return flag:true when unexpected force flag defined"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":2,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:false when feature is force disabled","status":"passed","title":"should return flag:false when feature is force disabled"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:false when no force flag defined (default behavior)","status":"passed","title":"should return flag:false when no force flag defined (default behavior)"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:false when unexpected force flag defined","status":"passed","title":"should return flag:false when unexpected force flag defined"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:true when feature force enabled","status":"passed","title":"should return flag:true when feature force enabled"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":1,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:false even if feature forced enabled but filter returned false","status":"passed","title":"should return flag:false even if feature forced enabled but filter returned false"},{"ancestorTitles":["SwitchableFlagStrategy","calculate"],"duration":2,"failureMessages":[],"fullName":"SwitchableFlagStrategy calculate should return flag:false even if feature force enabled but flag in config = false","status":"passed","title":"should return flag:false even if feature force enabled but flag in config = false"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501215075,"runtime":743,"slow":false,"start":1733501214332},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/runners/simple/abstract.bulk-action.simple.runner.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AbstractBulkActionSimpleRunner","prepareToStart"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner prepareToStart should get total before start","status":"passed","title":"should get total before start"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","getKeysToProcess"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner getKeysToProcess Should get keys to process and change cursor","status":"passed","title":"Should get keys to process and change cursor"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","runIteration"],"duration":4,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner runIteration Should get keys to process and change cursor","status":"passed","title":"Should get keys to process and change cursor"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","run"],"duration":101,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner run should should run if cursor 0 and status is Running and stop on status change","status":"passed","title":"should should run if cursor 0 and status is Running and stop on status change"},{"ancestorTitles":["AbstractBulkActionSimpleRunner","run"],"duration":101,"failureMessages":[],"fullName":"AbstractBulkActionSimpleRunner run should should run if cursor 0 and status is Running and stop on wen cursor -1","status":"passed","title":"should should run if cursor 0 and status is Running and stop on wen cursor -1"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501215817,"runtime":561,"slow":false,"start":1733501215256},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/providers/database.factory.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseFactory","createDatabaseModel"],"duration":5,"failureMessages":[],"fullName":"DatabaseFactory createDatabaseModel should create standalone database model","status":"passed","title":"should create standalone database model"},{"ancestorTitles":["DatabaseFactory","createDatabaseModel"],"duration":2,"failureMessages":[],"fullName":"DatabaseFactory createDatabaseModel should create sentinel database model","status":"passed","title":"should create sentinel database model"},{"ancestorTitles":["DatabaseFactory","createDatabaseModel"],"duration":1,"failureMessages":[],"fullName":"DatabaseFactory createDatabaseModel should throw an error for sentinel without sentinelMaster field provided","status":"passed","title":"should throw an error for sentinel without sentinelMaster field provided"},{"ancestorTitles":["DatabaseFactory","createDatabaseModel"],"duration":2,"failureMessages":[],"fullName":"DatabaseFactory createDatabaseModel should create cluster database model","status":"passed","title":"should create cluster database model"},{"ancestorTitles":["DatabaseFactory","createStandaloneDatabaseModel"],"duration":1,"failureMessages":[],"fullName":"DatabaseFactory createStandaloneDatabaseModel should create standalone database model without certs","status":"passed","title":"should create standalone database model without certs"},{"ancestorTitles":["DatabaseFactory","createStandaloneDatabaseModel"],"duration":1,"failureMessages":[],"fullName":"DatabaseFactory createStandaloneDatabaseModel should create standalone database model and fetch existing certs","status":"passed","title":"should create standalone database model and fetch existing certs"},{"ancestorTitles":["DatabaseFactory","createClusterDatabaseModel"],"duration":10,"failureMessages":[],"fullName":"DatabaseFactory createClusterDatabaseModel should create cluster database model","status":"passed","title":"should create cluster database model"},{"ancestorTitles":["DatabaseFactory","createClusterDatabaseModel"],"duration":16,"failureMessages":[],"fullName":"DatabaseFactory createClusterDatabaseModel should throw ACL error if no permissions","status":"passed","title":"should throw ACL error if no permissions"},{"ancestorTitles":["DatabaseFactory","createSentinelDatabaseModel"],"duration":1,"failureMessages":[],"fullName":"DatabaseFactory createSentinelDatabaseModel should create sentinel database model","status":"passed","title":"should create sentinel database model"},{"ancestorTitles":["DatabaseFactory","createSentinelDatabaseModel"],"duration":1,"failureMessages":[],"fullName":"DatabaseFactory createSentinelDatabaseModel should throw NotFound error if no such master group","status":"passed","title":"should throw NotFound error if no such master group"},{"ancestorTitles":["DatabaseFactory","createSentinelDatabaseModel"],"duration":3,"failureMessages":[],"fullName":"DatabaseFactory createSentinelDatabaseModel should throw ACL error if no permissions","status":"passed","title":"should throw ACL error if no permissions"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501217559,"runtime":1510,"slow":false,"start":1733501216049},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/pub-sub.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PubSubService","subscribe"],"duration":5,"failureMessages":[],"fullName":"PubSubService subscribe should subscribe to a single channel","status":"passed","title":"should subscribe to a single channel"},{"ancestorTitles":["PubSubService","subscribe"],"duration":1,"failureMessages":[],"fullName":"PubSubService subscribe should subscribe to a multiple channels","status":"passed","title":"should subscribe to a multiple channels"},{"ancestorTitles":["PubSubService","subscribe"],"duration":20,"failureMessages":[],"fullName":"PubSubService subscribe should handle HTTP error","status":"passed","title":"should handle HTTP error"},{"ancestorTitles":["PubSubService","subscribe"],"duration":3,"failureMessages":[],"fullName":"PubSubService subscribe should handle acl error","status":"passed","title":"should handle acl error"},{"ancestorTitles":["PubSubService","unsubscribe"],"duration":2,"failureMessages":[],"fullName":"PubSubService unsubscribe should unsubscribe from a single channel","status":"passed","title":"should unsubscribe from a single channel"},{"ancestorTitles":["PubSubService","unsubscribe"],"duration":1,"failureMessages":[],"fullName":"PubSubService unsubscribe should unsubscribe from multiple channels","status":"passed","title":"should unsubscribe from multiple channels"},{"ancestorTitles":["PubSubService","unsubscribe"],"duration":11,"failureMessages":[],"fullName":"PubSubService unsubscribe should handle HTTP error","status":"passed","title":"should handle HTTP error"},{"ancestorTitles":["PubSubService","unsubscribe"],"duration":2,"failureMessages":[],"fullName":"PubSubService unsubscribe should handle acl error","status":"passed","title":"should handle acl error"},{"ancestorTitles":["PubSubService","publish"],"duration":2,"failureMessages":[],"fullName":"PubSubService publish should publish using existing client","status":"passed","title":"should publish using existing client"},{"ancestorTitles":["PubSubService","publish"],"duration":2,"failureMessages":[],"fullName":"PubSubService publish should throw an error when client not found during publishing","status":"passed","title":"should throw an error when client not found during publishing"},{"ancestorTitles":["PubSubService","publish"],"duration":2,"failureMessages":[],"fullName":"PubSubService publish should throw forbidden error when there is no permissions to publish","status":"passed","title":"should throw forbidden error when there is no permissions to publish"},{"ancestorTitles":["PubSubService","handleDisconnect"],"duration":1,"failureMessages":[],"fullName":"PubSubService handleDisconnect should not do anything if no sessions","status":"passed","title":"should not do anything if no sessions"},{"ancestorTitles":["PubSubService","handleDisconnect"],"duration":1,"failureMessages":[],"fullName":"PubSubService handleDisconnect should call session.destroy and remove session","status":"passed","title":"should call session.destroy and remove session"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501218404,"runtime":641,"slow":false,"start":1733501217763},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/autodiscovery/autodiscovery.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AutodiscoveryService","onModuleInit"],"duration":9,"failureMessages":[],"fullName":"AutodiscoveryService onModuleInit should not discover databases REDIS_STACK builds","status":"passed","title":"should not discover databases REDIS_STACK builds"},{"ancestorTitles":["AutodiscoveryService","onModuleInit"],"duration":1,"failureMessages":[],"fullName":"AutodiscoveryService onModuleInit should not discover databases if not a first start","status":"passed","title":"should not discover databases if not a first start"},{"ancestorTitles":["AutodiscoveryService","onModuleInit"],"duration":2,"failureMessages":[],"fullName":"AutodiscoveryService onModuleInit should not discover databases if already have databases","status":"passed","title":"should not discover databases if already have databases"},{"ancestorTitles":["AutodiscoveryService","onModuleInit"],"duration":2,"failureMessages":[],"fullName":"AutodiscoveryService onModuleInit should discover databases","status":"passed","title":"should discover databases"},{"ancestorTitles":["AutodiscoveryService","onModuleInit"],"duration":15,"failureMessages":[],"fullName":"AutodiscoveryService onModuleInit should not fail in case of an error","status":"passed","title":"should not fail in case of an error"},{"ancestorTitles":["AutodiscoveryService","discoverDatabases"],"duration":1,"failureMessages":[],"fullName":"AutodiscoveryService discoverDatabases should should not call addRedisDatabase when no endpoints found","status":"passed","title":"should should not call addRedisDatabase when no endpoints found"},{"ancestorTitles":["AutodiscoveryService","discoverDatabases"],"duration":2,"failureMessages":[],"fullName":"AutodiscoveryService discoverDatabases should should call addRedisDatabase 2 times","status":"passed","title":"should should call addRedisDatabase 2 times"},{"ancestorTitles":["AutodiscoveryService","addRedisDatabase"],"duration":2,"failureMessages":[],"fullName":"AutodiscoveryService addRedisDatabase should create database if redis_mode is standalone","status":"passed","title":"should create database if redis_mode is standalone"},{"ancestorTitles":["AutodiscoveryService","addRedisDatabase"],"duration":2,"failureMessages":[],"fullName":"AutodiscoveryService addRedisDatabase should not create database if redis_mode is not standalone","status":"passed","title":"should not create database if redis_mode is not standalone"},{"ancestorTitles":["AutodiscoveryService","addRedisDatabase"],"duration":1,"failureMessages":[],"fullName":"AutodiscoveryService addRedisDatabase should not fail in case of an error","status":"passed","title":"should not fail in case of an error"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501219172,"runtime":565,"slow":false,"start":1733501218607},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/custom-tutorial/providers/custom-tutorial.manifest.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CustomTutorialManifestProvider","generateManifestFile"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialManifestProvider generateManifestFile should return empty manifest for empty folder","status":"passed","title":"should return empty manifest for empty folder"},{"ancestorTitles":["CustomTutorialManifestProvider","getManifestJson"],"duration":18,"failureMessages":[],"fullName":"CustomTutorialManifestProvider getManifestJson should return null in case of an error","status":"passed","title":"should return null in case of an error"},{"ancestorTitles":["CustomTutorialManifestProvider","generateManifestEntry"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialManifestProvider generateManifestEntry should return empty array for empty folder","status":"passed","title":"should return empty array for empty folder"},{"ancestorTitles":["CustomTutorialManifestProvider","generateManifestEntry"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialManifestProvider generateManifestEntry should return empty array for empty folder","status":"passed","title":"should return empty array for empty folder"},{"ancestorTitles":["CustomTutorialManifestProvider","getManifest"],"duration":10,"failureMessages":[],"fullName":"CustomTutorialManifestProvider getManifest should successfully get manifest","status":"passed","title":"should successfully get manifest"},{"ancestorTitles":["CustomTutorialManifestProvider","getManifest"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialManifestProvider getManifest should return null when no manifest found","status":"passed","title":"should return null when no manifest found"},{"ancestorTitles":["CustomTutorialManifestProvider","generateTutorialManifest"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialManifestProvider generateTutorialManifest should successfully generate manifest","status":"passed","title":"should successfully generate manifest"},{"ancestorTitles":["CustomTutorialManifestProvider","generateTutorialManifest"],"duration":3,"failureMessages":[],"fullName":"CustomTutorialManifestProvider generateTutorialManifest should generate manifest without children","status":"passed","title":"should generate manifest without children"},{"ancestorTitles":["CustomTutorialManifestProvider","generateTutorialManifest"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialManifestProvider generateTutorialManifest should return null in case of any error","status":"passed","title":"should return null in case of any error"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501220665,"runtime":1264,"slow":false,"start":1733501219401},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/repositories/stack.database.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StackDatabasesRepository","onApplicationBootstrap"],"duration":13,"failureMessages":[],"fullName":"StackDatabasesRepository onApplicationBootstrap should create stack database when it is not exist","status":"passed","title":"should create stack database when it is not exist"},{"ancestorTitles":["StackDatabasesRepository","onApplicationBootstrap"],"duration":14,"failureMessages":[],"fullName":"StackDatabasesRepository onApplicationBootstrap should not fail in case of creation error","status":"passed","title":"should not fail in case of creation error"},{"ancestorTitles":["StackDatabasesRepository","onApplicationBootstrap"],"duration":2,"failureMessages":[],"fullName":"StackDatabasesRepository onApplicationBootstrap should not save stack database if it is already exists","status":"passed","title":"should not save stack database if it is already exists"},{"ancestorTitles":["StackDatabasesRepository","exists"],"duration":2,"failureMessages":[],"fullName":"StackDatabasesRepository exists should return true when receive database entity","status":"passed","title":"should return true when receive database entity"},{"ancestorTitles":["StackDatabasesRepository","exists"],"duration":11,"failureMessages":[],"fullName":"StackDatabasesRepository exists should return false when no database received","status":"passed","title":"should return false when no database received"},{"ancestorTitles":["StackDatabasesRepository","get"],"duration":4,"failureMessages":[],"fullName":"StackDatabasesRepository get should return standalone database model","status":"passed","title":"should return standalone database model"},{"ancestorTitles":["StackDatabasesRepository","list"],"duration":3,"failureMessages":[],"fullName":"StackDatabasesRepository list should return list of databases with specific fields only","status":"passed","title":"should return list of databases with specific fields only"},{"ancestorTitles":["StackDatabasesRepository","create"],"duration":3,"failureMessages":[],"fullName":"StackDatabasesRepository create should create standalone database","status":"passed","title":"should create standalone database"},{"ancestorTitles":["StackDatabasesRepository","update"],"duration":5,"failureMessages":[],"fullName":"StackDatabasesRepository update should update standalone database","status":"passed","title":"should update standalone database"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":1,"numTodoTests":0,"perfStats":{"end":1733501220886,"runtime":24,"slow":false,"start":1733501220862},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/monitor.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["dummy"],"duration":null,"failureMessages":[],"fullName":"dummy dummy","status":"pending","title":"dummy"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501221520,"runtime":631,"slow":false,"start":1733501220889},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/local.features-config.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalFeaturesConfigService","onApplicationBootstrap"],"duration":5,"failureMessages":[],"fullName":"LocalFeaturesConfigService onApplicationBootstrap should sync on bootstrap","status":"passed","title":"should sync on bootstrap"},{"ancestorTitles":["LocalFeaturesConfigService","getNewConfig"],"duration":1,"failureMessages":[],"fullName":"LocalFeaturesConfigService getNewConfig should return remote config","status":"passed","title":"should return remote config"},{"ancestorTitles":["LocalFeaturesConfigService","getNewConfig"],"duration":29,"failureMessages":[],"fullName":"LocalFeaturesConfigService getNewConfig should return default config when unable to fetch remote config","status":"passed","title":"should return default config when unable to fetch remote config"},{"ancestorTitles":["LocalFeaturesConfigService","getNewConfig"],"duration":3,"failureMessages":[],"fullName":"LocalFeaturesConfigService getNewConfig should return default config when invalid remote config fetched","status":"passed","title":"should return default config when invalid remote config fetched"},{"ancestorTitles":["LocalFeaturesConfigService","getNewConfig"],"duration":2,"failureMessages":[],"fullName":"LocalFeaturesConfigService getNewConfig should return default config when remote config version less then default","status":"passed","title":"should return default config when remote config version less then default"},{"ancestorTitles":["LocalFeaturesConfigService","sync"],"duration":3,"failureMessages":[],"fullName":"LocalFeaturesConfigService sync should update to the latest remote config","status":"passed","title":"should update to the latest remote config"},{"ancestorTitles":["LocalFeaturesConfigService","sync"],"duration":4,"failureMessages":[],"fullName":"LocalFeaturesConfigService sync should not fail and not emit recalculate event in case of an error","status":"passed","title":"should not fail and not emit recalculate event in case of an error"},{"ancestorTitles":["LocalFeaturesConfigService","getControlInfo"],"duration":1,"failureMessages":[],"fullName":"LocalFeaturesConfigService getControlInfo should get controlNumber and controlGroup","status":"passed","title":"should get controlNumber and controlGroup"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501223237,"runtime":1532,"slow":false,"start":1733501221705},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/autodiscovery/utils/autodiscovery.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["getSpawnArgs"],"duration":0,"failureMessages":[],"fullName":"getSpawnArgs Should return args for Linux","status":"passed","title":"Should return args for Linux"},{"ancestorTitles":["getSpawnArgs"],"duration":1,"failureMessages":[],"fullName":"getSpawnArgs Should return args for Darwin","status":"passed","title":"Should return args for Darwin"},{"ancestorTitles":["getSpawnArgs"],"duration":0,"failureMessages":[],"fullName":"getSpawnArgs Should return args for Windows_NT","status":"passed","title":"Should return args for Windows_NT"},{"ancestorTitles":["getRunningProcesses"],"duration":1,"failureMessages":[],"fullName":"getRunningProcesses Should return netstat entries array for Linux","status":"passed","title":"Should return netstat entries array for Linux"},{"ancestorTitles":["getRunningProcesses"],"duration":0,"failureMessages":[],"fullName":"getRunningProcesses Should throw an error for unsupported platform","status":"passed","title":"Should throw an error for unsupported platform"},{"ancestorTitles":["getRunningProcesses"],"duration":0,"failureMessages":[],"fullName":"getRunningProcesses Should throw an error if child process fail","status":"passed","title":"Should throw an error if child process fail"},{"ancestorTitles":["getTCPEndpoints"],"duration":1,"failureMessages":[],"fullName":"getTCPEndpoints Should return endpoints to test win output","status":"passed","title":"Should return endpoints to test win output"},{"ancestorTitles":["getTCPEndpoints"],"duration":0,"failureMessages":[],"fullName":"getTCPEndpoints Should return endpoints to test linux output","status":"passed","title":"Should return endpoints to test linux output"},{"ancestorTitles":["getTCPEndpoints"],"duration":1,"failureMessages":[],"fullName":"getTCPEndpoints Should return endpoints to test mac output","status":"passed","title":"Should return endpoints to test mac output"},{"ancestorTitles":["testEndpoint"],"duration":0,"failureMessages":[],"fullName":"testEndpoint Should return endpoint if +PONG received","status":"passed","title":"Should return endpoint if +PONG received"},{"ancestorTitles":["testEndpoint"],"duration":0,"failureMessages":[],"fullName":"testEndpoint Should return null if no +PONG received","status":"passed","title":"Should return null if no +PONG received"},{"ancestorTitles":["testEndpoint"],"duration":1,"failureMessages":[],"fullName":"testEndpoint Should return null if error happened","status":"passed","title":"Should return null if error happened"},{"ancestorTitles":["testEndpoint"],"duration":1000,"failureMessages":[],"fullName":"testEndpoint Should return null if no response in 1s","status":"passed","title":"Should return null if no response in 1s"},{"ancestorTitles":["getAvailableEndpoints"],"duration":0,"failureMessages":[],"fullName":"getAvailableEndpoints Should return only available endpoints","status":"passed","title":"Should return only available endpoints"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501224144,"runtime":719,"slow":false,"start":1733501223425},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/local.feature.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FeatureService","getByName"],"duration":5,"failureMessages":[],"fullName":"FeatureService getByName should return feature when exists","status":"passed","title":"should return feature when exists"},{"ancestorTitles":["FeatureService","getByName"],"duration":2,"failureMessages":[],"fullName":"FeatureService getByName should return null when feature doesn't exists","status":"passed","title":"should return null when feature doesn't exists"},{"ancestorTitles":["FeatureService","getByName"],"duration":1,"failureMessages":[],"fullName":"FeatureService getByName should return null in case of an error","status":"passed","title":"should return null in case of an error"},{"ancestorTitles":["FeatureService","isFeatureEnabled"],"duration":2,"failureMessages":[],"fullName":"FeatureService isFeatureEnabled should return true when in db: true","status":"passed","title":"should return true when in db: true"},{"ancestorTitles":["FeatureService","isFeatureEnabled"],"duration":1,"failureMessages":[],"fullName":"FeatureService isFeatureEnabled should return false when in db: false","status":"passed","title":"should return false when in db: false"},{"ancestorTitles":["FeatureService","isFeatureEnabled"],"duration":1,"failureMessages":[],"fullName":"FeatureService isFeatureEnabled should return false in case of an error","status":"passed","title":"should return false in case of an error"},{"ancestorTitles":["FeatureService","list"],"duration":2,"failureMessages":[],"fullName":"FeatureService list should return list of features flags","status":"passed","title":"should return list of features flags"},{"ancestorTitles":["FeatureService","recalculateFeatureFlags"],"duration":3,"failureMessages":[],"fullName":"FeatureService recalculateFeatureFlags should recalculate flags (1 update an 1 delete)","status":"passed","title":"should recalculate flags (1 update an 1 delete)"},{"ancestorTitles":["FeatureService","recalculateFeatureFlags"],"duration":18,"failureMessages":[],"fullName":"FeatureService recalculateFeatureFlags should not fail in case of an error","status":"passed","title":"should not fail in case of an error"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501224905,"runtime":568,"slow":false,"start":1733501224337},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/database-recommendation.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseRecommendationService","create"],"duration":5,"failureMessages":[],"fullName":"DatabaseRecommendationService create should create a new recommendation","status":"passed","title":"should create a new recommendation"},{"ancestorTitles":["DatabaseRecommendationService","list"],"duration":1,"failureMessages":[],"fullName":"DatabaseRecommendationService list should return a list of recommendations for client metadata db","status":"passed","title":"should return a list of recommendations for client metadata db"},{"ancestorTitles":["DatabaseRecommendationService","list"],"duration":2,"failureMessages":[],"fullName":"DatabaseRecommendationService list should return a list of recommendations for database fetched by session metadata","status":"passed","title":"should return a list of recommendations for database fetched by session metadata"},{"ancestorTitles":["DatabaseRecommendationService","list"],"duration":1,"failureMessages":[],"fullName":"DatabaseRecommendationService list should return a list of recommendations - default db to 0 if not passed in or retrieved from service","status":"passed","title":"should return a list of recommendations - default db to 0 if not passed in or retrieved from service"},{"ancestorTitles":["DatabaseRecommendationService","read"],"duration":1,"failureMessages":[],"fullName":"DatabaseRecommendationService read should mark recommendations as read","status":"passed","title":"should mark recommendations as read"},{"ancestorTitles":["DatabaseRecommendationService","update"],"duration":1,"failureMessages":[],"fullName":"DatabaseRecommendationService update should update a recommendation","status":"passed","title":"should update a recommendation"},{"ancestorTitles":["DatabaseRecommendationService","sync"],"duration":2,"failureMessages":[],"fullName":"DatabaseRecommendationService sync should sync recommendations","status":"passed","title":"should sync recommendations"},{"ancestorTitles":["DatabaseRecommendationService","delete"],"duration":1,"failureMessages":[],"fullName":"DatabaseRecommendationService delete should delete a recommendation","status":"passed","title":"should delete a recommendation"},{"ancestorTitles":["DatabaseRecommendationService","bulk delete"],"duration":9,"failureMessages":[],"fullName":"DatabaseRecommendationService bulk delete should delete multiple recommendations, all succeed","status":"passed","title":"should delete multiple recommendations, all succeed"},{"ancestorTitles":["DatabaseRecommendationService","bulk delete"],"duration":2,"failureMessages":[],"fullName":"DatabaseRecommendationService bulk delete should delete multiple recommendations, some fail","status":"passed","title":"should delete multiple recommendations, some fail"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501226139,"runtime":1032,"slow":false,"start":1733501225107},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/encryption/encryption.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EncryptionService","getAvailableEncryptionStrategies"],"duration":7,"failureMessages":[],"fullName":"EncryptionService getAvailableEncryptionStrategies Should return list 2 strategies available (KEYTAR and PLAIN)","status":"passed","title":"Should return list 2 strategies available (KEYTAR and PLAIN)"},{"ancestorTitles":["EncryptionService","getAvailableEncryptionStrategies"],"duration":3,"failureMessages":[],"fullName":"EncryptionService getAvailableEncryptionStrategies Should return list 2 strategies available (KEY and PLAIN)","status":"passed","title":"Should return list 2 strategies available (KEY and PLAIN)"},{"ancestorTitles":["EncryptionService","getAvailableEncryptionStrategies"],"duration":3,"failureMessages":[],"fullName":"EncryptionService getAvailableEncryptionStrategies Should return list 2 strategies available (KEY and PLAIN) even when KEYTAR available","status":"passed","title":"Should return list 2 strategies available (KEY and PLAIN) even when KEYTAR available"},{"ancestorTitles":["EncryptionService","getAvailableEncryptionStrategies"],"duration":3,"failureMessages":[],"fullName":"EncryptionService getAvailableEncryptionStrategies Should return list with one strategy available","status":"passed","title":"Should return list with one strategy available"},{"ancestorTitles":["EncryptionService","getEncryptionStrategy"],"duration":3,"failureMessages":[],"fullName":"EncryptionService getEncryptionStrategy Should return KEYTAR strategy based on app agreements","status":"passed","title":"Should return KEYTAR strategy based on app agreements"},{"ancestorTitles":["EncryptionService","getEncryptionStrategy"],"duration":3,"failureMessages":[],"fullName":"EncryptionService getEncryptionStrategy Should return KEY strategy based on app agreements even when KEYTAR available","status":"passed","title":"Should return KEY strategy based on app agreements even when KEYTAR available"},{"ancestorTitles":["EncryptionService","getEncryptionStrategy"],"duration":2,"failureMessages":[],"fullName":"EncryptionService getEncryptionStrategy Should return PLAIN strategy based on app agreements even when KEY available","status":"passed","title":"Should return PLAIN strategy based on app agreements even when KEY available"},{"ancestorTitles":["EncryptionService","getEncryptionStrategy"],"duration":14,"failureMessages":[],"fullName":"EncryptionService getEncryptionStrategy Should throw an error if encryption strategy was not set by user","status":"passed","title":"Should throw an error if encryption strategy was not set by user"},{"ancestorTitles":["EncryptionService","encrypt"],"duration":3,"failureMessages":[],"fullName":"EncryptionService encrypt Should encrypt data and return proper response (KEYTAR)","status":"passed","title":"Should encrypt data and return proper response (KEYTAR)"},{"ancestorTitles":["EncryptionService","encrypt"],"duration":3,"failureMessages":[],"fullName":"EncryptionService encrypt Should encrypt data and return proper response (KEY)","status":"passed","title":"Should encrypt data and return proper response (KEY)"},{"ancestorTitles":["EncryptionService","decrypt"],"duration":3,"failureMessages":[],"fullName":"EncryptionService decrypt Should return decrypted string (KEYTAR)","status":"passed","title":"Should return decrypted string (KEYTAR)"},{"ancestorTitles":["EncryptionService","decrypt"],"duration":3,"failureMessages":[],"fullName":"EncryptionService decrypt Should return decrypted string (KEY)","status":"passed","title":"Should return decrypted string (KEY)"},{"ancestorTitles":["EncryptionService","decrypt"],"duration":3,"failureMessages":[],"fullName":"EncryptionService decrypt Should return null when no data passed","status":"passed","title":"Should return null when no data passed"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501227283,"runtime":628,"slow":false,"start":1733501226655},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/capi-key/repository/local.cloud-capi-key.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalCloudCapiKeyRepository","get"],"duration":15,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository get should return decrypted and transformed capi key","status":"passed","title":"should return decrypted and transformed capi key"},{"ancestorTitles":["LocalCloudCapiKeyRepository","get"],"duration":4,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository get should return null fields in case of decryption errors","status":"passed","title":"should return null fields in case of decryption errors"},{"ancestorTitles":["LocalCloudCapiKeyRepository","get"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository get should return null","status":"passed","title":"should return null"},{"ancestorTitles":["LocalCloudCapiKeyRepository","update"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository update should return features","status":"passed","title":"should return features"},{"ancestorTitles":["LocalCloudCapiKeyRepository","getByUserAccount"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository getByUserAccount should return decrypted and transformed capi key","status":"passed","title":"should return decrypted and transformed capi key"},{"ancestorTitles":["LocalCloudCapiKeyRepository","getByUserAccount"],"duration":1,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository getByUserAccount should return null","status":"passed","title":"should return null"},{"ancestorTitles":["LocalCloudCapiKeyRepository","create"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository create should delete and do not return anything","status":"passed","title":"should delete and do not return anything"},{"ancestorTitles":["LocalCloudCapiKeyRepository","create"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository create should throw CloudApiBadRequestException ON SQL constraint error","status":"passed","title":"should throw CloudApiBadRequestException ON SQL constraint error"},{"ancestorTitles":["LocalCloudCapiKeyRepository","create"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository create should throw error","status":"passed","title":"should throw error"},{"ancestorTitles":["LocalCloudCapiKeyRepository","list"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository list should delete and do not return anything","status":"passed","title":"should delete and do not return anything"},{"ancestorTitles":["LocalCloudCapiKeyRepository","delete"],"duration":1,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository delete should delete and do not return anything","status":"passed","title":"should delete and do not return anything"},{"ancestorTitles":["LocalCloudCapiKeyRepository","deleteAll"],"duration":2,"failureMessages":[],"fullName":"LocalCloudCapiKeyRepository deleteAll should delete and do not return anything","status":"passed","title":"should delete and do not return anything"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501228155,"runtime":684,"slow":false,"start":1733501227471},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/plugins.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PluginsService","sendCommand"],"duration":5,"failureMessages":[],"fullName":"PluginsService sendCommand should successfully execute command","status":"passed","title":"should successfully execute command"},{"ancestorTitles":["PluginsService","sendCommand"],"duration":1,"failureMessages":[],"fullName":"PluginsService sendCommand should return status failed when unsupported command called","status":"passed","title":"should return status failed when unsupported command called"},{"ancestorTitles":["PluginsService","sendCommand"],"duration":1,"failureMessages":[],"fullName":"PluginsService sendCommand should throw an error when command execution failed","status":"passed","title":"should throw an error when command execution failed"},{"ancestorTitles":["PluginsService","getWhitelistCommands"],"duration":1,"failureMessages":[],"fullName":"PluginsService getWhitelistCommands should successfully return whitelisted commands","status":"passed","title":"should successfully return whitelisted commands"},{"ancestorTitles":["PluginsService","saveState"],"duration":1,"failureMessages":[],"fullName":"PluginsService saveState should successfully save state","status":"passed","title":"should successfully save state"},{"ancestorTitles":["PluginsService","saveState"],"duration":43,"failureMessages":[],"fullName":"PluginsService saveState should throw an error when state too large","status":"passed","title":"should throw an error when state too large"},{"ancestorTitles":["PluginsService","getState"],"duration":1,"failureMessages":[],"fullName":"PluginsService getState should successfully get state","status":"passed","title":"should successfully get state"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501229740,"runtime":1333,"slow":false,"start":1733501228407},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/certificate/repositories/local.client-certificate.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalClientCertificateRepository","get"],"duration":9,"failureMessages":[],"fullName":"LocalClientCertificateRepository get should return client certificate model","status":"passed","title":"should return client certificate model"},{"ancestorTitles":["LocalClientCertificateRepository","list"],"duration":13,"failureMessages":[],"fullName":"LocalClientCertificateRepository list should return client certificates list","status":"passed","title":"should return client certificates list"},{"ancestorTitles":["LocalClientCertificateRepository","create"],"duration":2,"failureMessages":[],"fullName":"LocalClientCertificateRepository create should create client certificate","status":"passed","title":"should create client certificate"},{"ancestorTitles":["LocalClientCertificateRepository","create"],"duration":11,"failureMessages":[],"fullName":"LocalClientCertificateRepository create should throw an error when client certificate with such name already exists","status":"passed","title":"should throw an error when client certificate with such name already exists"},{"ancestorTitles":["LocalClientCertificateRepository","delete"],"duration":3,"failureMessages":[],"fullName":"LocalClientCertificateRepository delete should delete client certificate and return affected databases","status":"passed","title":"should delete client certificate and return affected databases"},{"ancestorTitles":["LocalClientCertificateRepository","delete"],"duration":3,"failureMessages":[],"fullName":"LocalClientCertificateRepository delete should throw NotFoundException when trying to delete non-existing client certificate","status":"passed","title":"should throw NotFoundException when trying to delete non-existing client certificate"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501230503,"runtime":570,"slow":false,"start":1733501229933},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/user/providers/cloud-user.api.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudUserApiProvider","getCsrfToken"],"duration":4,"failureMessages":[],"fullName":"CloudUserApiProvider getCsrfToken successfully get capi access key","status":"passed","title":"successfully get capi access key"},{"ancestorTitles":["CloudUserApiProvider","getCsrfToken"],"duration":8,"failureMessages":[],"fullName":"CloudUserApiProvider getCsrfToken throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudUserApiProvider","getApiSessionId"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider getApiSessionId successfully get api session id (login to api)","status":"passed","title":"successfully get api session id (login to api)"},{"ancestorTitles":["CloudUserApiProvider","getApiSessionId"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiProvider getApiSessionId successfully get api session id (login to api) with utm parameters","status":"passed","title":"successfully get api session id (login to api) with utm parameters"},{"ancestorTitles":["CloudUserApiProvider","getApiSessionId"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider getApiSessionId successfully get api session id (login to api) with defined only utm parameters","status":"passed","title":"successfully get api session id (login to api) with defined only utm parameters"},{"ancestorTitles":["CloudUserApiProvider","getApiSessionId"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider getApiSessionId throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudUserApiProvider","getCurrentUser"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider getCurrentUser successfully get current user","status":"passed","title":"successfully get current user"},{"ancestorTitles":["CloudUserApiProvider","getCurrentUser"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiProvider getCurrentUser throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudUserApiProvider","getAccounts"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider getAccounts successfully get user accounts","status":"passed","title":"successfully get user accounts"},{"ancestorTitles":["CloudUserApiProvider","getAccounts"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider getAccounts throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudUserApiProvider","setCurrentAccount"],"duration":1,"failureMessages":[],"fullName":"CloudUserApiProvider setCurrentAccount successfully set current accounts","status":"passed","title":"successfully set current accounts"},{"ancestorTitles":["CloudUserApiProvider","setCurrentAccount"],"duration":2,"failureMessages":[],"fullName":"CloudUserApiProvider setCurrentAccount throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501231044,"runtime":353,"slow":false,"start":1733501230691},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/model/redis-client-subscriber.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisClient","getClient"],"duration":2,"failureMessages":[],"fullName":"RedisClient getClient should connect and return client by default","status":"passed","title":"should connect and return client by default"},{"ancestorTitles":["RedisClient","getClient"],"duration":1,"failureMessages":[],"fullName":"RedisClient getClient should wait until first attempt of connection finish with success","status":"passed","title":"should wait until first attempt of connection finish with success"},{"ancestorTitles":["RedisClient","getClient"],"duration":1,"failureMessages":[],"fullName":"RedisClient getClient should wait until first attempt of connection finish with error","status":"passed","title":"should wait until first attempt of connection finish with error"},{"ancestorTitles":["RedisClient","getClient"],"duration":0,"failureMessages":[],"fullName":"RedisClient getClient should return existing connection when status connected","status":"passed","title":"should return existing connection when status connected"},{"ancestorTitles":["RedisClient","getClient"],"duration":1,"failureMessages":[],"fullName":"RedisClient getClient should return create new connection when status end or error","status":"passed","title":"should return create new connection when status end or error"},{"ancestorTitles":["RedisClient","connect"],"duration":0,"failureMessages":[],"fullName":"RedisClient connect should connect and emit connected event","status":"passed","title":"should connect and emit connected event"},{"ancestorTitles":["RedisClient","connect"],"duration":1,"failureMessages":[],"fullName":"RedisClient connect should emit message event (message source)","status":"passed","title":"should emit message event (message source)"},{"ancestorTitles":["RedisClient","connect"],"duration":0,"failureMessages":[],"fullName":"RedisClient connect should emit message event (pmessage source)","status":"passed","title":"should emit message event (pmessage source)"},{"ancestorTitles":["RedisClient","connect"],"duration":1,"failureMessages":[],"fullName":"RedisClient connect should emit end event","status":"passed","title":"should emit end event"},{"ancestorTitles":["RedisClient","destroy"],"duration":0,"failureMessages":[],"fullName":"RedisClient destroy should remove all listeners, disconnect, set client to null and emit end event","status":"passed","title":"should remove all listeners, disconnect, set client to null and emit end event"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501232151,"runtime":1051,"slow":false,"start":1733501231100},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/database-connection.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseConnectionService","connect"],"duration":9,"failureMessages":[],"fullName":"DatabaseConnectionService connect should connect to database","status":"passed","title":"should connect to database"},{"ancestorTitles":["DatabaseConnectionService","connect"],"duration":5,"failureMessages":[],"fullName":"DatabaseConnectionService connect should call recommendationService","status":"passed","title":"should call recommendationService"},{"ancestorTitles":["DatabaseConnectionService","connect"],"duration":5,"failureMessages":[],"fullName":"DatabaseConnectionService connect should call check try rdi recommendation","status":"passed","title":"should call check try rdi recommendation"},{"ancestorTitles":["DatabaseConnectionService","connect"],"duration":4,"failureMessages":[],"fullName":"DatabaseConnectionService connect should call databaseInfoProvider","status":"passed","title":"should call databaseInfoProvider"},{"ancestorTitles":["DatabaseConnectionService","connect"],"duration":4,"failureMessages":[],"fullName":"DatabaseConnectionService connect should call getClientListInfo","status":"passed","title":"should call getClientListInfo"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501233353,"runtime":602,"slow":false,"start":1733501232751},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/browser-history/repositories/local.browser-history.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalBrowserHistoryRepository","create"],"duration":21,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository create should process new entity","status":"passed","title":"should process new entity"},{"ancestorTitles":["LocalBrowserHistoryRepository","get"],"duration":2,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository get should get browser history item","status":"passed","title":"should get browser history item"},{"ancestorTitles":["LocalBrowserHistoryRepository","get"],"duration":2,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository get should return null fields in case of decryption errors","status":"passed","title":"should return null fields in case of decryption errors"},{"ancestorTitles":["LocalBrowserHistoryRepository","get"],"duration":3,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository get should throw an error","status":"passed","title":"should throw an error"},{"ancestorTitles":["LocalBrowserHistoryRepository","list"],"duration":2,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository list should get list of browser history","status":"passed","title":"should get list of browser history"},{"ancestorTitles":["LocalBrowserHistoryRepository","delete"],"duration":2,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository delete Should not return anything on cleanup","status":"passed","title":"Should not return anything on cleanup"},{"ancestorTitles":["LocalBrowserHistoryRepository","delete"],"duration":2,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository delete Should throw InternalServerErrorException when error during delete","status":"passed","title":"Should throw InternalServerErrorException when error during delete"},{"ancestorTitles":["LocalBrowserHistoryRepository","cleanupDatabaseHistory"],"duration":2,"failureMessages":[],"fullName":"LocalBrowserHistoryRepository cleanupDatabaseHistory Should not return anything on cleanup","status":"passed","title":"Should not return anything on cleanup"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501234105,"runtime":566,"slow":false,"start":1733501233539},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/subscription/providers/cloud-subscription.capi.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionsByType"],"duration":3,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionsByType successfully get fixed cloud subscriptions","status":"passed","title":"successfully get fixed cloud subscriptions"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionsByType"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionsByType successfully get flexible cloud subscriptions","status":"passed","title":"successfully get flexible cloud subscriptions"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionsByType"],"duration":7,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionsByType throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionByType"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionByType successfully get fixed cloud subscription","status":"passed","title":"successfully get fixed cloud subscription"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionByType"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionByType successfully get flexible cloud subscription","status":"passed","title":"successfully get flexible cloud subscription"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionByType"],"duration":9,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionByType throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionsPlansByType"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionsPlansByType successfully get fixed plans","status":"passed","title":"successfully get fixed plans"},{"ancestorTitles":["CloudSubscriptionApiProvider","getSubscriptionsPlansByType"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getSubscriptionsPlansByType throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionApiProvider","createFreeSubscription"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider createFreeSubscription successfully create task for free subscription creation","status":"passed","title":"successfully create task for free subscription creation"},{"ancestorTitles":["CloudSubscriptionApiProvider","createFreeSubscription"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider createFreeSubscription throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501235710,"runtime":1376,"slow":false,"start":1733501234334},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/certificate/repositories/local.ca-certificate.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalCaCertificateRepository","get"],"duration":9,"failureMessages":[],"fullName":"LocalCaCertificateRepository get should return ca certificate model","status":"passed","title":"should return ca certificate model"},{"ancestorTitles":["LocalCaCertificateRepository","list"],"duration":2,"failureMessages":[],"fullName":"LocalCaCertificateRepository list should return ca certificates list","status":"passed","title":"should return ca certificates list"},{"ancestorTitles":["LocalCaCertificateRepository","create"],"duration":2,"failureMessages":[],"fullName":"LocalCaCertificateRepository create should create ca certificate","status":"passed","title":"should create ca certificate"},{"ancestorTitles":["LocalCaCertificateRepository","create"],"duration":12,"failureMessages":[],"fullName":"LocalCaCertificateRepository create should throw an error when ca certificate with such name already exists","status":"passed","title":"should throw an error when ca certificate with such name already exists"},{"ancestorTitles":["LocalCaCertificateRepository","delete"],"duration":3,"failureMessages":[],"fullName":"LocalCaCertificateRepository delete should delete ca certificate and return affected databases","status":"passed","title":"should delete ca certificate and return affected databases"},{"ancestorTitles":["LocalCaCertificateRepository","delete"],"duration":3,"failureMessages":[],"fullName":"LocalCaCertificateRepository delete should throw NotFoundException when trying to delete non-existing ca certificate","status":"passed","title":"should throw NotFoundException when trying to delete non-existing ca certificate"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501236690,"runtime":772,"slow":false,"start":1733501235918},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/subscription/cloud-subscription.api.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudSubscriptionApiService","getSubscriptionPlans"],"duration":10,"failureMessages":[],"fullName":"CloudSubscriptionApiService getSubscriptionPlans successfully get plans and cloud regions","status":"passed","title":"successfully get plans and cloud regions"},{"ancestorTitles":["CloudSubscriptionApiService","getSubscriptionPlans"],"duration":2,"failureMessages":[],"fullName":"CloudSubscriptionApiService getSubscriptionPlans successfully get plans and cloud regions from 2nd attempt","status":"passed","title":"successfully get plans and cloud regions from 2nd attempt"},{"ancestorTitles":["CloudSubscriptionApiService","getSubscriptionPlans"],"duration":18,"failureMessages":[],"fullName":"CloudSubscriptionApiService getSubscriptionPlans throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionApiService","getSubscriptionPlans","filter"],"duration":4,"failureMessages":[],"fullName":"CloudSubscriptionApiService getSubscriptionPlans filter get empty list due to filter","status":"passed","title":"get empty list due to filter"},{"ancestorTitles":["CloudSubscriptionApiService","getSubscriptionPlans","filter"],"duration":3,"failureMessages":[],"fullName":"CloudSubscriptionApiService getSubscriptionPlans filter filter only \"no ha\" and \"cache\" plans","status":"passed","title":"filter only \"no ha\" and \"cache\" plans"},{"ancestorTitles":["CloudSubscriptionApiService","getCloudRegions"],"duration":3,"failureMessages":[],"fullName":"CloudSubscriptionApiService getCloudRegions successfully get cloud regions","status":"passed","title":"successfully get cloud regions"},{"ancestorTitles":["CloudSubscriptionApiService","getCloudRegions"],"duration":2,"failureMessages":[],"fullName":"CloudSubscriptionApiService getCloudRegions throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501237074,"runtime":174,"slow":false,"start":1733501236900},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/utils/pipeline.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["convertApiDataToRdiJobs"],"duration":1,"failureMessages":[],"fullName":"convertApiDataToRdiJobs should return an empty object when no jobs are provided","status":"passed","title":"should return an empty object when no jobs are provided"},{"ancestorTitles":["convertApiDataToRdiJobs"],"duration":0,"failureMessages":[],"fullName":"convertApiDataToRdiJobs should return an empty object when an empty array is provided","status":"passed","title":"should return an empty object when an empty array is provided"},{"ancestorTitles":["convertApiDataToRdiJobs"],"duration":1,"failureMessages":[],"fullName":"convertApiDataToRdiJobs should return a map of jobs with their names as keys","status":"passed","title":"should return a map of jobs with their names as keys"},{"ancestorTitles":["convertApiDataToRdiJobs"],"duration":0,"failureMessages":[],"fullName":"convertApiDataToRdiJobs should remove the name property from each job","status":"passed","title":"should remove the name property from each job"},{"ancestorTitles":["convertApiDataToRdiJobs"],"duration":0,"failureMessages":[],"fullName":"convertApiDataToRdiJobs should ignore jobs without a name property","status":"passed","title":"should ignore jobs without a name property"},{"ancestorTitles":["convertApiDataToRdiPipeline"],"duration":1,"failureMessages":[],"fullName":"convertApiDataToRdiPipeline should return an RdiPipeline object with jobs converted from API data","status":"passed","title":"should return an RdiPipeline object with jobs converted from API data"},{"ancestorTitles":["convertApiDataToRdiPipeline"],"duration":1,"failureMessages":[],"fullName":"convertApiDataToRdiPipeline should return an RdiPipeline object with empty jobs array if no jobs in API data","status":"passed","title":"should return an RdiPipeline object with empty jobs array if no jobs in API data"},{"ancestorTitles":["convertApiDataToRdiPipeline"],"duration":1,"failureMessages":[],"fullName":"convertApiDataToRdiPipeline should return an RdiPipeline object with additional data from API data","status":"passed","title":"should return an RdiPipeline object with additional data from API data"},{"ancestorTitles":["convertRdiJobsToApiPayload"],"duration":0,"failureMessages":[],"fullName":"convertRdiJobsToApiPayload should convert an object of jobs to an array of payloads","status":"passed","title":"should convert an object of jobs to an array of payloads"},{"ancestorTitles":["convertRdiJobsToApiPayload"],"duration":0,"failureMessages":[],"fullName":"convertRdiJobsToApiPayload should return an empty array if no jobs are provided","status":"passed","title":"should return an empty array if no jobs are provided"},{"ancestorTitles":["convertRdiPipelineToApiPayload"],"duration":1,"failureMessages":[],"fullName":"convertRdiPipelineToApiPayload should convert RdiPipeline to API payload","status":"passed","title":"should convert RdiPipeline to API payload"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501237675,"runtime":593,"slow":false,"start":1733501237082},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/providers/rdi.client.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiClientProvider","getOrCreate"],"duration":5,"failureMessages":[],"fullName":"RdiClientProvider getOrCreate should return existing client if found","status":"passed","title":"should return existing client if found"},{"ancestorTitles":["RdiClientProvider","getOrCreate"],"duration":2,"failureMessages":[],"fullName":"RdiClientProvider getOrCreate should create and return new client if not found","status":"passed","title":"should create and return new client if not found"},{"ancestorTitles":["RdiClientProvider","create"],"duration":27,"failureMessages":[],"fullName":"RdiClientProvider create should throw NotFoundException if RDI not found","status":"passed","title":"should throw NotFoundException if RDI not found"},{"ancestorTitles":["RdiClientProvider","create"],"duration":2,"failureMessages":[],"fullName":"RdiClientProvider create should create and return new client if RDI found","status":"passed","title":"should create and return new client if RDI found"},{"ancestorTitles":["RdiClientProvider","delete"],"duration":2,"failureMessages":[],"fullName":"RdiClientProvider delete should delete client by metadata id","status":"passed","title":"should delete client by metadata id"},{"ancestorTitles":["RdiClientProvider","deleteById"],"duration":1,"failureMessages":[],"fullName":"RdiClientProvider deleteById should delete client by id","status":"passed","title":"should delete client by id"},{"ancestorTitles":["RdiClientProvider","deleteManyByRdiId"],"duration":1,"failureMessages":[],"fullName":"RdiClientProvider deleteManyByRdiId should delete clients by RDI id","status":"passed","title":"should delete clients by RDI id"},{"ancestorTitles":["RdiClientProvider","updateLastConnection"],"duration":1,"failureMessages":[],"fullName":"RdiClientProvider updateLastConnection should update rdi lastConnection","status":"passed","title":"should update rdi lastConnection"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501239424,"runtime":1512,"slow":false,"start":1733501237912},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/providers/bulk-actions.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkActionsProvider","create"],"duration":5,"failureMessages":[],"fullName":"BulkActionsProvider create should create only once with the same id","status":"passed","title":"should create only once with the same id"},{"ancestorTitles":["BulkActionsProvider","create"],"duration":1,"failureMessages":[],"fullName":"BulkActionsProvider create should fail when unsupported runner class","status":"passed","title":"should fail when unsupported runner class"},{"ancestorTitles":["BulkActionsProvider","get"],"duration":2,"failureMessages":[],"fullName":"BulkActionsProvider get should get by id","status":"passed","title":"should get by id"},{"ancestorTitles":["BulkActionsProvider","get"],"duration":1,"failureMessages":[],"fullName":"BulkActionsProvider get should throw not found error","status":"passed","title":"should throw not found error"},{"ancestorTitles":["BulkActionsProvider","abort"],"duration":2,"failureMessages":[],"fullName":"BulkActionsProvider abort should abort by id and remove","status":"passed","title":"should abort by id and remove"},{"ancestorTitles":["BulkActionsProvider","abort"],"duration":1,"failureMessages":[],"fullName":"BulkActionsProvider abort should throw not found error","status":"passed","title":"should throw not found error"},{"ancestorTitles":["BulkActionsProvider","abortUsersBulkActions"],"duration":3,"failureMessages":[],"fullName":"BulkActionsProvider abortUsersBulkActions should abort all users bulk actions","status":"passed","title":"should abort all users bulk actions"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501240197,"runtime":561,"slow":false,"start":1733501239636},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/database/cloud-database.capi.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudDatabaseCapiProvider","getDatabase"],"duration":3,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider getDatabase successfully get flexible cloud database","status":"passed","title":"successfully get flexible cloud database"},{"ancestorTitles":["CloudDatabaseCapiProvider","getDatabase"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider getDatabase successfully get fixed cloud database","status":"passed","title":"successfully get fixed cloud database"},{"ancestorTitles":["CloudDatabaseCapiProvider","getDatabase"],"duration":6,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider getDatabase throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"},{"ancestorTitles":["CloudDatabaseCapiProvider","getDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider getDatabases successfully get flexible cloud databases","status":"passed","title":"successfully get flexible cloud databases"},{"ancestorTitles":["CloudDatabaseCapiProvider","getDatabases"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider getDatabases successfully get fixed cloud databases","status":"passed","title":"successfully get fixed cloud databases"},{"ancestorTitles":["CloudDatabaseCapiProvider","getDatabases"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider getDatabases throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"},{"ancestorTitles":["CloudDatabaseCapiProvider","createFreeDatabase"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider createFreeDatabase successfully create fixed cloud database","status":"passed","title":"successfully create fixed cloud database"},{"ancestorTitles":["CloudDatabaseCapiProvider","createFreeDatabase"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseCapiProvider createFreeDatabase throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501240924,"runtime":544,"slow":false,"start":1733501240380},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/settings/settings.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SettingsAnalytics","sendAnalyticsAgreementChange"],"duration":4,"failureMessages":[],"fullName":"SettingsAnalytics sendAnalyticsAgreementChange should emit ANALYTICS_PERMISSION with state enabled on first app launch","status":"passed","title":"should emit ANALYTICS_PERMISSION with state enabled on first app launch"},{"ancestorTitles":["SettingsAnalytics","sendAnalyticsAgreementChange"],"duration":1,"failureMessages":[],"fullName":"SettingsAnalytics sendAnalyticsAgreementChange should emit ANALYTICS_PERMISSION with state disabled on first app launch","status":"passed","title":"should emit ANALYTICS_PERMISSION with state disabled on first app launch"},{"ancestorTitles":["SettingsAnalytics","sendAnalyticsAgreementChange"],"duration":1,"failureMessages":[],"fullName":"SettingsAnalytics sendAnalyticsAgreementChange should not emit ANALYTICS_PERMISSION if agreement did not changed","status":"passed","title":"should not emit ANALYTICS_PERMISSION if agreement did not changed"},{"ancestorTitles":["SettingsAnalytics","sendAnalyticsAgreementChange"],"duration":1,"failureMessages":[],"fullName":"SettingsAnalytics sendAnalyticsAgreementChange should emit [ANALYTICS_PERMISSION] if agreement changed","status":"passed","title":"should emit [ANALYTICS_PERMISSION] if agreement changed"},{"ancestorTitles":["SettingsAnalytics","sendSettingsUpdatedEvent"],"duration":1,"failureMessages":[],"fullName":"SettingsAnalytics sendSettingsUpdatedEvent should emit [SETTINGS_KEYS_TO_SCAN_CHANGED] event","status":"passed","title":"should emit [SETTINGS_KEYS_TO_SCAN_CHANGED] event"},{"ancestorTitles":["SettingsAnalytics","sendSettingsUpdatedEvent"],"duration":2,"failureMessages":[],"fullName":"SettingsAnalytics sendSettingsUpdatedEvent should not emit [SETTINGS_KEYS_TO_SCAN_CHANGED] for the same value","status":"passed","title":"should not emit [SETTINGS_KEYS_TO_SCAN_CHANGED] for the same value"},{"ancestorTitles":["SettingsAnalytics","sendSettingsUpdatedEvent"],"duration":1,"failureMessages":[],"fullName":"SettingsAnalytics sendSettingsUpdatedEvent should not emit [SETTINGS_WORKBENCH_PIPELINE_CHANGED] for the same value","status":"passed","title":"should not emit [SETTINGS_WORKBENCH_PIPELINE_CHANGED] for the same value"},{"ancestorTitles":["SettingsAnalytics","sendSettingsUpdatedEvent"],"duration":1,"failureMessages":[],"fullName":"SettingsAnalytics sendSettingsUpdatedEvent should emit [SETTINGS_WORKBENCH_PIPELINE_CHANGED] event","status":"passed","title":"should emit [SETTINGS_WORKBENCH_PIPELINE_CHANGED] event"},{"ancestorTitles":["SettingsAnalytics","sendSettingsUpdatedEvent"],"duration":2,"failureMessages":[],"fullName":"SettingsAnalytics sendSettingsUpdatedEvent should not emit event on error","status":"passed","title":"should not emit event on error"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501242549,"runtime":1328,"slow":false,"start":1733501241221},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/encryption/strategies/keytar-encryption.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["KeytarEncryptionStrategy","isAvailable"],"duration":6,"failureMessages":[],"fullName":"KeytarEncryptionStrategy isAvailable Should return true when keytar is available","status":"passed","title":"Should return true when keytar is available"},{"ancestorTitles":["KeytarEncryptionStrategy","isAvailable"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy isAvailable Should return false when keytar is not available","status":"passed","title":"Should return false when keytar is not available"},{"ancestorTitles":["KeytarEncryptionStrategy","encrypt"],"duration":3,"failureMessages":[],"fullName":"KeytarEncryptionStrategy encrypt Should encrypt data","status":"passed","title":"Should encrypt data"},{"ancestorTitles":["KeytarEncryptionStrategy","encrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy encrypt Should encrypt + generate and set password when not exists yet","status":"passed","title":"Should encrypt + generate and set password when not exists yet"},{"ancestorTitles":["KeytarEncryptionStrategy","encrypt"],"duration":15,"failureMessages":[],"fullName":"KeytarEncryptionStrategy encrypt Should throw KeytarEncryptionError when unable to decrypt","status":"passed","title":"Should throw KeytarEncryptionError when unable to decrypt"},{"ancestorTitles":["KeytarEncryptionStrategy","encrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy encrypt Should throw KeytarUnavailable in getPassword error","status":"passed","title":"Should throw KeytarUnavailable in getPassword error"},{"ancestorTitles":["KeytarEncryptionStrategy","encrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy encrypt Should should throw KeytarUnavailable on setPassword error","status":"passed","title":"Should should throw KeytarUnavailable on setPassword error"},{"ancestorTitles":["KeytarEncryptionStrategy","decrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy decrypt Should decrypt data","status":"passed","title":"Should decrypt data"},{"ancestorTitles":["KeytarEncryptionStrategy","decrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy decrypt Should return null when encryption doesn't match KEYTAR","status":"passed","title":"Should return null when encryption doesn't match KEYTAR"},{"ancestorTitles":["KeytarEncryptionStrategy","decrypt"],"duration":1,"failureMessages":[],"fullName":"KeytarEncryptionStrategy decrypt Should decrypt + generate and set password when not exists yet","status":"passed","title":"Should decrypt + generate and set password when not exists yet"},{"ancestorTitles":["KeytarEncryptionStrategy","decrypt"],"duration":24,"failureMessages":[],"fullName":"KeytarEncryptionStrategy decrypt Should throw KeytarDecryptionError when unable to decrypt","status":"passed","title":"Should throw KeytarDecryptionError when unable to decrypt"},{"ancestorTitles":["KeytarEncryptionStrategy","decrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy decrypt Should throw KeytarUnavailable in getPassword error","status":"passed","title":"Should throw KeytarUnavailable in getPassword error"},{"ancestorTitles":["KeytarEncryptionStrategy","decrypt"],"duration":2,"failureMessages":[],"fullName":"KeytarEncryptionStrategy decrypt Should should throw KeytarUnavailable on setPassword error","status":"passed","title":"Should should throw KeytarUnavailable on setPassword error"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501243383,"runtime":646,"slow":false,"start":1733501242737},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/repositories/local.ai-query.message.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalAiQueryAuthProvider","cleanupDatabaseHistory"],"duration":18,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider cleanupDatabaseHistory should get id to and remove it","status":"passed","title":"should get id to and remove it"},{"ancestorTitles":["LocalAiQueryAuthProvider","list"],"duration":6,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider list should return list of messages","status":"passed","title":"should return list of messages"},{"ancestorTitles":["LocalAiQueryAuthProvider","list"],"duration":6,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider list should ignore messages on decryption error","status":"passed","title":"should ignore messages on decryption error"},{"ancestorTitles":["LocalAiQueryAuthProvider","createMany"],"duration":19,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider createMany should 2 messages","status":"passed","title":"should 2 messages"},{"ancestorTitles":["LocalAiQueryAuthProvider","createMany"],"duration":5,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider createMany should reject on encryption error","status":"passed","title":"should reject on encryption error"},{"ancestorTitles":["LocalAiQueryAuthProvider","clearHistory"],"duration":3,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider clearHistory should clear history","status":"passed","title":"should clear history"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501244148,"runtime":554,"slow":false,"start":1733501243594},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/common/providers/cloud.api.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudApiProvider","callWithAuthRetry"],"duration":4,"failureMessages":[],"fullName":"CloudApiProvider callWithAuthRetry should return result from 1st attempt","status":"passed","title":"should return result from 1st attempt"},{"ancestorTitles":["CloudApiProvider","callWithAuthRetry"],"duration":2,"failureMessages":[],"fullName":"CloudApiProvider callWithAuthRetry should not fail when session invalidation throw an error","status":"passed","title":"should not fail when session invalidation throw an error"},{"ancestorTitles":["CloudApiProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider callWithAuthRetry should throw an error from 1st attempt if not CloudApiUnauthorizedException (and keep session)","status":"passed","title":"should throw an error from 1st attempt if not CloudApiUnauthorizedException (and keep session)"},{"ancestorTitles":["CloudApiProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider callWithAuthRetry should throw CloudApiForbiddenException error from 2nd attempt (by default)","status":"passed","title":"should throw CloudApiForbiddenException error from 2nd attempt (by default)"},{"ancestorTitles":["CloudApiProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider callWithAuthRetry should throw CloudApiForbiddenException error from 3rd attempt (custom attempts)","status":"passed","title":"should throw CloudApiForbiddenException error from 3rd attempt (custom attempts)"},{"ancestorTitles":["CloudApiProvider","generateUtmQuery"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider generateUtmQuery {\"input\":null,\"expected\":{}}","status":"passed","title":"{\"input\":null,\"expected\":{}}"},{"ancestorTitles":["CloudApiProvider","generateUtmQuery"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider generateUtmQuery {\"input\":{\"source\":\"source\"},\"expected\":{\"utm_source\":\"source\"}}","status":"passed","title":"{\"input\":{\"source\":\"source\"},\"expected\":{\"utm_source\":\"source\"}}"},{"ancestorTitles":["CloudApiProvider","generateUtmQuery"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider generateUtmQuery {\"input\":{\"medium\":\"medium\"},\"expected\":{\"utm_medium\":\"medium\"}}","status":"passed","title":"{\"input\":{\"medium\":\"medium\"},\"expected\":{\"utm_medium\":\"medium\"}}"},{"ancestorTitles":["CloudApiProvider","generateUtmQuery"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider generateUtmQuery {\"input\":{\"source\":\"source\",\"medium\":\"medium\",\"campaign\":\"campaign\"},\"expected\":{\"utm_source\":\"source\",\"utm_medium\":\"medium\",\"utm_campaign\":\"campaign\"}}","status":"passed","title":"{\"input\":{\"source\":\"source\",\"medium\":\"medium\",\"campaign\":\"campaign\"},\"expected\":{\"utm_source\":\"source\",\"utm_medium\":\"medium\",\"utm_campaign\":\"campaign\"}}"},{"ancestorTitles":["CloudApiProvider","generateUtmQuery"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider generateUtmQuery {\"input\":{\"campaign\":\"campaign\"},\"expected\":{\"utm_campaign\":\"campaign\"}}","status":"passed","title":"{\"input\":{\"campaign\":\"campaign\"},\"expected\":{\"utm_campaign\":\"campaign\"}}"},{"ancestorTitles":["CloudApiProvider","getHeaders"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider getHeaders {\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\"}}","status":"passed","title":"{\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\"}}"},{"ancestorTitles":["CloudApiProvider","getHeaders"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider getHeaders {\"input\":{},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\"}}","status":"passed","title":"{\"input\":{},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\"}}"},{"ancestorTitles":["CloudApiProvider","getHeaders"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider getHeaders {\"input\":{\"accessToken\":\"jwt-token\"},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\",\"authorization\":\"Bearer jwt-token\"}}","status":"passed","title":"{\"input\":{\"accessToken\":\"jwt-token\"},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\",\"authorization\":\"Bearer jwt-token\"}}"},{"ancestorTitles":["CloudApiProvider","getHeaders"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider getHeaders {\"input\":{\"apiSessionId\":\"id\"},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\",\"cookie\":\"JSESSIONID=id\"}}","status":"passed","title":"{\"input\":{\"apiSessionId\":\"id\"},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\",\"cookie\":\"JSESSIONID=id\"}}"},{"ancestorTitles":["CloudApiProvider","getHeaders"],"duration":1,"failureMessages":[],"fullName":"CloudApiProvider getHeaders {\"input\":{\"csrf\":\"csrf-token\"},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\",\"x-csrf-token\":\"csrf-token\"}}","status":"passed","title":"{\"input\":{\"csrf\":\"csrf-token\"},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\",\"x-redisinsight-token\":\"token\",\"x-csrf-token\":\"csrf-token\"}}"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501245840,"runtime":1453,"slow":false,"start":1733501244387},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/repositories/local-plugin-state.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalPluginStateRepository","upsert"],"duration":4,"failureMessages":[],"fullName":"LocalPluginStateRepository upsert should process new entity","status":"passed","title":"should process new entity"},{"ancestorTitles":["LocalPluginStateRepository","upsert"],"duration":1,"failureMessages":[],"fullName":"LocalPluginStateRepository upsert should throw origin error when error is not a SQL constraint error","status":"passed","title":"should throw origin error when error is not a SQL constraint error"},{"ancestorTitles":["LocalPluginStateRepository","upsert"],"duration":1,"failureMessages":[],"fullName":"LocalPluginStateRepository upsert should throw not found error ON SQL constraint error","status":"passed","title":"should throw not found error ON SQL constraint error"},{"ancestorTitles":["LocalPluginStateRepository","getOne"],"duration":2,"failureMessages":[],"fullName":"LocalPluginStateRepository getOne should return decrypted and transformed state","status":"passed","title":"should return decrypted and transformed state"},{"ancestorTitles":["LocalPluginStateRepository","getOne"],"duration":2,"failureMessages":[],"fullName":"LocalPluginStateRepository getOne should return null fields in case of decryption errors","status":"passed","title":"should return null fields in case of decryption errors"},{"ancestorTitles":["LocalPluginStateRepository","getOne"],"duration":14,"failureMessages":[],"fullName":"LocalPluginStateRepository getOne should return not found exception","status":"passed","title":"should return not found exception"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501246782,"runtime":745,"slow":false,"start":1733501246037},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/model/user-session.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserSession","subscribe"],"duration":2,"failureMessages":[],"fullName":"UserSession subscribe should subscribe to a channel","status":"passed","title":"should subscribe to a channel"},{"ancestorTitles":["UserSession","unsubscribe"],"duration":2,"failureMessages":[],"fullName":"UserSession unsubscribe should unsubscribe from a channel","status":"passed","title":"should unsubscribe from a channel"},{"ancestorTitles":["UserSession","handleMessage"],"duration":201,"failureMessages":[],"fullName":"UserSession handleMessage should handle message by particular subscription","status":"passed","title":"should handle message by particular subscription"},{"ancestorTitles":["UserSession","handleDisconnect"],"duration":1,"failureMessages":[],"fullName":"UserSession handleDisconnect should handle message by particular subscription","status":"passed","title":"should handle message by particular subscription"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501247046,"runtime":78,"slow":false,"start":1733501246968},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-pipiline.error.handler.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["wrapRdiPipelineError"],"duration":0,"failureMessages":[],"fullName":"wrapRdiPipelineError should return the original error if it is an instance of HttpException","status":"passed","title":"should return the original error if it is an instance of HttpException"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":0,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineUnauthorizedException if the response status is 401","status":"passed","title":"should return a RdiPipelineUnauthorizedException if the response status is 401"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":0,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineUnauthorizedException with a default unauthorized message if the response status is 401 and message is not provided","status":"passed","title":"should return a RdiPipelineUnauthorizedException with a default unauthorized message if the response status is 401 and message is not provided"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":1,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineForbiddenException if the response status is 403","status":"passed","title":"should return a RdiPipelineForbiddenException if the response status is 403"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":0,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineValidationException if the response status is 422","status":"passed","title":"should return a RdiPipelineValidationException if the response status is 422"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":1,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineValidationException with a default validation message if the response status is 422 and message is not provided","status":"passed","title":"should return a RdiPipelineValidationException with a default validation message if the response status is 422 and message is not provided"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":0,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineNotFoundException if the response status is not 401 or 422","status":"passed","title":"should return a RdiPipelineNotFoundException if the response status is not 401 or 422"},{"ancestorTitles":["wrapRdiPipelineError"],"duration":0,"failureMessages":[],"fullName":"wrapRdiPipelineError should return a RdiPipelineInternalServerErrorException if there is no response","status":"passed","title":"should return a RdiPipelineInternalServerErrorException if there is no response"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501247687,"runtime":626,"slow":false,"start":1733501247061},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database/database-info.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseInfoService","getInfo"],"duration":5,"failureMessages":[],"fullName":"DatabaseInfoService getInfo should create client and get general info","status":"passed","title":"should create client and get general info"},{"ancestorTitles":["DatabaseInfoService","getOverview"],"duration":1,"failureMessages":[],"fullName":"DatabaseInfoService getOverview should create client and get overview","status":"passed","title":"should create client and get overview"},{"ancestorTitles":["DatabaseInfoService","getDBSize"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoService getDBSize should create client and gets db size","status":"passed","title":"should create client and gets db size"},{"ancestorTitles":["DatabaseInfoService","getDatabaseIndex"],"duration":1,"failureMessages":[],"fullName":"DatabaseInfoService getDatabaseIndex should not return a new client","status":"passed","title":"should not return a new client"},{"ancestorTitles":["DatabaseInfoService","getDatabaseIndex"],"duration":17,"failureMessages":[],"fullName":"DatabaseInfoService getDatabaseIndex Should throw Error when error during creating a client","status":"passed","title":"Should throw Error when error during creating a client"},{"ancestorTitles":["DatabaseInfoService","getDatabaseIndex"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoService getDatabaseIndex getDatabaseIndex should call databaseService.get() if previous clientMetadata.db is Undefined","status":"passed","title":"getDatabaseIndex should call databaseService.get() if previous clientMetadata.db is Undefined"},{"ancestorTitles":["DatabaseInfoService","getDatabaseIndex","recommendationService"],"duration":2,"failureMessages":[],"fullName":"DatabaseInfoService getDatabaseIndex recommendationService getDatabaseIndex should call recommendationService","status":"passed","title":"getDatabaseIndex should call recommendationService"},{"ancestorTitles":["DatabaseInfoService","getDatabaseIndex","recommendationService"],"duration":3,"failureMessages":[],"fullName":"DatabaseInfoService getDatabaseIndex recommendationService getDatabaseIndex should not call recommendationService if Error exists","status":"passed","title":"getDatabaseIndex should not call recommendationService if Error exists"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501249397,"runtime":1434,"slow":false,"start":1733501247963},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/rejson-rl.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RejsonRlKeyInfoStrategy","getInfo"],"duration":13,"failureMessages":[],"fullName":"RejsonRlKeyInfoStrategy getInfo should return appropriate value for key that store object","status":"passed","title":"should return appropriate value for key that store object"},{"ancestorTitles":["RejsonRlKeyInfoStrategy","getInfo"],"duration":5,"failureMessages":[],"fullName":"RejsonRlKeyInfoStrategy getInfo should return appropriate value for key that store string","status":"passed","title":"should return appropriate value for key that store string"},{"ancestorTitles":["RejsonRlKeyInfoStrategy","getInfo"],"duration":4,"failureMessages":[],"fullName":"RejsonRlKeyInfoStrategy getInfo should return appropriate value for key that store array","status":"passed","title":"should return appropriate value for key that store array"},{"ancestorTitles":["RejsonRlKeyInfoStrategy","getInfo"],"duration":4,"failureMessages":[],"fullName":"RejsonRlKeyInfoStrategy getInfo should return appropriate value for key that store not iterable type","status":"passed","title":"should return appropriate value for key that store not iterable type"},{"ancestorTitles":["RejsonRlKeyInfoStrategy","getInfo"],"duration":16,"failureMessages":[],"fullName":"RejsonRlKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501250183,"runtime":573,"slow":false,"start":1733501249610},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/certificate/client-certificate.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ClientCertificateService","get"],"duration":4,"failureMessages":[],"fullName":"ClientCertificateService get should return client certificate model","status":"passed","title":"should return client certificate model"},{"ancestorTitles":["ClientCertificateService","get"],"duration":14,"failureMessages":[],"fullName":"ClientCertificateService get should return NotFound error if no certificated found","status":"passed","title":"should return NotFound error if no certificated found"},{"ancestorTitles":["ClientCertificateService","list"],"duration":1,"failureMessages":[],"fullName":"ClientCertificateService list get all certificates from the repository","status":"passed","title":"get all certificates from the repository"},{"ancestorTitles":["ClientCertificateService","create"],"duration":2,"failureMessages":[],"fullName":"ClientCertificateService create should return client certificate model","status":"passed","title":"should return client certificate model"},{"ancestorTitles":["ClientCertificateService","create"],"duration":3,"failureMessages":[],"fullName":"ClientCertificateService create should throw encryption error","status":"passed","title":"should throw encryption error"},{"ancestorTitles":["ClientCertificateService","create"],"duration":2,"failureMessages":[],"fullName":"ClientCertificateService create should throw 500 error in any other case (why?)","status":"passed","title":"should throw 500 error in any other case (why?)"},{"ancestorTitles":["ClientCertificateService","delete"],"duration":2,"failureMessages":[],"fullName":"ClientCertificateService delete should delete client certificate and remove affected database clients","status":"passed","title":"should delete client certificate and remove affected database clients"},{"ancestorTitles":["ClientCertificateService","delete"],"duration":2,"failureMessages":[],"fullName":"ClientCertificateService delete should throw encryption error","status":"passed","title":"should throw encryption error"},{"ancestorTitles":["ClientCertificateService","delete"],"duration":12,"failureMessages":[],"fullName":"ClientCertificateService delete should throw 500 error in any other case (why?)","status":"passed","title":"should throw 500 error in any other case (why?)"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501250918,"runtime":552,"slow":false,"start":1733501250366},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/utils/sentinel.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Sentinel Util","isSentinel"],"duration":1,"failureMessages":[],"fullName":"Sentinel Util isSentinel sentinel connection ok","status":"passed","title":"sentinel connection ok"},{"ancestorTitles":["Sentinel Util","isSentinel"],"duration":0,"failureMessages":[],"fullName":"Sentinel Util isSentinel sentinel not supported","status":"passed","title":"sentinel not supported"},{"ancestorTitles":["Sentinel Util","getMasterEndpoints"],"duration":1,"failureMessages":[],"fullName":"Sentinel Util getMasterEndpoints succeed to get sentinel master endpoints","status":"passed","title":"succeed to get sentinel master endpoints"},{"ancestorTitles":["Sentinel Util","getMasterEndpoints"],"duration":0,"failureMessages":[],"fullName":"Sentinel Util getMasterEndpoints empty list of sentinel master endpoints","status":"passed","title":"empty list of sentinel master endpoints"},{"ancestorTitles":["Sentinel Util","getMasterEndpoints"],"duration":7,"failureMessages":[],"fullName":"Sentinel Util getMasterEndpoints wrong database type","status":"passed","title":"wrong database type"},{"ancestorTitles":["Sentinel Util","getMasterEndpoints"],"duration":7,"failureMessages":[],"fullName":"Sentinel Util getMasterEndpoints user don't have required permissions","status":"passed","title":"user don't have required permissions"},{"ancestorTitles":["Sentinel Util","discoverSentinelMasterGroups"],"duration":1,"failureMessages":[],"fullName":"Sentinel Util discoverSentinelMasterGroups succeed to get sentinel masters","status":"passed","title":"succeed to get sentinel masters"},{"ancestorTitles":["Sentinel Util","discoverSentinelMasterGroups"],"duration":1,"failureMessages":[],"fullName":"Sentinel Util discoverSentinelMasterGroups wrong database type","status":"passed","title":"wrong database type"},{"ancestorTitles":["Sentinel Util","discoverSentinelMasterGroups"],"duration":0,"failureMessages":[],"fullName":"Sentinel Util discoverSentinelMasterGroups user don't have required permissions","status":"passed","title":"user don't have required permissions"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501252580,"runtime":1433,"slow":false,"start":1733501251147},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/certificate/ca-certificate.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CaCertificateService","get"],"duration":6,"failureMessages":[],"fullName":"CaCertificateService get should return ca certificate model","status":"passed","title":"should return ca certificate model"},{"ancestorTitles":["CaCertificateService","get"],"duration":27,"failureMessages":[],"fullName":"CaCertificateService get should return NotFound error if no certificated found","status":"passed","title":"should return NotFound error if no certificated found"},{"ancestorTitles":["CaCertificateService","list"],"duration":2,"failureMessages":[],"fullName":"CaCertificateService list get all certificates from the repository","status":"passed","title":"get all certificates from the repository"},{"ancestorTitles":["CaCertificateService","create"],"duration":3,"failureMessages":[],"fullName":"CaCertificateService create should return ca certificate model","status":"passed","title":"should return ca certificate model"},{"ancestorTitles":["CaCertificateService","create"],"duration":26,"failureMessages":[],"fullName":"CaCertificateService create should throw encryption error","status":"passed","title":"should throw encryption error"},{"ancestorTitles":["CaCertificateService","create"],"duration":4,"failureMessages":[],"fullName":"CaCertificateService create should throw 500 error in any other case (why?)","status":"passed","title":"should throw 500 error in any other case (why?)"},{"ancestorTitles":["CaCertificateService","delete"],"duration":3,"failureMessages":[],"fullName":"CaCertificateService delete should delete CA certificate and remove affected database clients","status":"passed","title":"should delete CA certificate and remove affected database clients"},{"ancestorTitles":["CaCertificateService","delete"],"duration":4,"failureMessages":[],"fullName":"CaCertificateService delete should throw encryption error","status":"passed","title":"should throw encryption error"},{"ancestorTitles":["CaCertificateService","delete"],"duration":5,"failureMessages":[],"fullName":"CaCertificateService delete should throw 500 error in any other case (why?)","status":"passed","title":"should throw 500 error in any other case (why?)"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501253361,"runtime":546,"slow":false,"start":1733501252815},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/session/cloud-session.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudSessionService","getSession"],"duration":4,"failureMessages":[],"fullName":"CloudSessionService getSession Should return null when there is no cloud data in user session","status":"passed","title":"Should return null when there is no cloud data in user session"},{"ancestorTitles":["CloudSessionService","getSession"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService getSession should take some additional data in repository if it is not in session","status":"passed","title":"should take some additional data in repository if it is not in session"},{"ancestorTitles":["CloudSessionService","getSession"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService getSession should not fail if data in repository is null","status":"passed","title":"should not fail if data in repository is null"},{"ancestorTitles":["CloudSessionService","getSession"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService getSession Should return cloud data only","status":"passed","title":"Should return cloud data only"},{"ancestorTitles":["CloudSessionService","updateSessionData"],"duration":2,"failureMessages":[],"fullName":"CloudSessionService updateSessionData Should return null when there is nothing to update","status":"passed","title":"Should return null when there is nothing to update"},{"ancestorTitles":["CloudSessionService","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService updateSessionData Should update cloud data","status":"passed","title":"Should update cloud data"},{"ancestorTitles":["CloudSessionService","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService updateSessionData Should update data in cloud sesssion repository when necessary fields included","status":"passed","title":"Should update data in cloud sesssion repository when necessary fields included"},{"ancestorTitles":["CloudSessionService","updateSessionData"],"duration":2,"failureMessages":[],"fullName":"CloudSessionService updateSessionData Should merge and update cloud data","status":"passed","title":"Should merge and update cloud data"},{"ancestorTitles":["CloudSessionService","deleteSession"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService deleteSession should delete cloud session data by id and clear cloud session repository data","status":"passed","title":"should delete cloud session data by id and clear cloud session repository data"},{"ancestorTitles":["CloudSessionService","invalidateApiSession"],"duration":1,"failureMessages":[],"fullName":"CloudSessionService invalidateApiSession should invalidate cloud api session data by id","status":"passed","title":"should invalidate cloud api session data by id"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501254117,"runtime":560,"slow":false,"start":1733501253557},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis-sentinel/redis-sentinel.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisSentinelAnalytics","sendGetSentinelMastersSucceedEvent"],"duration":4,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetSentinelMastersSucceedEvent should emit event with active master groups","status":"passed","title":"should emit event with active master groups"},{"ancestorTitles":["RedisSentinelAnalytics","sendGetSentinelMastersSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetSentinelMastersSucceedEvent should emit event with active and not active master groups","status":"passed","title":"should emit event with active and not active master groups"},{"ancestorTitles":["RedisSentinelAnalytics","sendGetSentinelMastersSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetSentinelMastersSucceedEvent should emit event without active groups","status":"passed","title":"should emit event without active groups"},{"ancestorTitles":["RedisSentinelAnalytics","sendGetSentinelMastersSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetSentinelMastersSucceedEvent should emit event for empty list","status":"passed","title":"should emit event for empty list"},{"ancestorTitles":["RedisSentinelAnalytics","sendGetSentinelMastersSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetSentinelMastersSucceedEvent should emit event for undefined input value","status":"passed","title":"should emit event for undefined input value"},{"ancestorTitles":["RedisSentinelAnalytics","sendGetSentinelMastersSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetSentinelMastersSucceedEvent should not throw on error","status":"passed","title":"should not throw on error"},{"ancestorTitles":["RedisSentinelAnalytics","sendGetRECloudSubsFailedEvent"],"duration":1,"failureMessages":[],"fullName":"RedisSentinelAnalytics sendGetRECloudSubsFailedEvent should emit event","status":"passed","title":"should emit event"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501255830,"runtime":1479,"slow":false,"start":1733501254351},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/job/jobs/cloud-job.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudJob","getRedisClient"],"duration":17,"failureMessages":[],"fullName":"CloudJob getRedisClient create new redis client","status":"passed","title":"create new redis client"},{"ancestorTitles":["CloudJob","getRedisClient"],"duration":1,"failureMessages":[],"fullName":"CloudJob getRedisClient existing client has connection","status":"passed","title":"existing client has connection"},{"ancestorTitles":["CloudJob","getRedisClient"],"duration":1,"failureMessages":[],"fullName":"CloudJob getRedisClient existing client has no connection","status":"passed","title":"existing client has no connection"},{"ancestorTitles":["CloudJob","getRedisClient"],"duration":2,"failureMessages":[],"fullName":"CloudJob getRedisClient select redis database by number","status":"passed","title":"select redis database by number"},{"ancestorTitles":["CloudJob","getRedisClient"],"duration":7,"failureMessages":[],"fullName":"CloudJob getRedisClient can't create redis client","status":"passed","title":"can't create redis client"},{"ancestorTitles":["CloudJob","createNewClient"],"duration":1,"failureMessages":[],"fullName":"CloudJob createNewClient create new redis client","status":"passed","title":"create new redis client"},{"ancestorTitles":["CloudJob","createNewClient"],"duration":17,"failureMessages":[],"fullName":"CloudJob createNewClient can't create redis client","status":"passed","title":"can't create redis client"},{"ancestorTitles":["CloudJob","execPipelineFromClient"],"duration":2,"failureMessages":[],"fullName":"CloudJob execPipelineFromClient succeed to execute pipeline from redis client","status":"passed","title":"succeed to execute pipeline from redis client"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501256654,"runtime":592,"slow":false,"start":1733501256062},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/notification/repositories/local.notification.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalNotificationRepository","getNotifications"],"duration":4,"failureMessages":[],"fullName":"LocalNotificationRepository getNotifications should return list of notifications","status":"passed","title":"should return list of notifications"},{"ancestorTitles":["LocalNotificationRepository","getTotalUnread"],"duration":2,"failureMessages":[],"fullName":"LocalNotificationRepository getTotalUnread should return number of unread messages","status":"passed","title":"should return number of unread messages"},{"ancestorTitles":["LocalNotificationRepository","readNotifications"],"duration":1,"failureMessages":[],"fullName":"LocalNotificationRepository readNotifications should read all notifications","status":"passed","title":"should read all notifications"},{"ancestorTitles":["LocalNotificationRepository","readNotifications"],"duration":1,"failureMessages":[],"fullName":"LocalNotificationRepository readNotifications should read particular notification by timestamp","status":"passed","title":"should read particular notification by timestamp"},{"ancestorTitles":["LocalNotificationRepository","readNotifications"],"duration":2,"failureMessages":[],"fullName":"LocalNotificationRepository readNotifications should read notifications by type","status":"passed","title":"should read notifications by type"},{"ancestorTitles":["LocalNotificationRepository","insertNotifications"],"duration":1,"failureMessages":[],"fullName":"LocalNotificationRepository insertNotifications should insert multiple notifications","status":"passed","title":"should insert multiple notifications"},{"ancestorTitles":["LocalNotificationRepository","getGlobalNotifications"],"duration":2,"failureMessages":[],"fullName":"LocalNotificationRepository getGlobalNotifications should query global notifications particular fields only","status":"passed","title":"should query global notifications particular fields only"},{"ancestorTitles":["LocalNotificationRepository","deleteGlobalNotifications"],"duration":1,"failureMessages":[],"fullName":"LocalNotificationRepository deleteGlobalNotifications should remove only global notifications","status":"passed","title":"should remove only global notifications"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501257523,"runtime":683,"slow":false,"start":1733501256840},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/repositories/local.database.recommendation.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalDatabaseRecommendationRepository","isExist"],"duration":8,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository isExist should return true when receive database entity","status":"passed","title":"should return true when receive database entity"},{"ancestorTitles":["LocalDatabaseRecommendationRepository","isExist"],"duration":1,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository isExist should return false when no database received","status":"passed","title":"should return false when no database received"},{"ancestorTitles":["LocalDatabaseRecommendationRepository","isExist"],"duration":14,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository isExist should return false when received error","status":"passed","title":"should return false when received error"},{"ancestorTitles":["LocalDatabaseRecommendationRepository","create"],"duration":12,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository create should create recommendation","status":"passed","title":"should create recommendation"},{"ancestorTitles":["LocalDatabaseRecommendationRepository","create"],"duration":3,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository create should not create recommendation","status":"passed","title":"should not create recommendation"},{"ancestorTitles":["LocalDatabaseRecommendationRepository","delete"],"duration":2,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository delete should delete recommendation by id","status":"passed","title":"should delete recommendation by id"},{"ancestorTitles":["LocalDatabaseRecommendationRepository","delete"],"duration":3,"failureMessages":[],"fullName":"LocalDatabaseRecommendationRepository delete should return NotFoundException when recommendation does not found","status":"passed","title":"should return NotFoundException when recommendation does not found"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501259116,"runtime":1352,"slow":false,"start":1733501257764},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/analytics/telemetry.base.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TelemetryBaseService","sendEvent"],"duration":5,"failureMessages":[],"fullName":"TelemetryBaseService sendEvent should emit event","status":"passed","title":"should emit event"},{"ancestorTitles":["TelemetryBaseService","sendEvent"],"duration":2,"failureMessages":[],"fullName":"TelemetryBaseService sendEvent should emit event with empty event data","status":"passed","title":"should emit event with empty event data"},{"ancestorTitles":["TelemetryBaseService","sendEvent"],"duration":1,"failureMessages":[],"fullName":"TelemetryBaseService sendEvent should emit event for undefined event data","status":"passed","title":"should emit event for undefined event data"},{"ancestorTitles":["TelemetryBaseService","sendEvent"],"duration":1,"failureMessages":[],"fullName":"TelemetryBaseService sendEvent should not throw on error","status":"passed","title":"should not throw on error"},{"ancestorTitles":["TelemetryBaseService","sendFailedEvent"],"duration":1,"failureMessages":[],"fullName":"TelemetryBaseService sendFailedEvent should emit event for custom exception","status":"passed","title":"should emit event for custom exception"},{"ancestorTitles":["TelemetryBaseService","sendFailedEvent"],"duration":1,"failureMessages":[],"fullName":"TelemetryBaseService sendFailedEvent should emit event for default exception","status":"passed","title":"should emit event for default exception"},{"ancestorTitles":["TelemetryBaseService","sendFailedEvent"],"duration":1,"failureMessages":[],"fullName":"TelemetryBaseService sendFailedEvent should emit event with additional event data","status":"passed","title":"should emit event with additional event data"},{"ancestorTitles":["TelemetryBaseService","sendFailedEvent"],"duration":1,"failureMessages":[],"fullName":"TelemetryBaseService sendFailedEvent should not throw on error","status":"passed","title":"should not throw on error"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501262974,"runtime":3547,"slow":false,"start":1733501259427},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/models/log-file.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LogFile"],"duration":2,"failureMessages":[],"fullName":"LogFile Initialization","status":"passed","title":"Initialization"},{"ancestorTitles":["LogFile"],"duration":1,"failureMessages":[],"fullName":"LogFile getWriteStream","status":"passed","title":"getWriteStream"},{"ancestorTitles":["LogFile"],"duration":1,"failureMessages":[],"fullName":"LogFile getReadStream","status":"passed","title":"getReadStream"},{"ancestorTitles":["LogFile"],"duration":1,"failureMessages":[],"fullName":"LogFile getEmitter","status":"passed","title":"getEmitter"},{"ancestorTitles":["LogFile"],"duration":0,"failureMessages":[],"fullName":"LogFile getFilename + setAlias","status":"passed","title":"getFilename + setAlias"},{"ancestorTitles":["LogFile"],"duration":3002,"failureMessages":[],"fullName":"LogFile addProfilerClient + removeProfilerClient","status":"passed","title":"addProfilerClient + removeProfilerClient"},{"ancestorTitles":["LogFile"],"duration":1,"failureMessages":[],"fullName":"LogFile destroy","status":"passed","title":"destroy"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501263755,"runtime":594,"slow":false,"start":1733501263161},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/repository/local.rdi.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalRdiRepository","get"],"duration":7,"failureMessages":[],"fullName":"LocalRdiRepository get should return null if entity is not found","status":"passed","title":"should return null if entity is not found"},{"ancestorTitles":["LocalRdiRepository","get"],"duration":1,"failureMessages":[],"fullName":"LocalRdiRepository get should return decrypted Rdi entity","status":"passed","title":"should return decrypted Rdi entity"},{"ancestorTitles":["LocalRdiRepository","get"],"duration":1,"failureMessages":[],"fullName":"LocalRdiRepository get should return decrypted Rdi entity even if decryption fails and ignoreEncryptionErrors is true","status":"passed","title":"should return decrypted Rdi entity even if decryption fails and ignoreEncryptionErrors is true"},{"ancestorTitles":["LocalRdiRepository","list"],"duration":2,"failureMessages":[],"fullName":"LocalRdiRepository list should return list of Rdi entities","status":"passed","title":"should return list of Rdi entities"},{"ancestorTitles":["LocalRdiRepository","create"],"duration":2,"failureMessages":[],"fullName":"LocalRdiRepository create should create and return decrypted Rdi entity","status":"passed","title":"should create and return decrypted Rdi entity"},{"ancestorTitles":["LocalRdiRepository","update"],"duration":2,"failureMessages":[],"fullName":"LocalRdiRepository update should update and return decrypted Rdi entity","status":"passed","title":"should update and return decrypted Rdi entity"},{"ancestorTitles":["LocalRdiRepository","delete"],"duration":1,"failureMessages":[],"fullName":"LocalRdiRepository delete should delete entities","status":"passed","title":"should delete entities"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501265416,"runtime":1402,"slow":false,"start":1733501264014},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis-enterprise/redis-enterprise.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsSucceedEvent"],"duration":5,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsSucceedEvent should emit event with active databases","status":"passed","title":"should emit event with active databases"},{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsSucceedEvent should emit event with active and not active database","status":"passed","title":"should emit event with active and not active database"},{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsSucceedEvent should emit event without active databases","status":"passed","title":"should emit event without active databases"},{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsSucceedEvent"],"duration":1,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsSucceedEvent should emit GetREClusterDbsSucceed event for empty list","status":"passed","title":"should emit GetREClusterDbsSucceed event for empty list"},{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsSucceedEvent should emit GetREClusterDbsSucceed event for undefined input value","status":"passed","title":"should emit GetREClusterDbsSucceed event for undefined input value"},{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsSucceedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsSucceedEvent should not throw on error when sending GetREClusterDbsSucceed event","status":"passed","title":"should not throw on error when sending GetREClusterDbsSucceed event"},{"ancestorTitles":["RedisEnterpriseAnalytics","sendGetREClusterDbsFailedEvent"],"duration":2,"failureMessages":[],"fullName":"RedisEnterpriseAnalytics sendGetREClusterDbsFailedEvent should emit GetREClusterDbsFailed event","status":"passed","title":"should emit GetREClusterDbsFailed event"}]},{"numFailingTests":0,"numPassingTests":31,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501266303,"runtime":557,"slow":false,"start":1733501265746},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/hosting-provider-helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["getHostingProvider"],"duration":2,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN_LOCALHOST for input: 127.0.0.1 ","status":"passed","title":"should be output: UNKNOWN_LOCALHOST for input: 127.0.0.1 "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN_LOCALHOST for input: 0.0.0.0 ","status":"passed","title":"should be output: UNKNOWN_LOCALHOST for input: 0.0.0.0 "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN_LOCALHOST for input: localhost ","status":"passed","title":"should be output: UNKNOWN_LOCALHOST for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN_LOCALHOST for input: 172.18.0.2 ","status":"passed","title":"should be output: UNKNOWN_LOCALHOST for input: 172.18.0.2 "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN for input: 176.87.56.244 ","status":"passed","title":"should be output: UNKNOWN for input: 176.87.56.244 "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN for input: 192.12.56.244 ","status":"passed","title":"should be output: UNKNOWN for input: 192.12.56.244 "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN for input: 255.255.56.244 ","status":"passed","title":"should be output: UNKNOWN for input: 255.255.56.244 "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN for input: redis ","status":"passed","title":"should be output: UNKNOWN for input: redis "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: RE_CLOUD for input: demo-redislabs.rlrcp.com ","status":"passed","title":"should be output: RE_CLOUD for input: demo-redislabs.rlrcp.com "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: AWS_MEMORYDB for input: memorydb.aws.com ","status":"passed","title":"should be output: AWS_MEMORYDB for input: memorydb.aws.com "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: RE_CLOUD for input: redis-16781.c273.us-east-1-2.ec2.cloud.redislabs.com ","status":"passed","title":"should be output: RE_CLOUD for input: redis-16781.c273.us-east-1-2.ec2.cloud.redislabs.com "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: RE_CLOUD for input: redis-16781.c273.us-east-1-2.ec2.cloud.redis-cloud.com ","status":"passed","title":"should be output: RE_CLOUD for input: redis-16781.c273.us-east-1-2.ec2.cloud.redis-cloud.com "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: RE_CLOUD for input: redis-16781.c273.us-east-1-2.ec2.cloud.rlrcp.com ","status":"passed","title":"should be output: RE_CLOUD for input: redis-16781.c273.us-east-1-2.ec2.cloud.rlrcp.com "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: AWS_ELASTICACHE for input: askubuntu.mki5tz.0001.use1.cache.amazonaws.com ","status":"passed","title":"should be output: AWS_ELASTICACHE for input: askubuntu.mki5tz.0001.use1.cache.amazonaws.com "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: AZURE_CACHE for input: contoso5.redis.cache.windows.net ","status":"passed","title":"should be output: AZURE_CACHE for input: contoso5.redis.cache.windows.net "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: AZURE_CACHE_REDIS_ENTERPRISE for input: contoso5.redisenterprise.cache.azure.net ","status":"passed","title":"should be output: AZURE_CACHE_REDIS_ENTERPRISE for input: contoso5.redisenterprise.cache.azure.net "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: UNKNOWN for input: demo-redis-provider.unknown.com ","status":"passed","title":"should be output: UNKNOWN for input: demo-redis-provider.unknown.com "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: REDIS_COMMUNITY_EDITION for input: localhost ","status":"passed","title":"should be output: REDIS_COMMUNITY_EDITION for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: REDIS_COMMUNITY_EDITION for input: localhost ","status":"passed","title":"should be output: REDIS_COMMUNITY_EDITION for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: REDIS_STACK for input: localhost ","status":"passed","title":"should be output: REDIS_STACK for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: REDIS_ENTERPRISE for input: localhost ","status":"passed","title":"should be output: REDIS_ENTERPRISE for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: MEMORYSTORE for input: localhost ","status":"passed","title":"should be output: MEMORYSTORE for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: VALKEY for input: localhost ","status":"passed","title":"should be output: VALKEY for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: DRAGONFLY for input: localhost ","status":"passed","title":"should be output: DRAGONFLY for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: GARNET for input: localhost ","status":"passed","title":"should be output: GARNET for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: KVROCKS for input: localhost ","status":"passed","title":"should be output: KVROCKS for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":1,"failureMessages":[],"fullName":"getHostingProvider should be output: REDICT for input: localhost ","status":"passed","title":"should be output: REDICT for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: UPSTASH for input: localhost ","status":"passed","title":"should be output: UPSTASH for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: AWS_ELASTICACHE for input: localhost ","status":"passed","title":"should be output: AWS_ELASTICACHE for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: AWS_MEMORYDB for input: localhost ","status":"passed","title":"should be output: AWS_MEMORYDB for input: localhost "},{"ancestorTitles":["getHostingProvider"],"duration":0,"failureMessages":[],"fullName":"getHostingProvider should be output: KEYDB for input: localhost ","status":"passed","title":"should be output: KEYDB for input: localhost "}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501267154,"runtime":654,"slow":false,"start":1733501266500},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/chat/providers/conv-ai.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ConvAiProvider","auth"],"duration":4,"failureMessages":[],"fullName":"ConvAiProvider auth get session id","status":"passed","title":"get session id"},{"ancestorTitles":["ConvAiProvider","auth"],"duration":7,"failureMessages":[],"fullName":"ConvAiProvider auth throw ConvAiUnauthorized exception","status":"passed","title":"throw ConvAiUnauthorized exception"},{"ancestorTitles":["ConvAiProvider","getHistory"],"duration":1,"failureMessages":[],"fullName":"ConvAiProvider getHistory should get chat history chat history","status":"passed","title":"should get chat history chat history"},{"ancestorTitles":["ConvAiProvider","getHistory"],"duration":1,"failureMessages":[],"fullName":"ConvAiProvider getHistory throw ConvAiUnauthorized exception","status":"passed","title":"throw ConvAiUnauthorized exception"},{"ancestorTitles":["ConvAiProvider","postMessage"],"duration":1,"failureMessages":[],"fullName":"ConvAiProvider postMessage should post send a message and get stream as result","status":"passed","title":"should post send a message and get stream as result"},{"ancestorTitles":["ConvAiProvider","postMessage"],"duration":1,"failureMessages":[],"fullName":"ConvAiProvider postMessage throw ConvAiUnauthorized exception","status":"passed","title":"throw ConvAiUnauthorized exception"},{"ancestorTitles":["ConvAiProvider","reset"],"duration":1,"failureMessages":[],"fullName":"ConvAiProvider reset reset chat history","status":"passed","title":"reset chat history"},{"ancestorTitles":["ConvAiProvider","reset"],"duration":1,"failureMessages":[],"fullName":"ConvAiProvider reset throw ConvAiUnauthorized exception","status":"passed","title":"throw ConvAiUnauthorized exception"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501269014,"runtime":1627,"slow":false,"start":1733501267387},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/browser-history/browser-history.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BrowserHistoryService","create"],"duration":4,"failureMessages":[],"fullName":"BrowserHistoryService create should create new database and send analytics event","status":"passed","title":"should create new database and send analytics event"},{"ancestorTitles":["BrowserHistoryService","create"],"duration":5,"failureMessages":[],"fullName":"BrowserHistoryService create should throw NotFound if no browser history?","status":"passed","title":"should throw NotFound if no browser history?"},{"ancestorTitles":["BrowserHistoryService","get"],"duration":1,"failureMessages":[],"fullName":"BrowserHistoryService get should return browser history by id","status":"passed","title":"should return browser history by id"},{"ancestorTitles":["BrowserHistoryService","list"],"duration":1,"failureMessages":[],"fullName":"BrowserHistoryService list should return browser history items","status":"passed","title":"should return browser history items"},{"ancestorTitles":["BrowserHistoryService","list"],"duration":1,"failureMessages":[],"fullName":"BrowserHistoryService list should throw Error?","status":"passed","title":"should throw Error?"},{"ancestorTitles":["BrowserHistoryService","delete"],"duration":12,"failureMessages":[],"fullName":"BrowserHistoryService delete should remove existing browser history item","status":"passed","title":"should remove existing browser history item"},{"ancestorTitles":["BrowserHistoryService","delete"],"duration":2,"failureMessages":[],"fullName":"BrowserHistoryService delete should throw NotFoundException? on any error during deletion","status":"passed","title":"should throw NotFoundException? on any error during deletion"},{"ancestorTitles":["BrowserHistoryService","bulkDelete"],"duration":1,"failureMessages":[],"fullName":"BrowserHistoryService bulkDelete should remove multiple browser history items","status":"passed","title":"should remove multiple browser history items"},{"ancestorTitles":["BrowserHistoryService","bulkDelete"],"duration":1,"failureMessages":[],"fullName":"BrowserHistoryService bulkDelete should ignore errors and do not count affected","status":"passed","title":"should ignore errors and do not count affected"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501269783,"runtime":579,"slow":false,"start":1733501269204},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/repositories/in-memory.ai-query.context.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["InMemoryAiQueryContextRepository"],"duration":4,"failureMessages":[],"fullName":"InMemoryAiQueryContextRepository should return null since no data cached","status":"passed","title":"should return null since no data cached"},{"ancestorTitles":["InMemoryAiQueryContextRepository"],"duration":1,"failureMessages":[],"fullName":"InMemoryAiQueryContextRepository should return cached data","status":"passed","title":"should return cached data"},{"ancestorTitles":["InMemoryAiQueryContextRepository"],"duration":2,"failureMessages":[],"fullName":"InMemoryAiQueryContextRepository should return cached index context data","status":"passed","title":"should return cached index context data"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501270534,"runtime":566,"slow":false,"start":1733501269968},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/auth/cloud-auth.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudAuthAnalytics","sendCloudSignInSucceeded"],"duration":4,"failureMessages":[],"fullName":"CloudAuthAnalytics sendCloudSignInSucceeded should emit event with deep link flow","status":"passed","title":"should emit event with deep link flow"},{"ancestorTitles":["CloudAuthAnalytics","sendCloudSignInSucceeded"],"duration":1,"failureMessages":[],"fullName":"CloudAuthAnalytics sendCloudSignInSucceeded should emit event with web flow","status":"passed","title":"should emit event with web flow"},{"ancestorTitles":["CloudAuthAnalytics","sendCloudSignInSucceeded"],"duration":1,"failureMessages":[],"fullName":"CloudAuthAnalytics sendCloudSignInSucceeded should emit event without flow and not fail","status":"passed","title":"should emit event without flow and not fail"},{"ancestorTitles":["CloudAuthAnalytics","sendGetRECloudSubsFailedEvent"],"duration":2,"failureMessages":[],"fullName":"CloudAuthAnalytics sendGetRECloudSubsFailedEvent should emit error event with deep link flow","status":"passed","title":"should emit error event with deep link flow"},{"ancestorTitles":["CloudAuthAnalytics","sendGetRECloudSubsFailedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAuthAnalytics sendGetRECloudSubsFailedEvent should emit error event with web flow","status":"passed","title":"should emit error event with web flow"},{"ancestorTitles":["CloudAuthAnalytics","sendGetRECloudSubsFailedEvent"],"duration":1,"failureMessages":[],"fullName":"CloudAuthAnalytics sendGetRECloudSubsFailedEvent should not fail if no exception passed","status":"passed","title":"should not fail if no exception passed"},{"ancestorTitles":["CloudAuthAnalytics","sendGetRECloudSubsFailedEvent"],"duration":15,"failureMessages":[],"fullName":"CloudAuthAnalytics sendGetRECloudSubsFailedEvent should emit error event without flow and not fail","status":"passed","title":"should emit error event without flow and not fail"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501273711,"runtime":2930,"slow":false,"start":1733501270781},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/repositories/local.features-config.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalFeaturesConfigRepository","generateControlNumber"],"duration":1281,"failureMessages":[],"fullName":"LocalFeaturesConfigRepository generateControlNumber check controlNumber generation","status":"passed","title":"check controlNumber generation"},{"ancestorTitles":["LocalFeaturesConfigRepository","getOrCreate"],"duration":3,"failureMessages":[],"fullName":"LocalFeaturesConfigRepository getOrCreate should return existing config","status":"passed","title":"should return existing config"},{"ancestorTitles":["LocalFeaturesConfigRepository","getOrCreate"],"duration":2,"failureMessages":[],"fullName":"LocalFeaturesConfigRepository getOrCreate should create new config","status":"passed","title":"should create new config"},{"ancestorTitles":["LocalFeaturesConfigRepository","getOrCreate"],"duration":2,"failureMessages":[],"fullName":"LocalFeaturesConfigRepository getOrCreate should fail to create with unique constraint and return existing","status":"passed","title":"should fail to create with unique constraint and return existing"},{"ancestorTitles":["LocalFeaturesConfigRepository","getOrCreate"],"duration":8,"failureMessages":[],"fullName":"LocalFeaturesConfigRepository getOrCreate should fail when failed to create new and error is not unique constraint","status":"passed","title":"should fail when failed to create new and error is not unique constraint"},{"ancestorTitles":["LocalFeaturesConfigRepository","update"],"duration":3,"failureMessages":[],"fullName":"LocalFeaturesConfigRepository update should update config","status":"passed","title":"should update config"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501274461,"runtime":563,"slow":false,"start":1733501273898},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/subscription/cloud-subscription.capi.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudSubscriptionCapiService","getSubscriptions"],"duration":4,"failureMessages":[],"fullName":"CloudSubscriptionCapiService getSubscriptions successfully get cloud subscriptions","status":"passed","title":"successfully get cloud subscriptions"},{"ancestorTitles":["CloudSubscriptionCapiService","getSubscriptions"],"duration":16,"failureMessages":[],"fullName":"CloudSubscriptionCapiService getSubscriptions throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionCapiService","getSubscription"],"duration":2,"failureMessages":[],"fullName":"CloudSubscriptionCapiService getSubscription successfully get cloud subscription","status":"passed","title":"successfully get cloud subscription"},{"ancestorTitles":["CloudSubscriptionCapiService","getSubscription"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionCapiService getSubscription throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionCapiService","getSubscriptionsPlans"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionCapiService getSubscriptionsPlans successfully get cloud subscriptions plans","status":"passed","title":"successfully get cloud subscriptions plans"},{"ancestorTitles":["CloudSubscriptionCapiService","getSubscriptionsPlans"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionCapiService getSubscriptionsPlans throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudSubscriptionCapiService","createFreeSubscription"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionCapiService createFreeSubscription successfully initialize cloud subscription creation","status":"passed","title":"successfully initialize cloud subscription creation"},{"ancestorTitles":["CloudSubscriptionCapiService","createFreeSubscription"],"duration":1,"failureMessages":[],"fullName":"CloudSubscriptionCapiService createFreeSubscription throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501275354,"runtime":705,"slow":false,"start":1733501274649},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cluster-monitor/strategies/abstract.info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AbstractInfoStrategy","getClusterInfo"],"duration":7,"failureMessages":[],"fullName":"AbstractInfoStrategy getClusterInfo should return cluster info","status":"passed","title":"should return cluster info"},{"ancestorTitles":["AbstractInfoStrategy","getClusterDetails"],"duration":4,"failureMessages":[],"fullName":"AbstractInfoStrategy getClusterDetails should return cluster info","status":"passed","title":"should return cluster info"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501276898,"runtime":1296,"slow":false,"start":1733501275602},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/providers/auth/local.ai-query-auth.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalAiQueryAuthProvider","getAuthData"],"duration":4,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider getAuthData should get auth data","status":"passed","title":"should get auth data"},{"ancestorTitles":["LocalAiQueryAuthProvider","getAuthData"],"duration":13,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider getAuthData throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["LocalAiQueryAuthProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider callWithAuthRetry should return result from 1st attempt","status":"passed","title":"should return result from 1st attempt"},{"ancestorTitles":["LocalAiQueryAuthProvider","callWithAuthRetry"],"duration":2,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider callWithAuthRetry should not fail when session invalidation throw an error","status":"passed","title":"should not fail when session invalidation throw an error"},{"ancestorTitles":["LocalAiQueryAuthProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider callWithAuthRetry should throw an error from 1st attempt if not CloudApiUnauthorizedException (and keep session)","status":"passed","title":"should throw an error from 1st attempt if not CloudApiUnauthorizedException (and keep session)"},{"ancestorTitles":["LocalAiQueryAuthProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider callWithAuthRetry should throw CloudApiForbiddenException error from 2nd attempt (by default)","status":"passed","title":"should throw CloudApiForbiddenException error from 2nd attempt (by default)"},{"ancestorTitles":["LocalAiQueryAuthProvider","callWithAuthRetry"],"duration":1,"failureMessages":[],"fullName":"LocalAiQueryAuthProvider callWithAuthRetry should throw CloudApiForbiddenException error from 3rd attempt (custom attempts)","status":"passed","title":"should throw CloudApiForbiddenException error from 3rd attempt (custom attempts)"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501277746,"runtime":636,"slow":false,"start":1733501277110},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/notification/providers/global-notification.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["GlobalNotificationProvider","init"],"duration":23,"failureMessages":[],"fullName":"GlobalNotificationProvider init should should init and set interval only once","status":"passed","title":"should should init and set interval only once"},{"ancestorTitles":["GlobalNotificationProvider","sync"],"duration":5,"failureMessages":[],"fullName":"GlobalNotificationProvider sync should add new notifications and update existing one and delete one","status":"passed","title":"should add new notifications and update existing one and delete one"},{"ancestorTitles":["GlobalNotificationProvider","getNotificationsFromRemote"],"duration":1,"failureMessages":[],"fullName":"GlobalNotificationProvider getNotificationsFromRemote should add new notifications and update existing one and delete one","status":"passed","title":"should add new notifications and update existing one and delete one"},{"ancestorTitles":["GlobalNotificationProvider","getNotificationsFromRemote"],"duration":3,"failureMessages":[],"fullName":"GlobalNotificationProvider getNotificationsFromRemote should throw an error when incorrect data passed","status":"passed","title":"should throw an error when incorrect data passed"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501278556,"runtime":605,"slow":false,"start":1733501277951},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/server/local.server.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalServerService","init"],"duration":4,"failureMessages":[],"fullName":"LocalServerService init should create server instance on first application launch","status":"passed","title":"should create server instance on first application launch"},{"ancestorTitles":["LocalServerService","init"],"duration":1,"failureMessages":[],"fullName":"LocalServerService init should not create server instance on the second application launch","status":"passed","title":"should not create server instance on the second application launch"},{"ancestorTitles":["LocalServerService","getInfo"],"duration":2,"failureMessages":[],"fullName":"LocalServerService getInfo should return server info","status":"passed","title":"should return server info"},{"ancestorTitles":["LocalServerService","getInfo"],"duration":1,"failureMessages":[],"fullName":"LocalServerService getInfo should throw ServerInfoNotFoundException","status":"passed","title":"should throw ServerInfoNotFoundException"},{"ancestorTitles":["LocalServerService","getInfo"],"duration":13,"failureMessages":[],"fullName":"LocalServerService getInfo should throw InternalServerError","status":"passed","title":"should throw InternalServerError"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501279991,"runtime":1182,"slow":false,"start":1733501278809},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-import/ssh-import.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SshImportService","processSshOptions"],"duration":4,"failureMessages":[],"fullName":"SshImportService processSshOptions should successfully process ssh basic","status":"passed","title":"should successfully process ssh basic"},{"ancestorTitles":["SshImportService","processSshOptions"],"duration":2,"failureMessages":[],"fullName":"SshImportService processSshOptions should successfully process ssh PKP","status":"passed","title":"should successfully process ssh PKP"},{"ancestorTitles":["SshImportService","processSshOptions"],"duration":1,"failureMessages":[],"fullName":"SshImportService processSshOptions should successfully process ssh PKP (from path)","status":"passed","title":"should successfully process ssh PKP (from path)"},{"ancestorTitles":["SshImportService","processSshOptions"],"duration":1,"failureMessages":[],"fullName":"SshImportService processSshOptions should throw an error when invalid privateKey body provided","status":"passed","title":"should throw an error when invalid privateKey body provided"},{"ancestorTitles":["SshImportService","processSshOptions"],"duration":1,"failureMessages":[],"fullName":"SshImportService processSshOptions should throw an error when ssh agent provided","status":"passed","title":"should throw an error when ssh agent provided"},{"ancestorTitles":["SshImportService"],"duration":1,"failureMessages":[],"fullName":"SshImportService should throw an error when no username defined","status":"passed","title":"should throw an error when no username defined"},{"ancestorTitles":["SshImportService"],"duration":1,"failureMessages":[],"fullName":"SshImportService should throw an error when no port defined","status":"passed","title":"should throw an error when no port defined"}]},{"numFailingTests":0,"numPassingTests":37,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501280314,"runtime":134,"slow":false,"start":1733501280180},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/recommendation-helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Recommendation helper","isRedisearchModule"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper isRedisearchModule for input: [ [Object], [Object] ] (reply), should be output: false","status":"passed","title":"for input: [ [Object], [Object] ] (reply), should be output: false"},{"ancestorTitles":["Recommendation helper","isRedisearchModule"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper isRedisearchModule for input: [ [Object], [Object] ] (reply), should be output: false","status":"passed","title":"for input: [ [Object], [Object] ] (reply), should be output: false"},{"ancestorTitles":["Recommendation helper","isRedisearchModule"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper isRedisearchModule for input: [ [Object], [Object], [Object] ] (reply), should be output: true","status":"passed","title":"for input: [ [Object], [Object], [Object] ] (reply), should be output: true"},{"ancestorTitles":["Recommendation helper","isRedisearchModule"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper isRedisearchModule for input: [ [Object], [Object], [Object] ] (reply), should be output: true","status":"passed","title":"for input: [ [Object], [Object], [Object] ] (reply), should be output: true"},{"ancestorTitles":["Recommendation helper","isRedisearchModule"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper isRedisearchModule for input: [ [Object], [Object], [Object] ] (reply), should be output: true","status":"passed","title":"for input: [ [Object], [Object], [Object] ] (reply), should be output: true"},{"ancestorTitles":["Recommendation helper","isRedisearchModule"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper isRedisearchModule for input: [ [Object], [Object], [Object] ] (reply), should be output: true","status":"passed","title":"for input: [ [Object], [Object], [Object] ] (reply), should be output: true"},{"ancestorTitles":["Recommendation helper","sortRecommendations"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper sortRecommendations {\"input\":[],\"expected\":[]}","status":"passed","title":"{\"input\":[],\"expected\":[]}"},{"ancestorTitles":["Recommendation helper","sortRecommendations"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper sortRecommendations {\"input\":[{\"name\":\"luaScript\"},{\"name\":\"bigSets\"},{\"name\":\"searchIndexes\"}],\"expected\":[{\"name\":\"searchIndexes\"},{\"name\":\"bigSets\"},{\"name\":\"luaScript\"}]}","status":"passed","title":"{\"input\":[{\"name\":\"luaScript\"},{\"name\":\"bigSets\"},{\"name\":\"searchIndexes\"}],\"expected\":[{\"name\":\"searchIndexes\"},{\"name\":\"bigSets\"},{\"name\":\"luaScript\"}]}"},{"ancestorTitles":["Recommendation helper","sortRecommendations"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper sortRecommendations {\"input\":[{\"name\":\"luaScript\"},{\"name\":\"bigSets\"},{\"name\":\"searchJSON\"}],\"expected\":[{\"name\":\"searchJSON\"},{\"name\":\"bigSets\"},{\"name\":\"luaScript\"}]}","status":"passed","title":"{\"input\":[{\"name\":\"luaScript\"},{\"name\":\"bigSets\"},{\"name\":\"searchJSON\"}],\"expected\":[{\"name\":\"searchJSON\"},{\"name\":\"bigSets\"},{\"name\":\"luaScript\"}]}"},{"ancestorTitles":["Recommendation helper","sortRecommendations"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper sortRecommendations {\"input\":[{\"name\":\"luaScript\"},{\"name\":\"bigSets\"},{\"name\":\"searchIndexes\"},{\"name\":\"searchJSON\"},{\"name\":\"useSmallerKeys\"},{\"name\":\"RTS\"}],\"expected\":[{\"name\":\"searchJSON\"},{\"name\":\"searchIndexes\"},{\"name\":\"RTS\"},{\"name\":\"bigSets\"},{\"name\":\"luaScript\"},{\"name\":\"useSmallerKeys\"}]}","status":"passed","title":"{\"input\":[{\"name\":\"luaScript\"},{\"name\":\"bigSets\"},{\"name\":\"searchIndexes\"},{\"name\":\"searchJSON\"},{\"name\":\"useSmallerKeys\"},{\"name\":\"RTS\"}],\"expected\":[{\"name\":\"searchJSON\"},{\"name\":\"searchIndexes\"},{\"name\":\"RTS\"},{\"name\":\"bigSets\"},{\"name\":\"luaScript\"},{\"name\":\"useSmallerKeys\"}]}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891234\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891234\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891234567\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891234567\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891234567891\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891234567891\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891.2\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891.2\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891:12\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891:12\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891a12\",\"expected\":true}","status":"passed","title":"{\"input\":\"1234567891a12\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"10-10-2020\",\"expected\":true}","status":"passed","title":"{\"input\":\"10-10-2020\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1\",\"expected\":false}","status":"passed","title":"{\"input\":\"1\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"123\",\"expected\":false}","status":"passed","title":"{\"input\":\"123\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"12345678911\",\"expected\":false}","status":"passed","title":"{\"input\":\"12345678911\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"12345678912345\",\"expected\":false}","status":"passed","title":"{\"input\":\"12345678912345\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"12345678912345678\",\"expected\":false}","status":"passed","title":"{\"input\":\"12345678912345678\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891.2.2\",\"expected\":false}","status":"passed","title":"{\"input\":\"1234567891.2.2\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"1234567891asd\",\"expected\":false}","status":"passed","title":"{\"input\":\"1234567891asd\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"-1234567891\",\"expected\":false}","status":"passed","title":"{\"input\":\"-1234567891\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"inf\",\"expected\":false}","status":"passed","title":"{\"input\":\"inf\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkTimestamp"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkTimestamp {\"input\":\"-inf\",\"expected\":false}","status":"passed","title":"{\"input\":\"-inf\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"\",\"expected\":false}","status":"passed","title":"{\"input\":\"\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"fdKx\",\"expected\":true}","status":"passed","title":"{\"input\":\"fdKx\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"lsE\",\"expected\":true}","status":"passed","title":"{\"input\":\"lsE\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"fdkx\",\"expected\":false}","status":"passed","title":"{\"input\":\"fdkx\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":8,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"lse\",\"expected\":false}","status":"passed","title":"{\"input\":\"lse\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":1,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"KfdE\",\"expected\":true}","status":"passed","title":"{\"input\":\"KfdE\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"1\",\"expected\":false}","status":"passed","title":"{\"input\":\"1\",\"expected\":false}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"K\",\"expected\":true}","status":"passed","title":"{\"input\":\"K\",\"expected\":true}"},{"ancestorTitles":["Recommendation helper","checkKeyspaceNotification"],"duration":0,"failureMessages":[],"fullName":"Recommendation helper checkKeyspaceNotification {\"input\":\"E\",\"expected\":true}","status":"passed","title":"{\"input\":\"E\",\"expected\":true}"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501280879,"runtime":558,"slow":false,"start":1733501280321},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/database/cloud-database.capi.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudDatabaseCapiService","getDatabase"],"duration":5,"failureMessages":[],"fullName":"CloudDatabaseCapiService getDatabase successfully get cloud databases","status":"passed","title":"successfully get cloud databases"},{"ancestorTitles":["CloudDatabaseCapiService","getDatabase"],"duration":14,"failureMessages":[],"fullName":"CloudDatabaseCapiService getDatabase throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudDatabaseCapiService","getDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseCapiService getDatabases successfully get cloud databases","status":"passed","title":"successfully get cloud databases"},{"ancestorTitles":["CloudDatabaseCapiService","getDatabases"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseCapiService getDatabases successfully get cloud fixed databases","status":"passed","title":"successfully get cloud fixed databases"},{"ancestorTitles":["CloudDatabaseCapiService","getDatabases"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseCapiService getDatabases throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudDatabaseCapiService","createFreeDatabase"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseCapiService createFreeDatabase successfully create free cloud database","status":"passed","title":"successfully create free cloud database"},{"ancestorTitles":["CloudDatabaseCapiService","createFreeDatabase"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseCapiService createFreeDatabase throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501281628,"runtime":556,"slow":false,"start":1733501281072},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/session/providers/storage/in-memory.session.storage.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["InMemorySessionStorage","createSession"],"duration":4,"failureMessages":[],"fullName":"InMemorySessionStorage createSession Should create new session if not exists","status":"passed","title":"Should create new session if not exists"},{"ancestorTitles":["InMemorySessionStorage","createSession"],"duration":1,"failureMessages":[],"fullName":"InMemorySessionStorage createSession Should create new session if not exists 2 times","status":"passed","title":"Should create new session if not exists 2 times"},{"ancestorTitles":["InMemorySessionStorage","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"InMemorySessionStorage updateSessionData Should not affect existing data","status":"passed","title":"Should not affect existing data"},{"ancestorTitles":["InMemorySessionStorage","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"InMemorySessionStorage updateSessionData Should add custom data","status":"passed","title":"Should add custom data"},{"ancestorTitles":["InMemorySessionStorage","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"InMemorySessionStorage updateSessionData Should return null if no session found and not affect existing sessions","status":"passed","title":"Should return null if no session found and not affect existing sessions"},{"ancestorTitles":["InMemorySessionStorage","deleteSession + getSession"],"duration":2,"failureMessages":[],"fullName":"InMemorySessionStorage deleteSession + getSession should delete session by id","status":"passed","title":"should delete session by id"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501283023,"runtime":1162,"slow":false,"start":1733501281861},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/bulk-actions.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkActionsService","create"],"duration":3,"failureMessages":[],"fullName":"BulkActionsService create should create and return overview","status":"passed","title":"should create and return overview"},{"ancestorTitles":["BulkActionsService","get"],"duration":1,"failureMessages":[],"fullName":"BulkActionsService get should get and return overview","status":"passed","title":"should get and return overview"},{"ancestorTitles":["BulkActionsService","abort"],"duration":1,"failureMessages":[],"fullName":"BulkActionsService abort should abort and return overview","status":"passed","title":"should abort and return overview"},{"ancestorTitles":["BulkActionsService","disconnect"],"duration":1,"failureMessages":[],"fullName":"BulkActionsService disconnect should call abortUsersBulkActions on disconnect","status":"passed","title":"should call abortUsersBulkActions on disconnect"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501283300,"runtime":60,"slow":false,"start":1733501283240},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/common/utils/merge.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{},\"obj2\":{},\"result\":{}}","status":"passed","title":"{\"obj1\":{},\"obj2\":{},\"result\":{}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":1},\"obj2\":{\"value\":2},\"result\":{\"value\":2}}","status":"passed","title":"{\"obj1\":{\"value\":1},\"obj2\":{\"value\":2},\"result\":{\"value\":2}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":1},\"obj2\":{\"value\":1.0000001},\"result\":{\"value\":1.0000001}}","status":"passed","title":"{\"obj1\":{\"value\":1},\"obj2\":{\"value\":1.0000001},\"result\":{\"value\":1.0000001}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":1},\"obj2\":{\"value\":\"2\"},\"result\":{\"value\":\"2\"}}","status":"passed","title":"{\"obj1\":{\"value\":1},\"obj2\":{\"value\":\"2\"},\"result\":{\"value\":\"2\"}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":1},\"obj2\":{},\"result\":{\"value\":1}}","status":"passed","title":"{\"obj1\":{\"value\":1},\"obj2\":{},\"result\":{\"value\":1}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":1},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}","status":"passed","title":"{\"obj1\":{\"value\":1},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":0},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}","status":"passed","title":"{\"obj1\":{\"value\":0},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}"},{"ancestorTitles":["deepMerge"],"duration":6,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":1},\"result\":{\"value\":1}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":1},\"result\":{\"value\":1}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":true},\"result\":{\"value\":true}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":true},\"result\":{\"value\":true}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":\"1\"},\"result\":{\"value\":\"1\"}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":\"1\"},\"result\":{\"value\":\"1\"}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":false},\"result\":{\"value\":false}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":false},\"result\":{\"value\":false}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":1},\"result\":{\"value\":1}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":1},\"result\":{\"value\":1}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":true},\"result\":{\"value\":true}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":true},\"result\":{\"value\":true}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":false},\"obj2\":{\"value\":\"1\"},\"result\":{\"value\":\"1\"}}","status":"passed","title":"{\"obj1\":{\"value\":false},\"obj2\":{\"value\":\"1\"},\"result\":{\"value\":\"1\"}}"},{"ancestorTitles":["deepMerge"],"duration":1,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":\"1\"},\"obj2\":{\"value\":\"2\"},\"result\":{\"value\":\"2\"}}","status":"passed","title":"{\"obj1\":{\"value\":\"1\"},\"obj2\":{\"value\":\"2\"},\"result\":{\"value\":\"2\"}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{},\"obj2\":{\"value\":2},\"result\":{\"value\":2}}","status":"passed","title":"{\"obj1\":{},\"obj2\":{\"value\":2},\"result\":{\"value\":2}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}","status":"passed","title":"{\"obj1\":{},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":null},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}","status":"passed","title":"{\"obj1\":{\"value\":null},\"obj2\":{\"value\":null},\"result\":{\"value\":null}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{},\"obj2\":{\"value\":2},\"result\":{\"value\":2}}","status":"passed","title":"{\"obj1\":{},\"obj2\":{\"value\":2},\"result\":{\"value\":2}}"},{"ancestorTitles":["deepMerge"],"duration":1,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":{}},\"obj2\":{\"value\":1},\"result\":{\"value\":1}}","status":"passed","title":"{\"obj1\":{\"value\":{}},\"obj2\":{\"value\":1},\"result\":{\"value\":1}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":[]},\"obj2\":{\"value\":0},\"result\":{\"value\":0}}","status":"passed","title":"{\"obj1\":{\"value\":[]},\"obj2\":{\"value\":0},\"result\":{\"value\":0}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":[]},\"obj2\":{\"value\":[1]},\"result\":{\"value\":[1]}}","status":"passed","title":"{\"obj1\":{\"value\":[]},\"obj2\":{\"value\":[1]},\"result\":{\"value\":[1]}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":[]},\"obj2\":{},\"result\":{\"value\":[]}}","status":"passed","title":"{\"obj1\":{\"value\":[]},\"obj2\":{},\"result\":{\"value\":[]}}"},{"ancestorTitles":["deepMerge"],"duration":1,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":{\"name\":1}},\"obj2\":[],\"result\":{\"value\":{\"name\":1}}}","status":"passed","title":"{\"obj1\":{\"value\":{\"name\":1}},\"obj2\":[],\"result\":{\"value\":{\"name\":1}}}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":[]},\"obj2\":{\"value\":{\"name\":1}},\"result\":{\"value\":{\"name\":1}}}","status":"passed","title":"{\"obj1\":{\"value\":[]},\"obj2\":{\"value\":{\"name\":1}},\"result\":{\"value\":{\"name\":1}}}"},{"ancestorTitles":["deepMerge"],"duration":1,"failureMessages":[],"fullName":"deepMerge {\"obj1\":[1,2,3],\"obj2\":[3,5,6],\"result\":[3,5,6]}","status":"passed","title":"{\"obj1\":[1,2,3],\"obj2\":[3,5,6],\"result\":[3,5,6]}"},{"ancestorTitles":["deepMerge"],"duration":0,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":1,\"value2\":\"string\",\"value3\":null,\"nested\":{\"nestedValue1\":1,\"nestedValue2\":2}},\"obj2\":{\"value3\":1,\"value4\":null,\"value5\":\"new\",\"nested\":{\"nestedValue2\":4,\"nestedValue3\":\"value\"}},\"result\":{\"value\":1,\"value2\":\"string\",\"value3\":1,\"value4\":null,\"value5\":\"new\",\"nested\":{\"nestedValue1\":1,\"nestedValue2\":4,\"nestedValue3\":\"value\"}}}","status":"passed","title":"{\"obj1\":{\"value\":1,\"value2\":\"string\",\"value3\":null,\"nested\":{\"nestedValue1\":1,\"nestedValue2\":2}},\"obj2\":{\"value3\":1,\"value4\":null,\"value5\":\"new\",\"nested\":{\"nestedValue2\":4,\"nestedValue3\":\"value\"}},\"result\":{\"value\":1,\"value2\":\"string\",\"value3\":1,\"value4\":null,\"value5\":\"new\",\"nested\":{\"nestedValue1\":1,\"nestedValue2\":4,\"nestedValue3\":\"value\"}}}"},{"ancestorTitles":["deepMerge"],"duration":1,"failureMessages":[],"fullName":"deepMerge {\"obj1\":{\"value\":0,\"value2\":\"\",\"value3\":[],\"value4\":{},\"nested\":{\"nestedValue2\":{\"key1\":null,\"key3\":{},\"key4\":[]},\"nestedValue3\":\"value\"}},\"obj2\":{\"value\":\"value\",\"value3\":{\"name\":1},\"value4\":[1,2,3],\"value5\":null,\"nested\":{\"nestedValue1\":{\"key1\":0,\"key3\":null},\"nestedValue2\":{\"key1\":\"value\",\"key3\":{\"name\":1},\"key5\":null,\"key6\":1},\"nestedValue4\":1.2}},\"result\":{\"value\":\"value\",\"value2\":\"\",\"value3\":{\"name\":1},\"value4\":[1,2,3],\"value5\":null,\"nested\":{\"nestedValue1\":{\"key1\":0,\"key3\":null},\"nestedValue2\":{\"key1\":\"value\",\"key3\":{\"name\":1},\"key4\":[],\"key5\":null,\"key6\":1},\"nestedValue3\":\"value\",\"nestedValue4\":1.2}}}","status":"passed","title":"{\"obj1\":{\"value\":0,\"value2\":\"\",\"value3\":[],\"value4\":{},\"nested\":{\"nestedValue2\":{\"key1\":null,\"key3\":{},\"key4\":[]},\"nestedValue3\":\"value\"}},\"obj2\":{\"value\":\"value\",\"value3\":{\"name\":1},\"value4\":[1,2,3],\"value5\":null,\"nested\":{\"nestedValue1\":{\"key1\":0,\"key3\":null},\"nestedValue2\":{\"key1\":\"value\",\"key3\":{\"name\":1},\"key5\":null,\"key6\":1},\"nestedValue4\":1.2}},\"result\":{\"value\":\"value\",\"value2\":\"\",\"value3\":{\"name\":1},\"value4\":[1,2,3],\"value5\":null,\"nested\":{\"nestedValue1\":{\"key1\":0,\"key3\":null},\"nestedValue2\":{\"key1\":\"value\",\"key3\":{\"name\":1},\"key4\":[],\"key5\":null,\"key6\":1},\"nestedValue3\":\"value\",\"nestedValue4\":1.2}}}"}]},{"numFailingTests":0,"numPassingTests":42,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501283843,"runtime":539,"slow":false,"start":1733501283304},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/analytics-helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["getRangeForNumber"],"duration":1,"failureMessages":[],"fullName":"getRangeForNumber should be output: undefined for input: null ","status":"passed","title":"should be output: undefined for input: null "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: undefined for input: undefined ","status":"passed","title":"should be output: undefined for input: undefined "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 0 - 500 000 for input: 0 ","status":"passed","title":"should be output: 0 - 500 000 for input: 0 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 0 - 500 000 for input: 100 ","status":"passed","title":"should be output: 0 - 500 000 for input: 100 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 0 - 500 000 for input: 500000 ","status":"passed","title":"should be output: 0 - 500 000 for input: 500000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 500 001 - 1 000 000 for input: 500001 ","status":"passed","title":"should be output: 500 001 - 1 000 000 for input: 500001 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 500 001 - 1 000 000 for input: 600000 ","status":"passed","title":"should be output: 500 001 - 1 000 000 for input: 600000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 500 001 - 1 000 000 for input: 1000000 ","status":"passed","title":"should be output: 500 001 - 1 000 000 for input: 1000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":1,"failureMessages":[],"fullName":"getRangeForNumber should be output: 1 000 001 - 10 000 000 for input: 1000001 ","status":"passed","title":"should be output: 1 000 001 - 10 000 000 for input: 1000001 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 1 000 001 - 10 000 000 for input: 2000000 ","status":"passed","title":"should be output: 1 000 001 - 10 000 000 for input: 2000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 1 000 001 - 10 000 000 for input: 10000000 ","status":"passed","title":"should be output: 1 000 001 - 10 000 000 for input: 10000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 10 000 001 - 50 000 000 for input: 10000001 ","status":"passed","title":"should be output: 10 000 001 - 50 000 000 for input: 10000001 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 10 000 001 - 50 000 000 for input: 20000000 ","status":"passed","title":"should be output: 10 000 001 - 50 000 000 for input: 20000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 10 000 001 - 50 000 000 for input: 50000000 ","status":"passed","title":"should be output: 10 000 001 - 50 000 000 for input: 50000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 50 000 001 - 100 000 000 for input: 50000001 ","status":"passed","title":"should be output: 50 000 001 - 100 000 000 for input: 50000001 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 50 000 001 - 100 000 000 for input: 60000000 ","status":"passed","title":"should be output: 50 000 001 - 100 000 000 for input: 60000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 50 000 001 - 100 000 000 for input: 100000000 ","status":"passed","title":"should be output: 50 000 001 - 100 000 000 for input: 100000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 100 000 001 - 1 000 000 000 for input: 100000001 ","status":"passed","title":"should be output: 100 000 001 - 1 000 000 000 for input: 100000001 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 100 000 001 - 1 000 000 000 for input: 200000000 ","status":"passed","title":"should be output: 100 000 001 - 1 000 000 000 for input: 200000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":1,"failureMessages":[],"fullName":"getRangeForNumber should be output: 100 000 001 - 1 000 000 000 for input: 1000000000 ","status":"passed","title":"should be output: 100 000 001 - 1 000 000 000 for input: 1000000000 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 1 000 000 001 + for input: 1000000001 ","status":"passed","title":"should be output: 1 000 000 001 + for input: 1000000001 "},{"ancestorTitles":["getRangeForNumber"],"duration":0,"failureMessages":[],"fullName":"getRangeForNumber should be output: 1 000 000 001 + for input: 2000000000 ","status":"passed","title":"should be output: 1 000 000 001 + for input: 2000000000 "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":null,\"misses\":null} ","status":"passed","title":"should be output: undefined for input: {\"hits\":null,\"misses\":null} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":1,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {} ","status":"passed","title":"should be output: undefined for input: {} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":1} ","status":"passed","title":"should be output: undefined for input: {\"hits\":1} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"misses\":1} ","status":"passed","title":"should be output: undefined for input: {\"misses\":1} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":null,\"misses\":1} ","status":"passed","title":"should be output: undefined for input: {\"hits\":null,\"misses\":1} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":1,\"misses\":null} ","status":"passed","title":"should be output: undefined for input: {\"hits\":1,\"misses\":null} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":null,\"misses\":null} ","status":"passed","title":"should be output: undefined for input: {\"hits\":null,\"misses\":null} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":null,\"misses\":null} ","status":"passed","title":"should be output: undefined for input: {\"hits\":null,\"misses\":null} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":null,\"misses\":\"string\"} ","status":"passed","title":"should be output: undefined for input: {\"hits\":null,\"misses\":\"string\"} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: undefined for input: {\"hits\":\"string\",\"misses\":\"string\"} ","status":"passed","title":"should be output: undefined for input: {\"hits\":\"string\",\"misses\":\"string\"} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 0.5 for input: {\"hits\":2,\"misses\":2} ","status":"passed","title":"should be output: 0.5 for input: {\"hits\":2,\"misses\":2} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 0.3333333333333333 for input: {\"hits\":1,\"misses\":2} ","status":"passed","title":"should be output: 0.3333333333333333 for input: {\"hits\":1,\"misses\":2} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":1,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 1 for input: {\"hits\":62409,\"misses\":0} ","status":"passed","title":"should be output: 1 for input: {\"hits\":62409,\"misses\":0} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 0.3626785527493346 for input: {\"hits\":62409,\"misses\":109669} ","status":"passed","title":"should be output: 0.3626785527493346 for input: {\"hits\":62409,\"misses\":109669} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 0.3626785527493346 for input: {\"hits\":\"62409\",\"misses\":\"109669\"} ","status":"passed","title":"should be output: 0.3626785527493346 for input: {\"hits\":\"62409\",\"misses\":\"109669\"} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":1,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 0.3626785527493346 for input: {\"hits\":\"62409\",\"misses\":109669} ","status":"passed","title":"should be output: 0.3626785527493346 for input: {\"hits\":\"62409\",\"misses\":109669} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 1 for input: {\"hits\":\"0\",\"misses\":109669} ","status":"passed","title":"should be output: 1 for input: {\"hits\":\"0\",\"misses\":109669} "},{"ancestorTitles":["calculateRedisHitRatio"],"duration":0,"failureMessages":[],"fullName":"calculateRedisHitRatio should be output: 1 for input: {\"hits\":0,\"misses\":109669} ","status":"passed","title":"should be output: 1 for input: {\"hits\":0,\"misses\":109669} "},{"ancestorTitles":["getAnalyticsDataFromIndexInfo"],"duration":1,"failureMessages":[],"fullName":"getAnalyticsDataFromIndexInfo should return proper analytics data","status":"passed","title":"should return proper analytics data"},{"ancestorTitles":["getAnalyticsDataFromIndexInfo"],"duration":1,"failureMessages":[],"fullName":"getAnalyticsDataFromIndexInfo should return proper analytics data when buffers received","status":"passed","title":"should return proper analytics data when buffers received"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501284571,"runtime":547,"slow":false,"start":1733501284024},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-import/database-import.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseImportAnalytics","sendImportResults"],"duration":5,"failureMessages":[],"fullName":"DatabaseImportAnalytics sendImportResults should emit 2 events with success and failed results","status":"passed","title":"should emit 2 events with success and failed results"},{"ancestorTitles":["DatabaseImportAnalytics","sendImportFailed"],"duration":1,"failureMessages":[],"fullName":"DatabaseImportAnalytics sendImportFailed should emit 1 event with \"Error\" cause","status":"passed","title":"should emit 1 event with \"Error\" cause"},{"ancestorTitles":["DatabaseImportAnalytics","sendImportFailed"],"duration":1,"failureMessages":[],"fullName":"DatabaseImportAnalytics sendImportFailed should emit 1 event with \"UnableToParseDatabaseImportFileException\" cause","status":"passed","title":"should emit 1 event with \"UnableToParseDatabaseImportFileException\" cause"},{"ancestorTitles":["DatabaseImportAnalytics","sendImportFailed"],"duration":1,"failureMessages":[],"fullName":"DatabaseImportAnalytics sendImportFailed should emit 1 event with \"NoDatabaseImportFileProvidedException\" cause","status":"passed","title":"should emit 1 event with \"NoDatabaseImportFileProvidedException\" cause"},{"ancestorTitles":["DatabaseImportAnalytics","sendImportFailed"],"duration":1,"failureMessages":[],"fullName":"DatabaseImportAnalytics sendImportFailed should emit 1 event with \"SizeLimitExceededDatabaseImportFileException\" cause","status":"passed","title":"should emit 1 event with \"SizeLimitExceededDatabaseImportFileException\" cause"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501285986,"runtime":1173,"slow":false,"start":1733501284813},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/commands/commands.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CommandsService","onModuleInit"],"duration":4,"failureMessages":[],"fullName":"CommandsService onModuleInit should trigger updateLatestJson function","status":"passed","title":"should trigger updateLatestJson function"},{"ancestorTitles":["CommandsService","getAll"],"duration":2,"failureMessages":[],"fullName":"CommandsService getAll Should return merged commands into one","status":"passed","title":"Should return merged commands into one"},{"ancestorTitles":["CommandsService","getCommandsGroups"],"duration":1,"failureMessages":[],"fullName":"CommandsService getCommandsGroups Should return commands groups","status":"passed","title":"Should return commands groups"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501287009,"runtime":830,"slow":false,"start":1733501286179},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/keys-scanner.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseAnalysisProvider","create"],"duration":33,"failureMessages":[],"fullName":"DatabaseAnalysisProvider create should process new entity","status":"passed","title":"should process new entity"},{"ancestorTitles":["DatabaseAnalysisProvider","get"],"duration":6,"failureMessages":[],"fullName":"DatabaseAnalysisProvider get should get analysis","status":"passed","title":"should get analysis"},{"ancestorTitles":["DatabaseAnalysisProvider","get"],"duration":17,"failureMessages":[],"fullName":"DatabaseAnalysisProvider get should return null fields in case of decryption errors","status":"passed","title":"should return null fields in case of decryption errors"},{"ancestorTitles":["DatabaseAnalysisProvider","get"],"duration":5,"failureMessages":[],"fullName":"DatabaseAnalysisProvider get should throw an error","status":"passed","title":"should throw an error"},{"ancestorTitles":["DatabaseAnalysisProvider","list"],"duration":4,"failureMessages":[],"fullName":"DatabaseAnalysisProvider list should get list of analysis","status":"passed","title":"should get list of analysis"},{"ancestorTitles":["DatabaseAnalysisProvider","cleanupDatabaseHistory"],"duration":4,"failureMessages":[],"fullName":"DatabaseAnalysisProvider cleanupDatabaseHistory Should not return anything on cleanup","status":"passed","title":"Should not return anything on cleanup"},{"ancestorTitles":["DatabaseAnalysisProvider","recommendationVote"],"duration":7,"failureMessages":[],"fullName":"DatabaseAnalysisProvider recommendationVote should return updated database analysis","status":"passed","title":"should return updated database analysis"},{"ancestorTitles":["DatabaseAnalysisProvider","recommendationVote"],"duration":7,"failureMessages":[],"fullName":"DatabaseAnalysisProvider recommendationVote should throw an error","status":"passed","title":"should throw an error"},{"ancestorTitles":["KeysScanner","scan"],"duration":15,"failureMessages":[],"fullName":"KeysScanner scan should scan standalone database","status":"passed","title":"should scan standalone database"},{"ancestorTitles":["KeysScanner","scan"],"duration":3,"failureMessages":[],"fullName":"KeysScanner scan should scan cluster database","status":"passed","title":"should scan cluster database"},{"ancestorTitles":["KeysScanner","nodeScan"],"duration":3,"failureMessages":[],"fullName":"KeysScanner nodeScan should scan node keys","status":"passed","title":"should scan node keys"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501287773,"runtime":558,"slow":false,"start":1733501287215},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/graph.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["GraphKeyInfoStrategy","getInfo"],"duration":8,"failureMessages":[],"fullName":"GraphKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["GraphKeyInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"GraphKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"},{"ancestorTitles":["GraphKeyInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"GraphKeyInfoStrategy getInfo should return result without length","status":"passed","title":"should return result without length"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501288391,"runtime":383,"slow":false,"start":1733501288008},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/analytics/command.telemetry.base.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CommandTelemetryBaseService","getCommandAdditionalInfo"],"duration":7,"failureMessages":[],"fullName":"CommandTelemetryBaseService getCommandAdditionalInfo should get command additional info (core module)","status":"passed","title":"should get command additional info (core module)"},{"ancestorTitles":["CommandTelemetryBaseService","getCommandAdditionalInfo"],"duration":3,"failureMessages":[],"fullName":"CommandTelemetryBaseService getCommandAdditionalInfo should get command additional info (known module)","status":"passed","title":"should get command additional info (known module)"},{"ancestorTitles":["CommandTelemetryBaseService","getCommandAdditionalInfo"],"duration":2,"failureMessages":[],"fullName":"CommandTelemetryBaseService getCommandAdditionalInfo should get command additional info (known module w\\o cap.)","status":"passed","title":"should get command additional info (known module w\\o cap.)"},{"ancestorTitles":["CommandTelemetryBaseService","getCommandAdditionalInfo"],"duration":3,"failureMessages":[],"fullName":"CommandTelemetryBaseService getCommandAdditionalInfo should get command additional info (custom module)","status":"passed","title":"should get command additional info (custom module)"},{"ancestorTitles":["CommandTelemetryBaseService","getCommandAdditionalInfo"],"duration":3,"failureMessages":[],"fullName":"CommandTelemetryBaseService getCommandAdditionalInfo should return empty object if no command provided","status":"passed","title":"should return empty object if no command provided"},{"ancestorTitles":["CommandTelemetryBaseService","getCommandAdditionalInfo"],"duration":2,"failureMessages":[],"fullName":"CommandTelemetryBaseService getCommandAdditionalInfo should return empty object in case of an error","status":"passed","title":"should return empty object in case of an error"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501289464,"runtime":984,"slow":false,"start":1733501288480},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/database/cloud-database.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudDatabaseAnalytics","sendCloudSignInSucceeded"],"duration":4,"failureMessages":[],"fullName":"CloudDatabaseAnalytics sendCloudSignInSucceeded should emit event with eventData","status":"passed","title":"should emit event with eventData"},{"ancestorTitles":["CloudDatabaseAnalytics","sendCloudSignInSucceeded"],"duration":1,"failureMessages":[],"fullName":"CloudDatabaseAnalytics sendCloudSignInSucceeded should emit event with eventData = {}","status":"passed","title":"should emit event with eventData = {}"},{"ancestorTitles":["CloudDatabaseAnalytics","sendCloudFreeDatabaseFailed"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseAnalytics sendCloudFreeDatabaseFailed should emit error event with selected plan","status":"passed","title":"should emit error event with selected plan"},{"ancestorTitles":["CloudDatabaseAnalytics"],"duration":10,"failureMessages":[],"fullName":"CloudDatabaseAnalytics should emit error event with selected plan","status":"passed","title":"should emit error event with selected plan"},{"ancestorTitles":["CloudDatabaseAnalytics"],"duration":2,"failureMessages":[],"fullName":"CloudDatabaseAnalytics should emit error event when free subscription is not exist","status":"passed","title":"should emit error event when free subscription is not exist"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501290187,"runtime":540,"slow":false,"start":1733501289647},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/ts.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TsKeyInfoStrategy","getInfo"],"duration":17,"failureMessages":[],"fullName":"TsKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["TsKeyInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"TsKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"},{"ancestorTitles":["TsKeyInfoStrategy","getInfo"],"duration":3,"failureMessages":[],"fullName":"TsKeyInfoStrategy getInfo should return result without length","status":"passed","title":"should return result without length"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501291352,"runtime":977,"slow":false,"start":1733501290375},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis-sentinel/redis-sentinel.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisSentinelService","getSentinelMasters"],"duration":8,"failureMessages":[],"fullName":"RedisSentinelService getSentinelMasters connect and get sentinel masters","status":"passed","title":"connect and get sentinel masters"},{"ancestorTitles":["RedisSentinelService","getSentinelMasters"],"duration":27,"failureMessages":[],"fullName":"RedisSentinelService getSentinelMasters failed connection to the redis database","status":"passed","title":"failed connection to the redis database"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501292487,"runtime":609,"slow":false,"start":1733501291878},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/auth/auth-strategy/cloud-auth.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudAuthStrategy","generateAuthRequest"],"duration":6,"failureMessages":[],"fullName":"CloudAuthStrategy generateAuthRequest Check that Google auth request is generated","status":"passed","title":"Check that Google auth request is generated"},{"ancestorTitles":["CloudAuthStrategy","generateAuthRequest"],"duration":10,"failureMessages":[],"fullName":"CloudAuthStrategy generateAuthRequest Check that Github auth request is generated","status":"passed","title":"Check that Github auth request is generated"},{"ancestorTitles":["CloudAuthStrategy","generateAuthUrl"],"duration":2,"failureMessages":[],"fullName":"CloudAuthStrategy generateAuthUrl Should generate proper auth url","status":"passed","title":"Should generate proper auth url"},{"ancestorTitles":["CloudAuthStrategy","generateRenewTokensUrl"],"duration":1,"failureMessages":[],"fullName":"CloudAuthStrategy generateRenewTokensUrl Should generate proper renew url","status":"passed","title":"Should generate proper renew url"},{"ancestorTitles":["CloudAuthStrategy","generateRevokeTokensUrl"],"duration":2,"failureMessages":[],"fullName":"CloudAuthStrategy generateRevokeTokensUrl Should generate proper revoke url","status":"passed","title":"Should generate proper revoke url"},{"ancestorTitles":["CloudAuthStrategy","generateExchangeCodeUrl"],"duration":1,"failureMessages":[],"fullName":"CloudAuthStrategy generateExchangeCodeUrl Should generate exchange code url","status":"passed","title":"Should generate exchange code url"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501293204,"runtime":532,"slow":false,"start":1733501292672},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/recommendations.scanner.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RecommendationScanner","determineRecommendation"],"duration":4,"failureMessages":[],"fullName":"RecommendationScanner determineRecommendation should determine recommendation","status":"passed","title":"should determine recommendation"},{"ancestorTitles":["RecommendationScanner","determineRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationScanner determineRecommendation should return null when feature disabled","status":"passed","title":"should return null when feature disabled"},{"ancestorTitles":["RecommendationScanner","determineRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationScanner determineRecommendation should return null when isRecommendationReached throw error","status":"passed","title":"should return null when isRecommendationReached throw error"},{"ancestorTitles":["RecommendationScanner","determineRecommendation"],"duration":1,"failureMessages":[],"fullName":"RecommendationScanner determineRecommendation should return null when isReached is false","status":"passed","title":"should return null when isReached is false"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501294698,"runtime":1261,"slow":false,"start":1733501293437},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/providers/redis-observer.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisObserverProvider"],"duration":5,"failureMessages":[],"fullName":"RedisObserverProvider getOrCreateObserver new observer","status":"passed","title":"getOrCreateObserver new observer"},{"ancestorTitles":["RedisObserverProvider"],"duration":2,"failureMessages":[],"fullName":"RedisObserverProvider getOrCreateObserver check statuses","status":"passed","title":"getOrCreateObserver check statuses"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501295471,"runtime":569,"slow":false,"start":1733501294902},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cluster-monitor/strategies/cluster-shards.info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ClusterShardsInfoStrategy","getClusterNodesFromRedis"],"duration":8,"failureMessages":[],"fullName":"ClusterShardsInfoStrategy getClusterNodesFromRedis should return cluster info","status":"passed","title":"should return cluster info"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501296202,"runtime":537,"slow":false,"start":1733501295665},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/session/session.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SessionService","getSession"],"duration":4,"failureMessages":[],"fullName":"SessionService getSession Should get session by id","status":"passed","title":"Should get session by id"},{"ancestorTitles":["SessionService","createSession"],"duration":1,"failureMessages":[],"fullName":"SessionService createSession Should create new session by id","status":"passed","title":"Should create new session by id"},{"ancestorTitles":["SessionService","updateSessionData"],"duration":2,"failureMessages":[],"fullName":"SessionService updateSessionData Should not affect existing data by id","status":"passed","title":"Should not affect existing data by id"},{"ancestorTitles":["SessionService","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"SessionService updateSessionData Should update data by id","status":"passed","title":"Should update data by id"},{"ancestorTitles":["SessionService","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"SessionService updateSessionData Should merge data by id","status":"passed","title":"Should merge data by id"},{"ancestorTitles":["SessionService","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"SessionService updateSessionData Should return null when session was not found","status":"passed","title":"Should return null when session was not found"},{"ancestorTitles":["SessionService","deleteSession"],"duration":1,"failureMessages":[],"fullName":"SessionService deleteSession should delete session by id","status":"passed","title":"should delete session by id"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501297710,"runtime":1266,"slow":false,"start":1733501296444},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/key-info.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":5,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class UnsupportedKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1ravkmqyql().f[0]++;\n    cov_1ravkmqyql().s[4]++;\n    this.logger.debug(`Getting ${type} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1ravkmqyql().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1ravkmqyql().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1ravkmqyql().s[5]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    /* istanbul ignore next */\n    cov_1ravkmqyql().s[6]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size\n    };\n  }\n} strategy for unknown type","status":"passed","title":"Should return class UnsupportedKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1ravkmqyql().f[0]++;\n    cov_1ravkmqyql().s[4]++;\n    this.logger.debug(`Getting ${type} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1ravkmqyql().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1ravkmqyql().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1ravkmqyql().s[5]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    /* istanbul ignore next */\n    cov_1ravkmqyql().s[6]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size\n    };\n  }\n} strategy for unknown type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class GraphKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_2cvx3kb9qi().f[0]++;\n    cov_2cvx3kb9qi().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Graph} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    const length =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().s[7]++, await this.getNodesCount(client, key));\n    /* istanbul ignore next */\n    cov_2cvx3kb9qi().s[8]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n  async getNodesCount(client, key) {\n    /* istanbul ignore next */\n    cov_2cvx3kb9qi().f[1]++;\n    cov_2cvx3kb9qi().s[9]++;\n    try {\n      const queryReply =\n      /* istanbul ignore next */\n      (cov_2cvx3kb9qi().s[10]++, await client.sendCommand([browser_tool_commands_1.BrowserToolGraphCommands.GraphQuery, key, 'MATCH (r) RETURN count(r)', '--compact']));\n      /* istanbul ignore next */\n      cov_2cvx3kb9qi().s[11]++;\n      return queryReply[1][0][0][1];\n    } catch (error) {\n      /* istanbul ignore next */\n      cov_2cvx3kb9qi().s[12]++;\n      return undefined;\n    }\n  }\n} strategy for graphdata type","status":"passed","title":"Should return class GraphKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_2cvx3kb9qi().f[0]++;\n    cov_2cvx3kb9qi().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Graph} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    const length =\n    /* istanbul ignore next */\n    (cov_2cvx3kb9qi().s[7]++, await this.getNodesCount(client, key));\n    /* istanbul ignore next */\n    cov_2cvx3kb9qi().s[8]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n  async getNodesCount(client, key) {\n    /* istanbul ignore next */\n    cov_2cvx3kb9qi().f[1]++;\n    cov_2cvx3kb9qi().s[9]++;\n    try {\n      const queryReply =\n      /* istanbul ignore next */\n      (cov_2cvx3kb9qi().s[10]++, await client.sendCommand([browser_tool_commands_1.BrowserToolGraphCommands.GraphQuery, key, 'MATCH (r) RETURN count(r)', '--compact']));\n      /* istanbul ignore next */\n      cov_2cvx3kb9qi().s[11]++;\n      return queryReply[1][0][0][1];\n    } catch (error) {\n      /* istanbul ignore next */\n      cov_2cvx3kb9qi().s[12]++;\n      return undefined;\n    }\n  }\n} strategy for graphdata type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class HashKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_20ue1lrxdf().f[0]++;\n    cov_20ue1lrxdf().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Hash} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolHashCommands.HLen, key]]));\n    /* istanbul ignore next */\n    cov_20ue1lrxdf().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for hash type","status":"passed","title":"Should return class HashKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_20ue1lrxdf().f[0]++;\n    cov_20ue1lrxdf().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Hash} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_20ue1lrxdf().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolHashCommands.HLen, key]]));\n    /* istanbul ignore next */\n    cov_20ue1lrxdf().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for hash type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class ListKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_22nnq2vztu().f[0]++;\n    cov_22nnq2vztu().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.List} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolListCommands.LLen, key]]));\n    /* istanbul ignore next */\n    cov_22nnq2vztu().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for list type","status":"passed","title":"Should return class ListKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_22nnq2vztu().f[0]++;\n    cov_22nnq2vztu().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.List} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_22nnq2vztu().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolListCommands.LLen, key]]));\n    /* istanbul ignore next */\n    cov_22nnq2vztu().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for list type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":2,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class RejsonRlKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1jwwj4cut2().f[0]++;\n    cov_1jwwj4cut2().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.JSON} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    const length =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().s[7]++, await this.getLength(client, key));\n    /* istanbul ignore next */\n    cov_1jwwj4cut2().s[8]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n  async getLength(client, key) {\n    /* istanbul ignore next */\n    cov_1jwwj4cut2().f[1]++;\n    cov_1jwwj4cut2().s[9]++;\n    try {\n      const objectKeyType =\n      /* istanbul ignore next */\n      (cov_1jwwj4cut2().s[10]++, await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonType, key, '.'], {\n        replyEncoding: 'utf8'\n      }));\n      /* istanbul ignore next */\n      cov_1jwwj4cut2().s[11]++;\n      switch (objectKeyType) {\n        case 'object':\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][0]++;\n          cov_1jwwj4cut2().s[12]++;\n          return await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonObjLen, key, '.'], {\n            replyEncoding: 'utf8'\n          });\n        case 'array':\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][1]++;\n          cov_1jwwj4cut2().s[13]++;\n          return await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonArrLen, key, '.'], {\n            replyEncoding: 'utf8'\n          });\n        case 'string':\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][2]++;\n          cov_1jwwj4cut2().s[14]++;\n          return await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonStrLen, key, '.'], {\n            replyEncoding: 'utf8'\n          });\n        default:\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][3]++;\n          cov_1jwwj4cut2().s[15]++;\n          return null;\n      }\n    } catch (error) {\n      /* istanbul ignore next */\n      cov_1jwwj4cut2().s[16]++;\n      return null;\n    }\n  }\n} strategy for ReJSON-RL type","status":"passed","title":"Should return class RejsonRlKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1jwwj4cut2().f[0]++;\n    cov_1jwwj4cut2().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.JSON} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    const length =\n    /* istanbul ignore next */\n    (cov_1jwwj4cut2().s[7]++, await this.getLength(client, key));\n    /* istanbul ignore next */\n    cov_1jwwj4cut2().s[8]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n  async getLength(client, key) {\n    /* istanbul ignore next */\n    cov_1jwwj4cut2().f[1]++;\n    cov_1jwwj4cut2().s[9]++;\n    try {\n      const objectKeyType =\n      /* istanbul ignore next */\n      (cov_1jwwj4cut2().s[10]++, await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonType, key, '.'], {\n        replyEncoding: 'utf8'\n      }));\n      /* istanbul ignore next */\n      cov_1jwwj4cut2().s[11]++;\n      switch (objectKeyType) {\n        case 'object':\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][0]++;\n          cov_1jwwj4cut2().s[12]++;\n          return await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonObjLen, key, '.'], {\n            replyEncoding: 'utf8'\n          });\n        case 'array':\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][1]++;\n          cov_1jwwj4cut2().s[13]++;\n          return await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonArrLen, key, '.'], {\n            replyEncoding: 'utf8'\n          });\n        case 'string':\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][2]++;\n          cov_1jwwj4cut2().s[14]++;\n          return await client.sendCommand([browser_tool_commands_1.BrowserToolRejsonRlCommands.JsonStrLen, key, '.'], {\n            replyEncoding: 'utf8'\n          });\n        default:\n          /* istanbul ignore next */\n          cov_1jwwj4cut2().b[2][3]++;\n          cov_1jwwj4cut2().s[15]++;\n          return null;\n      }\n    } catch (error) {\n      /* istanbul ignore next */\n      cov_1jwwj4cut2().s[16]++;\n      return null;\n    }\n  }\n} strategy for ReJSON-RL type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class SetKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_frml0pgr9().f[0]++;\n    cov_frml0pgr9().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Set} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolSetCommands.SCard, key]]));\n    /* istanbul ignore next */\n    cov_frml0pgr9().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for set type","status":"passed","title":"Should return class SetKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_frml0pgr9().f[0]++;\n    cov_frml0pgr9().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Set} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_frml0pgr9().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolSetCommands.SCard, key]]));\n    /* istanbul ignore next */\n    cov_frml0pgr9().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for set type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class StreamKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_12wchefjna().f[0]++;\n    cov_12wchefjna().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Stream} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_12wchefjna().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_12wchefjna().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_12wchefjna().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_12wchefjna().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolStreamCommands.XLen, key]]));\n    /* istanbul ignore next */\n    cov_12wchefjna().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for stream type","status":"passed","title":"Should return class StreamKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_12wchefjna().f[0]++;\n    cov_12wchefjna().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.Stream} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_12wchefjna().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_12wchefjna().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_12wchefjna().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_12wchefjna().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolStreamCommands.XLen, key]]));\n    /* istanbul ignore next */\n    cov_12wchefjna().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for stream type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":2,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class StringKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1hldqg5bng().f[0]++;\n    cov_1hldqg5bng().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.String} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolStringCommands.StrLen, key]]));\n    /* istanbul ignore next */\n    cov_1hldqg5bng().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for string type","status":"passed","title":"Should return class StringKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1hldqg5bng().f[0]++;\n    cov_1hldqg5bng().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.String} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1hldqg5bng().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolStringCommands.StrLen, key]]));\n    /* istanbul ignore next */\n    cov_1hldqg5bng().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for string type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class TsKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getTotalSamples(client, key) {\n    /* istanbul ignore next */\n    cov_1lmmxzqd89().f[0]++;\n    cov_1lmmxzqd89().s[6]++;\n    try {\n      const info =\n      /* istanbul ignore next */\n      (cov_1lmmxzqd89().s[7]++, await client.sendCommand([browser_tool_commands_1.BrowserToolTSCommands.TSInfo, key], {\n        replyEncoding: 'utf8'\n      }));\n      /* istanbul ignore next */\n      cov_1lmmxzqd89().s[8]++;\n      return (0, utils_1.convertArrayReplyToObject)(info).totalsamples;\n    } catch (error) {\n      /* istanbul ignore next */\n      cov_1lmmxzqd89().s[9]++;\n      return undefined;\n    }\n  }\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1lmmxzqd89().f[1]++;\n    cov_1lmmxzqd89().s[10]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.TS} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().s[11]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    const length =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().s[12]++, await this.getTotalSamples(client, key));\n    /* istanbul ignore next */\n    cov_1lmmxzqd89().s[13]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for TSDB-TYPE type","status":"passed","title":"Should return class TsKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getTotalSamples(client, key) {\n    /* istanbul ignore next */\n    cov_1lmmxzqd89().f[0]++;\n    cov_1lmmxzqd89().s[6]++;\n    try {\n      const info =\n      /* istanbul ignore next */\n      (cov_1lmmxzqd89().s[7]++, await client.sendCommand([browser_tool_commands_1.BrowserToolTSCommands.TSInfo, key], {\n        replyEncoding: 'utf8'\n      }));\n      /* istanbul ignore next */\n      cov_1lmmxzqd89().s[8]++;\n      return (0, utils_1.convertArrayReplyToObject)(info).totalsamples;\n    } catch (error) {\n      /* istanbul ignore next */\n      cov_1lmmxzqd89().s[9]++;\n      return undefined;\n    }\n  }\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_1lmmxzqd89().f[1]++;\n    cov_1lmmxzqd89().s[10]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.TS} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().b[1][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().s[11]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0']]));\n    const length =\n    /* istanbul ignore next */\n    (cov_1lmmxzqd89().s[12]++, await this.getTotalSamples(client, key));\n    /* istanbul ignore next */\n    cov_1lmmxzqd89().s[13]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for TSDB-TYPE type"},{"ancestorTitles":["KeyInfoProvider","getStrategy"],"duration":2,"failureMessages":[],"fullName":"KeyInfoProvider getStrategy Should return class ZSetKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_emc8ay32i().f[0]++;\n    cov_emc8ay32i().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.ZSet} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolZSetCommands.ZCard, key]]));\n    /* istanbul ignore next */\n    cov_emc8ay32i().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for zset type","status":"passed","title":"Should return class ZSetKeyInfoStrategy extends\n/* istanbul ignore next */\n(key_info_strategy_1.KeyInfoStrategy) {\n  async getInfo(client, key, type) {\n    /* istanbul ignore next */\n    cov_emc8ay32i().f[0]++;\n    cov_emc8ay32i().s[5]++;\n    this.logger.debug(`Getting ${dto_1.RedisDataType.ZSet} type info.`);\n    const [[, ttl =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().b[0][0]++, null)], [, size =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().b[1][0]++, null)], [, length =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().b[2][0]++, null)]] =\n    /* istanbul ignore next */\n    (cov_emc8ay32i().s[6]++, await client.sendPipeline([[browser_tool_commands_1.BrowserToolKeysCommands.Ttl, key], [browser_tool_commands_1.BrowserToolKeysCommands.MemoryUsage, key, 'samples', '0'], [browser_tool_commands_1.BrowserToolZSetCommands.ZCard, key]]));\n    /* istanbul ignore next */\n    cov_emc8ay32i().s[7]++;\n    return {\n      name: key,\n      type,\n      ttl,\n      size,\n      length\n    };\n  }\n} strategy for zset type"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501298438,"runtime":520,"slow":false,"start":1733501297918},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/chat/exceptions/conv-ai.error.handler.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiBadRequestException of status code is 400","status":"passed","title":"Should return ConvAiBadRequestException of status code is 400"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiUnauthorizedException of status code is 401","status":"passed","title":"Should return ConvAiUnauthorizedException of status code is 401"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiForbiddenException of status code is 403","status":"passed","title":"Should return ConvAiForbiddenException of status code is 403"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiNotFoundException of status code is 404","status":"passed","title":"Should return ConvAiNotFoundException of status code is 404"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiInternalServerErrorException of status code is 500","status":"passed","title":"Should return ConvAiInternalServerErrorException of status code is 500"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiInternalServerErrorException by default","status":"passed","title":"Should return ConvAiInternalServerErrorException by default"},{"ancestorTitles":["wrapConvAiError"],"duration":1,"failureMessages":[],"fullName":"wrapConvAiError Should return ConvAiInternalServerErrorException if no response field","status":"passed","title":"Should return ConvAiInternalServerErrorException if no response field"},{"ancestorTitles":["wrapConvAiError"],"duration":0,"failureMessages":[],"fullName":"wrapConvAiError Should return HttpException if passed children of it","status":"passed","title":"Should return HttpException if passed children of it"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501299221,"runtime":582,"slow":false,"start":1733501298639},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/session/repositories/local.cloud.session.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalCloudSessionRepository","get"],"duration":6,"failureMessages":[],"fullName":"LocalCloudSessionRepository get should return null if no cloud session data in the repository","status":"passed","title":"should return null if no cloud session data in the repository"},{"ancestorTitles":["LocalCloudSessionRepository","get"],"duration":2,"failureMessages":[],"fullName":"LocalCloudSessionRepository get should return cloudSession data if it is in the repository","status":"passed","title":"should return cloudSession data if it is in the repository"},{"ancestorTitles":["LocalCloudSessionRepository","save"],"duration":2,"failureMessages":[],"fullName":"LocalCloudSessionRepository save should upsert data into repository","status":"passed","title":"should upsert data into repository"},{"ancestorTitles":["LocalCloudSessionRepository","save"],"duration":2,"failureMessages":[],"fullName":"LocalCloudSessionRepository save encrypts the data before upsertion","status":"passed","title":"encrypts the data before upsertion"},{"ancestorTitles":["LocalCloudSessionRepository","save"],"duration":2,"failureMessages":[],"fullName":"LocalCloudSessionRepository save not fail when null data is stored","status":"passed","title":"not fail when null data is stored"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501300649,"runtime":1180,"slow":false,"start":1733501299469},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/encryption/strategies/key-encryption.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["KeyEncryptionStrategy","isAvailable"],"duration":3,"failureMessages":[],"fullName":"KeyEncryptionStrategy isAvailable Should return true when env specified","status":"passed","title":"Should return true when env specified"},{"ancestorTitles":["KeyEncryptionStrategy","isAvailable"],"duration":1,"failureMessages":[],"fullName":"KeyEncryptionStrategy isAvailable Should return false when env is not specified","status":"passed","title":"Should return false when env is not specified"},{"ancestorTitles":["KeyEncryptionStrategy","encrypt"],"duration":1,"failureMessages":[],"fullName":"KeyEncryptionStrategy encrypt Should encrypt data","status":"passed","title":"Should encrypt data"},{"ancestorTitles":["KeyEncryptionStrategy","encrypt"],"duration":8,"failureMessages":[],"fullName":"KeyEncryptionStrategy encrypt Should throw KeyEncryptionError when unable to encrypt","status":"passed","title":"Should throw KeyEncryptionError when unable to encrypt"},{"ancestorTitles":["KeyEncryptionStrategy","encrypt"],"duration":2,"failureMessages":[],"fullName":"KeyEncryptionStrategy encrypt Should throw KeyUnavailable when there is no key but we are trying to encrypt","status":"passed","title":"Should throw KeyUnavailable when there is no key but we are trying to encrypt"},{"ancestorTitles":["KeyEncryptionStrategy","decrypt"],"duration":1,"failureMessages":[],"fullName":"KeyEncryptionStrategy decrypt Should decrypt data","status":"passed","title":"Should decrypt data"},{"ancestorTitles":["KeyEncryptionStrategy","decrypt"],"duration":1,"failureMessages":[],"fullName":"KeyEncryptionStrategy decrypt Should return null when encryption doesn't match KEY","status":"passed","title":"Should return null when encryption doesn't match KEY"},{"ancestorTitles":["KeyEncryptionStrategy","decrypt"],"duration":1,"failureMessages":[],"fullName":"KeyEncryptionStrategy decrypt Should throw KeyDecryptionError when unable to decrypt","status":"passed","title":"Should throw KeyDecryptionError when unable to decrypt"},{"ancestorTitles":["KeyEncryptionStrategy","decrypt"],"duration":1,"failureMessages":[],"fullName":"KeyEncryptionStrategy decrypt Should throw KeyUnavailable when there is no key but we are trying to decrypt","status":"passed","title":"Should throw KeyUnavailable when there is no key but we are trying to decrypt"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501301611,"runtime":771,"slow":false,"start":1733501300840},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/job/cloud-job.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudJobService","create"],"duration":4,"failureMessages":[],"fullName":"CloudJobService create successfully create cloud job","status":"passed","title":"successfully create cloud job"},{"ancestorTitles":["CloudJobService","create"],"duration":3,"failureMessages":[],"fullName":"CloudJobService create should throw CloudApiUnauthorizedException exception","status":"passed","title":"should throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudJobService","getUserJobsInfo"],"duration":1,"failureMessages":[],"fullName":"CloudJobService getUserJobsInfo successfully create cloud job","status":"passed","title":"successfully create cloud job"},{"ancestorTitles":["CloudJobService","getUserJobsInfo"],"duration":1,"failureMessages":[],"fullName":"CloudJobService getUserJobsInfo should throw CloudApiUnauthorizedException exception","status":"passed","title":"should throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudJobService","get"],"duration":4,"failureMessages":[],"fullName":"CloudJobService get should throw CloudJobNotFoundException exception","status":"passed","title":"should throw CloudJobNotFoundException exception"},{"ancestorTitles":["CloudJobService","get"],"duration":1,"failureMessages":[],"fullName":"CloudJobService get should throw CloudApiUnauthorizedException exception","status":"passed","title":"should throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudJobService","get"],"duration":1,"failureMessages":[],"fullName":"CloudJobService get should throw ForbiddenException exception","status":"passed","title":"should throw ForbiddenException exception"}]},{"numFailingTests":0,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501301926,"runtime":46,"slow":false,"start":1733501301880},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/utils/clusterCursor.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@22||172.17.0.1:7002@33\",\"expected\":true}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@22||172.17.0.1:7002@33\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@-1||172.17.0.1:7002@-1\",\"expected\":true}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@-1||172.17.0.1:7002@-1\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":7,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@10||172.17.0.1:7002@10||172.17.0.1:7003@10||172.17.0.1:7004@10||172.17.0.1:7005@10||172.17.0.1:7006@10\",\"expected\":true}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@10||172.17.0.1:7002@10||172.17.0.1:7003@10||172.17.0.1:7004@10||172.17.0.1:7005@10||172.17.0.1:7006@10\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@-1\",\"expected\":true}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@-1\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"domain.com:7001@-1\",\"expected\":true}","status":"passed","title":"{\"input\":\"domain.com:7001@-1\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":1,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"domain-with-hyphens.com:7001@-1\",\"expected\":true}","status":"passed","title":"{\"input\":\"domain-with-hyphens.com:7001@-1\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@1228822\",\"expected\":true}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@1228822\",\"expected\":true}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@\",\"expected\":false}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@\",\"expected\":false}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172.17.0.1:7001@text\",\"expected\":false}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@text\",\"expected\":false}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"172,17,0,1:7001@-1\",\"expected\":false}","status":"passed","title":"{\"input\":\"172,17,0,1:7001@-1\",\"expected\":false}"},{"ancestorTitles":["isClusterCursorValid"],"duration":1,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"plain text\",\"expected\":false}","status":"passed","title":"{\"input\":\"plain text\",\"expected\":false}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"text@text||text@text\",\"expected\":false}","status":"passed","title":"{\"input\":\"text@text||text@text\",\"expected\":false}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"text@text\",\"expected\":false}","status":"passed","title":"{\"input\":\"text@text\",\"expected\":false}"},{"ancestorTitles":["isClusterCursorValid"],"duration":0,"failureMessages":[],"fullName":"isClusterCursorValid {\"input\":\"\",\"expected\":false}","status":"passed","title":"{\"input\":\"\",\"expected\":false}"},{"ancestorTitles":["parseClusterCursor"],"duration":1,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"172.17.0.1:7001@22||172.17.0.1:7002@33\",\"expected\":[{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7001,\"cursor\":22,\"keys\":[]},{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7002,\"cursor\":33,\"keys\":[]}]}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@22||172.17.0.1:7002@33\",\"expected\":[{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7001,\"cursor\":22,\"keys\":[]},{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7002,\"cursor\":33,\"keys\":[]}]}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"172.17.0.1:7001@-1||172.17.0.1:7002@10||172.17.0.1:7003@-1||172.17.0.1:7004@10||172.17.0.1:7005@-1||172.17.0.1:7006@10\",\"expected\":[{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7002,\"cursor\":10,\"keys\":[]},{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7004,\"cursor\":10,\"keys\":[]},{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7006,\"cursor\":10,\"keys\":[]}]}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@-1||172.17.0.1:7002@10||172.17.0.1:7003@-1||172.17.0.1:7004@10||172.17.0.1:7005@-1||172.17.0.1:7006@10\",\"expected\":[{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7002,\"cursor\":10,\"keys\":[]},{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7004,\"cursor\":10,\"keys\":[]},{\"total\":0,\"scanned\":0,\"host\":\"172.17.0.1\",\"port\":7006,\"cursor\":10,\"keys\":[]}]}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"172.17.0.1:7001@-1||172.17.0.1:7002@-1\",\"expected\":[]}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@-1||172.17.0.1:7002@-1\",\"expected\":[]}"},{"ancestorTitles":["parseClusterCursor"],"duration":1,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"172.17.0.1:7001@\",\"expected\":{}}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"172.17.0.1:7001@text\",\"expected\":{}}","status":"passed","title":"{\"input\":\"172.17.0.1:7001@text\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"172,17,0,1:7001@-1\",\"expected\":{}}","status":"passed","title":"{\"input\":\"172,17,0,1:7001@-1\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"plain text\",\"expected\":{}}","status":"passed","title":"{\"input\":\"plain text\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"text@text||text@text\",\"expected\":{}}","status":"passed","title":"{\"input\":\"text@text||text@text\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"text@text\",\"expected\":{}}","status":"passed","title":"{\"input\":\"text@text\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"\",\"expected\":{}}","status":"passed","title":"{\"input\":\"\",\"expected\":{}}"},{"ancestorTitles":["parseClusterCursor"],"duration":0,"failureMessages":[],"fullName":"parseClusterCursor {\"input\":\"\",\"expected\":{}}","status":"passed","title":"{\"input\":\"\",\"expected\":{}}"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501302460,"runtime":529,"slow":false,"start":1733501301931},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/search-JSON.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SearchJSONStrategy","isRecommendationReached","with search module"],"duration":4,"failureMessages":[],"fullName":"SearchJSONStrategy isRecommendationReached with search module should return true when there is JSON key","status":"passed","title":"should return true when there is JSON key"},{"ancestorTitles":["SearchJSONStrategy","isRecommendationReached","with search module"],"duration":0,"failureMessages":[],"fullName":"SearchJSONStrategy isRecommendationReached with search module should return false when there is not JSON key","status":"passed","title":"should return false when there is not JSON key"},{"ancestorTitles":["SearchJSONStrategy","isRecommendationReached","with search module"],"duration":1,"failureMessages":[],"fullName":"SearchJSONStrategy isRecommendationReached with search module should return false when FT._LIST return indexes","status":"passed","title":"should return false when FT._LIST return indexes"},{"ancestorTitles":["SearchJSONStrategy","isRecommendationReached","without search module"],"duration":0,"failureMessages":[],"fullName":"SearchJSONStrategy isRecommendationReached without search module should return true when there is JSON key","status":"passed","title":"should return true when there is JSON key"},{"ancestorTitles":["SearchJSONStrategy","isRecommendationReached","without search module"],"duration":1,"failureMessages":[],"fullName":"SearchJSONStrategy isRecommendationReached without search module should return false when there is not JSON key","status":"passed","title":"should return false when there is not JSON key"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501303827,"runtime":1136,"slow":false,"start":1733501302691},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/providers/user-session.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserSessionProvider","getOrCreateUserSession"],"duration":5,"failureMessages":[],"fullName":"UserSessionProvider getOrCreateUserSession should create new UserSession and store it. Ignore the same session","status":"passed","title":"should create new UserSession and store it. Ignore the same session"},{"ancestorTitles":["UserSessionProvider","removeUserSession"],"duration":2,"failureMessages":[],"fullName":"UserSessionProvider removeUserSession should remove UserSession","status":"passed","title":"should remove UserSession"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501304494,"runtime":463,"slow":false,"start":1733501304031},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/bulk-action-summary.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkActionSummary","addProcessed"],"duration":1,"failureMessages":[],"fullName":"BulkActionSummary addProcessed should increase processed","status":"passed","title":"should increase processed"},{"ancestorTitles":["BulkActionSummary","addSuccess"],"duration":1,"failureMessages":[],"fullName":"BulkActionSummary addSuccess should increase succeed","status":"passed","title":"should increase succeed"},{"ancestorTitles":["BulkActionSummary","addFailed"],"duration":0,"failureMessages":[],"fullName":"BulkActionSummary addFailed should increase failed","status":"passed","title":"should increase failed"},{"ancestorTitles":["BulkActionSummary","addErrors"],"duration":242,"failureMessages":[],"fullName":"BulkActionSummary addErrors should increase fails and store errors (up to 500)","status":"passed","title":"should increase fails and store errors (up to 500)"},{"ancestorTitles":["BulkActionSummary","getOverview"],"duration":188,"failureMessages":[],"fullName":"BulkActionSummary getOverview should get overview and clear errors","status":"passed","title":"should get overview and clear errors"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501305028,"runtime":530,"slow":false,"start":1733501304498},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/providers/feature-flag/feature-flag.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FeatureFlagProvider","getStrategy"],"duration":4,"failureMessages":[],"fullName":"FeatureFlagProvider getStrategy should return common strategy","status":"passed","title":"should return common strategy"},{"ancestorTitles":["FeatureFlagProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagProvider getStrategy should return common strategy","status":"passed","title":"should return common strategy"},{"ancestorTitles":["FeatureFlagProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagProvider getStrategy should return default strategy when directly called","status":"passed","title":"should return default strategy when directly called"},{"ancestorTitles":["FeatureFlagProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagProvider getStrategy should return default strategy when when no strategy found","status":"passed","title":"should return default strategy when when no strategy found"},{"ancestorTitles":["FeatureFlagProvider","calculate"],"duration":1,"failureMessages":[],"fullName":"FeatureFlagProvider calculate should calculate ","status":"passed","title":"should calculate "}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501305819,"runtime":577,"slow":false,"start":1733501305242},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/commands/commands-json.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CommandsJsonProvider","updateLatestJson"],"duration":3,"failureMessages":[],"fullName":"CommandsJsonProvider updateLatestJson should not fail when incorrect data retrieved","status":"passed","title":"should not fail when incorrect data retrieved"},{"ancestorTitles":["CommandsJsonProvider","getCommands"],"duration":1,"failureMessages":[],"fullName":"CommandsJsonProvider getCommands should return default config when file was not found","status":"passed","title":"should return default config when file was not found"},{"ancestorTitles":["CommandsJsonProvider","getCommands"],"duration":1,"failureMessages":[],"fullName":"CommandsJsonProvider getCommands should return default config when incorrect json received from file","status":"passed","title":"should return default config when incorrect json received from file"},{"ancestorTitles":["CommandsJsonProvider","getCommands"],"duration":1,"failureMessages":[],"fullName":"CommandsJsonProvider getCommands should return latest commands","status":"passed","title":"should return latest commands"},{"ancestorTitles":["CommandsJsonProvider","getDefaultCommands"],"duration":1,"failureMessages":[],"fullName":"CommandsJsonProvider getDefaultCommands should return empty object when file was not found","status":"passed","title":"should return empty object when file was not found"},{"ancestorTitles":["CommandsJsonProvider","getDefaultCommands"],"duration":1,"failureMessages":[],"fullName":"CommandsJsonProvider getDefaultCommands should return empty object when incorrect json received from file","status":"passed","title":"should return empty object when incorrect json received from file"},{"ancestorTitles":["CommandsJsonProvider","getDefaultCommands"],"duration":1,"failureMessages":[],"fullName":"CommandsJsonProvider getDefaultCommands should return default commands","status":"passed","title":"should return default commands"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501307254,"runtime":1211,"slow":false,"start":1733501306043},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/capi-key/cloud-capi-key.api.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudCapiKeyApiProvider","enableCapi"],"duration":4,"failureMessages":[],"fullName":"CloudCapiKeyApiProvider enableCapi successfully get capi access key","status":"passed","title":"successfully get capi access key"},{"ancestorTitles":["CloudCapiKeyApiProvider","enableCapi"],"duration":8,"failureMessages":[],"fullName":"CloudCapiKeyApiProvider enableCapi throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudCapiKeyApiProvider","createCapiKey"],"duration":1,"failureMessages":[],"fullName":"CloudCapiKeyApiProvider createCapiKey successfully create cpi key (secret)","status":"passed","title":"successfully create cpi key (secret)"},{"ancestorTitles":["CloudCapiKeyApiProvider","createCapiKey"],"duration":1,"failureMessages":[],"fullName":"CloudCapiKeyApiProvider createCapiKey throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501307800,"runtime":357,"slow":false,"start":1733501307443},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/config.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Config util","get"],"duration":47,"failureMessages":[],"fullName":"Config util get should return dev server config","status":"passed","title":"should return dev server config"},{"ancestorTitles":["Config util","get"],"duration":38,"failureMessages":[],"fullName":"Config util get should return test server config","status":"passed","title":"should return test server config"},{"ancestorTitles":["Config util","get"],"duration":45,"failureMessages":[],"fullName":"Config util get should return stack server config","status":"passed","title":"should return stack server config"},{"ancestorTitles":["Config util","get"],"duration":48,"failureMessages":[],"fullName":"Config util get should return stage server config","status":"passed","title":"should return stage server config"},{"ancestorTitles":["Config util","get"],"duration":48,"failureMessages":[],"fullName":"Config util get should return prod server config","status":"passed","title":"should return prod server config"},{"ancestorTitles":["Config util","get"],"duration":48,"failureMessages":[],"fullName":"Config util get should return entire prod server config","status":"passed","title":"should return entire prod server config"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501308379,"runtime":575,"slow":false,"start":1733501307804},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/settings/repositories/local.agreements.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalAgreementsRepository","getOrCreate"],"duration":4,"failureMessages":[],"fullName":"LocalAgreementsRepository getOrCreate should return agreements","status":"passed","title":"should return agreements"},{"ancestorTitles":["LocalAgreementsRepository","getOrCreate"],"duration":1,"failureMessages":[],"fullName":"LocalAgreementsRepository getOrCreate should create new agreements","status":"passed","title":"should create new agreements"},{"ancestorTitles":["LocalAgreementsRepository","getOrCreate"],"duration":2,"failureMessages":[],"fullName":"LocalAgreementsRepository getOrCreate should fail to create with unique constraint and return existing","status":"passed","title":"should fail to create with unique constraint and return existing"},{"ancestorTitles":["LocalAgreementsRepository","getOrCreate"],"duration":4,"failureMessages":[],"fullName":"LocalAgreementsRepository getOrCreate should fail when failed to create new and error is not unique constraint","status":"passed","title":"should fail when failed to create new and error is not unique constraint"},{"ancestorTitles":["LocalAgreementsRepository","update"],"duration":11,"failureMessages":[],"fullName":"LocalAgreementsRepository update should update agreements","status":"passed","title":"should update agreements"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501309092,"runtime":529,"slow":false,"start":1733501308563},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ssh/ssh-tunnel.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SshTunnelProvider","createTunnel"],"duration":3,"failureMessages":[],"fullName":"SshTunnelProvider createTunnel should create tunnel","status":"passed","title":"should create tunnel"},{"ancestorTitles":["SshTunnelProvider","createTunnel"],"duration":1,"failureMessages":[],"fullName":"SshTunnelProvider createTunnel should fail due to server init error","status":"passed","title":"should fail due to server init error"},{"ancestorTitles":["SshTunnelProvider","createTunnel"],"duration":1,"failureMessages":[],"fullName":"SshTunnelProvider createTunnel should fail with error but not with unable to get property from \"undefined\"","status":"passed","title":"should fail with error but not with unable to get property from \"undefined\""},{"ancestorTitles":["SshTunnelProvider","createTunnel"],"duration":1,"failureMessages":[],"fullName":"SshTunnelProvider createTunnel should fail due to createServer failed","status":"passed","title":"should fail due to createServer failed"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501310502,"runtime":1180,"slow":false,"start":1733501309322},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/pub-sub.analytics.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PubSubAnalyticsService","sendMessagePublishedEvent"],"duration":4,"failureMessages":[],"fullName":"PubSubAnalyticsService sendMessagePublishedEvent should emit sendMessagePublished event","status":"passed","title":"should emit sendMessagePublished event"},{"ancestorTitles":["PubSubAnalyticsService","sendChannelSubscribeEvent"],"duration":2,"failureMessages":[],"fullName":"PubSubAnalyticsService sendChannelSubscribeEvent should emit sendChannelSubscribe event for all channels","status":"passed","title":"should emit sendChannelSubscribe event for all channels"},{"ancestorTitles":["PubSubAnalyticsService","sendChannelSubscribeEvent"],"duration":1,"failureMessages":[],"fullName":"PubSubAnalyticsService sendChannelSubscribeEvent should emit sendChannelSubscribe event not for all channels","status":"passed","title":"should emit sendChannelSubscribe event not for all channels"},{"ancestorTitles":["PubSubAnalyticsService","sendChannelUnsubscribeEvent"],"duration":2,"failureMessages":[],"fullName":"PubSubAnalyticsService sendChannelUnsubscribeEvent should emit sendChannelUnsubscribe event","status":"passed","title":"should emit sendChannelUnsubscribe event"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501311264,"runtime":572,"slow":false,"start":1733501310692},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/providers/database-recommendation.emitter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseRecommendationEmitter","newRecommendation"],"duration":4,"failureMessages":[],"fullName":"DatabaseRecommendationEmitter newRecommendation should return undefined if no recommendations passed","status":"passed","title":"should return undefined if no recommendations passed"},{"ancestorTitles":["DatabaseRecommendationEmitter","newRecommendation"],"duration":2,"failureMessages":[],"fullName":"DatabaseRecommendationEmitter newRecommendation should emit 2 new recommendations","status":"passed","title":"should emit 2 new recommendations"},{"ancestorTitles":["DatabaseRecommendationEmitter","newRecommendation"],"duration":1,"failureMessages":[],"fullName":"DatabaseRecommendationEmitter newRecommendation should log an error but not fail","status":"passed","title":"should log an error but not fail"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501312010,"runtime":562,"slow":false,"start":1733501311448},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/settings/repositories/local.settings.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalSettingsRepository","getOrCreate"],"duration":4,"failureMessages":[],"fullName":"LocalSettingsRepository getOrCreate should return settings model","status":"passed","title":"should return settings model"},{"ancestorTitles":["LocalSettingsRepository","getOrCreate"],"duration":1,"failureMessages":[],"fullName":"LocalSettingsRepository getOrCreate should create new settings","status":"passed","title":"should create new settings"},{"ancestorTitles":["LocalSettingsRepository","getOrCreate"],"duration":1,"failureMessages":[],"fullName":"LocalSettingsRepository getOrCreate should fail to create with unique constraint and return existing","status":"passed","title":"should fail to create with unique constraint and return existing"},{"ancestorTitles":["LocalSettingsRepository","getOrCreate"],"duration":3,"failureMessages":[],"fullName":"LocalSettingsRepository getOrCreate should fail when failed to create new and error is not unique constraint","status":"passed","title":"should fail when failed to create new and error is not unique constraint"},{"ancestorTitles":["LocalSettingsRepository","update"],"duration":2,"failureMessages":[],"fullName":"LocalSettingsRepository update should update settings","status":"passed","title":"should update settings"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501313511,"runtime":1276,"slow":false,"start":1733501312235},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/notification/notification.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["NotificationService","getNotifications"],"duration":4,"failureMessages":[],"fullName":"NotificationService getNotifications should return list of notifications with calculated unread field","status":"passed","title":"should return list of notifications with calculated unread field"},{"ancestorTitles":["NotificationService","getNotifications"],"duration":15,"failureMessages":[],"fullName":"NotificationService getNotifications should throw an error if any","status":"passed","title":"should throw an error if any"},{"ancestorTitles":["NotificationService","readNotifications"],"duration":2,"failureMessages":[],"fullName":"NotificationService readNotifications should update all notifications","status":"passed","title":"should update all notifications"},{"ancestorTitles":["NotificationService","readNotifications"],"duration":3,"failureMessages":[],"fullName":"NotificationService readNotifications should throw an error if any","status":"passed","title":"should throw an error if any"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501313786,"runtime":90,"slow":false,"start":1733501313696},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/redis-modules-summary.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["getRedisModulesSummary"],"duration":1,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":[{\"name\":\"ai\",\"version\":20000}],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":true,\"version\":20000},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":[{\"name\":\"ai\",\"version\":20000}],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":true,\"version\":20000},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":1,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":[{\"name\":\"search\",\"version\":10000}],\"expected\":{\"RediSearch\":{\"loaded\":true,\"version\":10000},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":[{\"name\":\"search\",\"version\":10000}],\"expected\":{\"RediSearch\":{\"loaded\":true,\"version\":10000},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":0,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":[{\"name\":\"bf\",\"version\":1000},{\"name\":\"rediSQL\",\"version\":1}],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":true,\"version\":1000},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[{\"name\":\"rediSQL\",\"version\":1}]}}","status":"passed","title":"{\"input\":[{\"name\":\"bf\",\"version\":1000},{\"name\":\"rediSQL\",\"version\":1}],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":true,\"version\":1000},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[{\"name\":\"rediSQL\",\"version\":1}]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":0,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":[{\"name\":\"ReJSON\"}],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":true},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":[{\"name\":\"ReJSON\"}],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":true},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":1,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":[{\"name\":\"ai\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"graph\",\"version\":20000,\"semanticVersion\":\"2.0.0\"},{\"name\":\"rg\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"bf\"},{\"name\":\"ReJSON\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"search\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"timeseries\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"redisgears_2\",\"version\":10000,\"semanticVersion\":\"1.0.0\"}],\"expected\":{\"RedisAI\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RedisGraph\":{\"loaded\":true,\"version\":20000,\"semanticVersion\":\"2.0.0\"},\"RedisGears\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RedisBloom\":{\"loaded\":true},\"RedisJSON\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RediSearch\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RedisTimeSeries\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"customModules\":[{\"name\":\"redisgears_2\",\"semanticVersion\":\"1.0.0\",\"version\":10000}]}}","status":"passed","title":"{\"input\":[{\"name\":\"ai\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"graph\",\"version\":20000,\"semanticVersion\":\"2.0.0\"},{\"name\":\"rg\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"bf\"},{\"name\":\"ReJSON\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"search\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"timeseries\",\"version\":10000,\"semanticVersion\":\"1.0.0\"},{\"name\":\"redisgears_2\",\"version\":10000,\"semanticVersion\":\"1.0.0\"}],\"expected\":{\"RedisAI\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RedisGraph\":{\"loaded\":true,\"version\":20000,\"semanticVersion\":\"2.0.0\"},\"RedisGears\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RedisBloom\":{\"loaded\":true},\"RedisJSON\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RediSearch\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"RedisTimeSeries\":{\"loaded\":true,\"version\":10000,\"semanticVersion\":\"1.0.0\"},\"customModules\":[{\"name\":\"redisgears_2\",\"semanticVersion\":\"1.0.0\",\"version\":10000}]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":0,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":[],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":[],\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":1,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":{},\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":{},\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":0,"failureMessages":[],"fullName":"getRedisModulesSummary {\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":0,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":null,\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":null,\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"},{"ancestorTitles":["getRedisModulesSummary"],"duration":1,"failureMessages":[],"fullName":"getRedisModulesSummary {\"input\":1,\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}","status":"passed","title":"{\"input\":1,\"expected\":{\"RediSearch\":{\"loaded\":false},\"RedisAI\":{\"loaded\":false},\"RedisGraph\":{\"loaded\":false},\"RedisGears\":{\"loaded\":false},\"RedisBloom\":{\"loaded\":false},\"RedisJSON\":{\"loaded\":false},\"RedisTimeSeries\":{\"loaded\":false},\"customModules\":[]}}"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501314386,"runtime":593,"slow":false,"start":1733501313793},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/auth/auth-strategy/sso-idp.cloud.auth-strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudAuthStrategy","generateAuthRequest"],"duration":6,"failureMessages":[],"fullName":"CloudAuthStrategy generateAuthRequest Check that Sso auth request is generated","status":"passed","title":"Check that Sso auth request is generated"},{"ancestorTitles":["CloudAuthStrategy","generateAuthRequest"],"duration":7,"failureMessages":[],"fullName":"CloudAuthStrategy generateAuthRequest should throw CloudOauthSsoUnsupportedEmailException in case of idp check error ","status":"passed","title":"should throw CloudOauthSsoUnsupportedEmailException in case of idp check error "},{"ancestorTitles":["CloudAuthStrategy","generateAuthRequest"],"duration":2,"failureMessages":[],"fullName":"CloudAuthStrategy generateAuthRequest should throw CloudOauthSsoUnsupportedEmailException in case of idp check error ","status":"passed","title":"should throw CloudOauthSsoUnsupportedEmailException in case of idp check error "}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501315163,"runtime":570,"slow":false,"start":1733501314593},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/providers/log-file.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LogFileProvider"],"duration":4,"failureMessages":[],"fullName":"LogFileProvider getOrCreate","status":"passed","title":"getOrCreate"},{"ancestorTitles":["LogFileProvider"],"duration":2,"failureMessages":[],"fullName":"LogFileProvider get","status":"passed","title":"get"},{"ancestorTitles":["LogFileProvider"],"duration":1,"failureMessages":[],"fullName":"LogFileProvider should throw 404 error","status":"passed","title":"should throw 404 error"},{"ancestorTitles":["LogFileProvider"],"duration":1,"failureMessages":[],"fullName":"LogFileProvider getDownloadData","status":"passed","title":"getDownloadData"},{"ancestorTitles":["LogFileProvider"],"duration":1,"failureMessages":[],"fullName":"LogFileProvider onModuleDestroy","status":"passed","title":"onModuleDestroy"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501316599,"runtime":1173,"slow":false,"start":1733501315426},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/string.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StringTypeInfoStrategy","getInfo"],"duration":7,"failureMessages":[],"fullName":"StringTypeInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["StringTypeInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"StringTypeInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501317351,"runtime":565,"slow":false,"start":1733501316786},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/repositories/local.feature.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalFeatureRepository","get"],"duration":4,"failureMessages":[],"fullName":"LocalFeatureRepository get should return feature by name","status":"passed","title":"should return feature by name"},{"ancestorTitles":["LocalFeatureRepository","get"],"duration":1,"failureMessages":[],"fullName":"LocalFeatureRepository get should return null when entity not found","status":"passed","title":"should return null when entity not found"},{"ancestorTitles":["LocalFeatureRepository","list"],"duration":1,"failureMessages":[],"fullName":"LocalFeatureRepository list should return features","status":"passed","title":"should return features"},{"ancestorTitles":["LocalFeatureRepository","list"],"duration":1,"failureMessages":[],"fullName":"LocalFeatureRepository list should return empty list","status":"passed","title":"should return empty list"},{"ancestorTitles":["LocalFeatureRepository","upsert"],"duration":1,"failureMessages":[],"fullName":"LocalFeatureRepository upsert should update or insert and return model","status":"passed","title":"should update or insert and return model"},{"ancestorTitles":["LocalFeatureRepository","delete"],"duration":10,"failureMessages":[],"fullName":"LocalFeatureRepository delete should delete and do not return anything","status":"passed","title":"should delete and do not return anything"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501318068,"runtime":533,"slow":false,"start":1733501317535},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/stream.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StreamKeyInfoStrategy","getInfo"],"duration":6,"failureMessages":[],"fullName":"StreamKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["StreamKeyInfoStrategy","getInfo"],"duration":1,"failureMessages":[],"fullName":"StreamKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501319521,"runtime":1221,"slow":false,"start":1733501318300},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/custom-tutorial/repositories/local.custom-tutorial.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalCustomTutorialRepository","get"],"duration":4,"failureMessages":[],"fullName":"LocalCustomTutorialRepository get should return custom tutorial model","status":"passed","title":"should return custom tutorial model"},{"ancestorTitles":["LocalCustomTutorialRepository","get"],"duration":1,"failureMessages":[],"fullName":"LocalCustomTutorialRepository get should return null when custom tutorial was not found","status":"passed","title":"should return null when custom tutorial was not found"},{"ancestorTitles":["LocalCustomTutorialRepository","list"],"duration":2,"failureMessages":[],"fullName":"LocalCustomTutorialRepository list should return list of custom tutorials","status":"passed","title":"should return list of custom tutorials"},{"ancestorTitles":["LocalCustomTutorialRepository","create"],"duration":15,"failureMessages":[],"fullName":"LocalCustomTutorialRepository create should create custom tutorial","status":"passed","title":"should create custom tutorial"},{"ancestorTitles":["LocalCustomTutorialRepository","delete"],"duration":2,"failureMessages":[],"fullName":"LocalCustomTutorialRepository delete should delete custom tutorial by id","status":"passed","title":"should delete custom tutorial by id"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501320234,"runtime":531,"slow":false,"start":1733501319703},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/providers/plugin-commands-whitelist.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PluginCommandsWhitelistProvider","getWhitelistCommands"],"duration":3,"failureMessages":[],"fullName":"PluginCommandsWhitelistProvider getWhitelistCommands should fetch commands when no cache and return from cache when possible","status":"passed","title":"should fetch commands when no cache and return from cache when possible"},{"ancestorTitles":["PluginCommandsWhitelistProvider","calculateWhiteListCommands"],"duration":2,"failureMessages":[],"fullName":"PluginCommandsWhitelistProvider calculateWhiteListCommands should return 2 readonly commands","status":"passed","title":"should return 2 readonly commands"},{"ancestorTitles":["PluginCommandsWhitelistProvider","calculateWhiteListCommands"],"duration":1,"failureMessages":[],"fullName":"PluginCommandsWhitelistProvider calculateWhiteListCommands should return 1 readonly commands excluded by dangerous filter","status":"passed","title":"should return 1 readonly commands excluded by dangerous filter"},{"ancestorTitles":["PluginCommandsWhitelistProvider","calculateWhiteListCommands"],"duration":1,"failureMessages":[],"fullName":"PluginCommandsWhitelistProvider calculateWhiteListCommands should return 1 readonly commands excluded by blocking filter","status":"passed","title":"should return 1 readonly commands excluded by blocking filter"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501320954,"runtime":540,"slow":false,"start":1733501320414},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/z-set.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ZSetKeyInfoStrategy","getInfo"],"duration":6,"failureMessages":[],"fullName":"ZSetKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["ZSetKeyInfoStrategy","getInfo"],"duration":1,"failureMessages":[],"fullName":"ZSetKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501322460,"runtime":1272,"slow":false,"start":1733501321188},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/list.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ListKeyInfoStrategy","getInfo"],"duration":6,"failureMessages":[],"fullName":"ListKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["ListKeyInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"ListKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501323195,"runtime":545,"slow":false,"start":1733501322650},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/hash.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["HashKeyInfoStrategy","getInfo"],"duration":6,"failureMessages":[],"fullName":"HashKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["HashKeyInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"HashKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501323911,"runtime":534,"slow":false,"start":1733501323377},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/set.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SetKeyInfoStrategy","getInfo"],"duration":6,"failureMessages":[],"fullName":"SetKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["SetKeyInfoStrategy","getInfo"],"duration":1,"failureMessages":[],"fullName":"SetKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501325404,"runtime":1259,"slow":false,"start":1733501324145},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/chat/ai-chat.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AiChatService","create"],"duration":10,"failureMessages":[],"fullName":"AiChatService create should create chat and return id","status":"passed","title":"should create chat and return id"},{"ancestorTitles":["AiChatService","postMessage"],"duration":1,"failureMessages":[],"fullName":"AiChatService postMessage should send message and return stream as result","status":"passed","title":"should send message and return stream as result"},{"ancestorTitles":["AiChatService","getHistory"],"duration":2,"failureMessages":[],"fullName":"AiChatService getHistory should get history","status":"passed","title":"should get history"},{"ancestorTitles":["AiChatService","delete"],"duration":1,"failureMessages":[],"fullName":"AiChatService delete should delete chat","status":"passed","title":"should delete chat"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501325672,"runtime":83,"slow":false,"start":1733501325589},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cli/services/cli-business/output-formatter/strategies/text-formatter.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should return correct value for null","status":"passed","title":"should return correct value for null"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should return correct value for integer","status":"passed","title":"should return correct value for integer"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should return correct value for string","status":"passed","title":"should return correct value for string"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should return correct value for empty array","status":"passed","title":"should return correct value for empty array"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should return correct value for nested array","status":"passed","title":"should return correct value for nested array"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should return correct value for object","status":"passed","title":"should return correct value for object"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should correctly handle special characters","status":"passed","title":"should correctly handle special characters"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should correctly handle hexadecimal","status":"passed","title":"should correctly handle hexadecimal"},{"ancestorTitles":["Cli TextFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli TextFormatterStrategy format should correctly stringified json","status":"passed","title":"should correctly stringified json"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501326236,"runtime":545,"slow":false,"start":1733501325691},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/rdi-statistics.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiStatisticsService","getStatistics"],"duration":4,"failureMessages":[],"fullName":"RdiStatisticsService getStatistics should call getOrCreate on RdiClientProvider with correct arguments","status":"passed","title":"should call getOrCreate on RdiClientProvider with correct arguments"},{"ancestorTitles":["RdiStatisticsService","getStatistics"],"duration":1,"failureMessages":[],"fullName":"RdiStatisticsService getStatistics should call getStatistics on RdiClient with correct arguments","status":"passed","title":"should call getStatistics on RdiClient with correct arguments"},{"ancestorTitles":["RdiStatisticsService","getStatistics"],"duration":1,"failureMessages":[],"fullName":"RdiStatisticsService getStatistics should return the result of getStatistics on RdiClient","status":"passed","title":"should return the result of getStatistics on RdiClient"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501326939,"runtime":514,"slow":false,"start":1733501326425},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/utils/reply.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["convertArrayReplyToObject"],"duration":0,"failureMessages":[],"fullName":"convertArrayReplyToObject should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["convertArrayReplyToObject"],"duration":0,"failureMessages":[],"fullName":"convertArrayReplyToObject should return empty object","status":"passed","title":"should return empty object"},{"ancestorTitles":["convertMultilineReplyToObject"],"duration":0,"failureMessages":[],"fullName":"convertMultilineReplyToObject should return object in a defined format","status":"passed","title":"should return object in a defined format"},{"ancestorTitles":["convertMultilineReplyToObject"],"duration":1,"failureMessages":[],"fullName":"convertMultilineReplyToObject should return empty object in case of incorrect string","status":"passed","title":"should return empty object in case of incorrect string"},{"ancestorTitles":["convertMultilineReplyToObject"],"duration":0,"failureMessages":[],"fullName":"convertMultilineReplyToObject should return empty object in case of an error","status":"passed","title":"should return empty object in case of an error"},{"ancestorTitles":["parseNodesFromClusterInfoReply"],"duration":0,"failureMessages":[],"fullName":"parseNodesFromClusterInfoReply should return array object in a defined format","status":"passed","title":"should return array object in a defined format"},{"ancestorTitles":["parseNodesFromClusterInfoReply"],"duration":1,"failureMessages":[],"fullName":"parseNodesFromClusterInfoReply should return empty array when incorrect string passed","status":"passed","title":"should return empty array when incorrect string passed"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501328468,"runtime":1289,"slow":false,"start":1733501327179},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/recommendation.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return SearchJSONStrategy for type: searchJSON","status":"passed","title":"should return SearchJSONStrategy for type: searchJSON"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return RedisVersionStrategy for type: redisVersion","status":"passed","title":"should return RedisVersionStrategy for type: redisVersion"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return BigSetStrategy for type: bigSets","status":"passed","title":"should return BigSetStrategy for type: bigSets"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return RTSStrategy for type: RTS","status":"passed","title":"should return RTSStrategy for type: RTS"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return AvoidLogicalDatabasesStrategy for type: avoidLogicalDatabases","status":"passed","title":"should return AvoidLogicalDatabasesStrategy for type: avoidLogicalDatabases"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return ShardHashStrategy for type: bigHashes","status":"passed","title":"should return ShardHashStrategy for type: bigHashes"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":1,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return StringToJsonStrategy for type: stringToJson","status":"passed","title":"should return StringToJsonStrategy for type: stringToJson"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return UseSmallerKeysStrategy for type: useSmallerKeys","status":"passed","title":"should return UseSmallerKeysStrategy for type: useSmallerKeys"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return AvoidLuaScriptsStrategy for type: luaScript","status":"passed","title":"should return AvoidLuaScriptsStrategy for type: luaScript"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return BigStringStrategy for type: bigStrings","status":"passed","title":"should return BigStringStrategy for type: bigStrings"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return CompressionForListStrategy for type: compressionForList","status":"passed","title":"should return CompressionForListStrategy for type: compressionForList"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return BigAmountConnectedClientsStrategy for type: bigAmountOfConnectedClients","status":"passed","title":"should return BigAmountConnectedClientsStrategy for type: bigAmountOfConnectedClients"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return TryRdiStrategyStrategy for type: tryRDI","status":"passed","title":"should return TryRdiStrategyStrategy for type: tryRDI"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":0,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return DefaultRecommendationStrategy for type: default","status":"passed","title":"should return DefaultRecommendationStrategy for type: default"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":13,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return DefaultRecommendationStrategy for type: unknown","status":"passed","title":"should return DefaultRecommendationStrategy for type: unknown"},{"ancestorTitles":["RecommendationProvider","getStrategy"],"duration":2,"failureMessages":[],"fullName":"RecommendationProvider getStrategy should return DefaultRecommendationStrategy for type: null","status":"passed","title":"should return DefaultRecommendationStrategy for type: null"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501329183,"runtime":527,"slow":false,"start":1733501328656},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/key-info/strategies/unsupported.key-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UnsupportedKeyInfoStrategy","getInfo"],"duration":6,"failureMessages":[],"fullName":"UnsupportedKeyInfoStrategy getInfo should return appropriate value","status":"passed","title":"should return appropriate value"},{"ancestorTitles":["UnsupportedKeyInfoStrategy","getInfo"],"duration":2,"failureMessages":[],"fullName":"UnsupportedKeyInfoStrategy getInfo should return size with null value","status":"passed","title":"should return size with null value"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501329939,"runtime":562,"slow":false,"start":1733501329377},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/notification/providers/notification.emitter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["NotificationEmitter","notification"],"duration":4,"failureMessages":[],"fullName":"NotificationEmitter notification should return undefined if no notifications","status":"passed","title":"should return undefined if no notifications"},{"ancestorTitles":["NotificationEmitter","notification"],"duration":2,"failureMessages":[],"fullName":"NotificationEmitter notification should should init and set interval only once","status":"passed","title":"should should init and set interval only once"},{"ancestorTitles":["NotificationEmitter","notification"],"duration":1,"failureMessages":[],"fullName":"NotificationEmitter notification should log an error but not fail","status":"passed","title":"should log an error but not fail"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501331574,"runtime":1409,"slow":false,"start":1733501330165},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/models/profiler.client.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ProfilerClient"],"duration":1,"failureMessages":[],"fullName":"ProfilerClient initialization","status":"passed","title":"initialization"},{"ancestorTitles":["ProfilerClient"],"duration":102,"failureMessages":[],"fullName":"ProfilerClient handleOnData","status":"passed","title":"handleOnData"},{"ancestorTitles":["ProfilerClient"],"duration":0,"failureMessages":[],"fullName":"ProfilerClient handleOnDisconnect","status":"passed","title":"handleOnDisconnect"},{"ancestorTitles":["ProfilerClient"],"duration":1,"failureMessages":[],"fullName":"ProfilerClient addLogsEmitter","status":"passed","title":"addLogsEmitter"},{"ancestorTitles":["ProfilerClient"],"duration":0,"failureMessages":[],"fullName":"ProfilerClient flushLogs + destroy","status":"passed","title":"flushLogs + destroy"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501332287,"runtime":536,"slow":false,"start":1733501331751},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/custom-tutorial/custom-tutorial.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CustomTutorialAnalytics","sendImportSucceeded"],"duration":4,"failureMessages":[],"fullName":"CustomTutorialAnalytics sendImportSucceeded should emit succeed event with manifest \"yes\"","status":"passed","title":"should emit succeed event with manifest \"yes\""},{"ancestorTitles":["CustomTutorialAnalytics","sendImportSucceeded"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialAnalytics sendImportSucceeded should emit succeed event with manifest \"no\"","status":"passed","title":"should emit succeed event with manifest \"no\""},{"ancestorTitles":["CustomTutorialAnalytics","sendImportFailed"],"duration":1,"failureMessages":[],"fullName":"CustomTutorialAnalytics sendImportFailed should emit 1 event with \"Error\" cause","status":"passed","title":"should emit 1 event with \"Error\" cause"},{"ancestorTitles":["CustomTutorialAnalytics","sendImportFailed"],"duration":2,"failureMessages":[],"fullName":"CustomTutorialAnalytics sendImportFailed should emit 1 event with \"BadRequestException\" cause","status":"passed","title":"should emit 1 event with \"BadRequestException\" cause"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501332557,"runtime":81,"slow":false,"start":1733501332476},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/common/transformers/redis-reply/strategies/utf8-formatter.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for null","status":"passed","title":"should return correct value for null"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for integer","status":"passed","title":"should return correct value for integer"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for string","status":"passed","title":"should return correct value for string"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for empty array","status":"passed","title":"should return correct value for empty array"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for nested array","status":"passed","title":"should return correct value for nested array"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for object","status":"passed","title":"should return correct value for object"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should return correct value for object","status":"passed","title":"should return correct value for object"},{"ancestorTitles":["UTF8FormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"UTF8FormatterStrategy format should correctly return string","status":"passed","title":"should correctly return string"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501333129,"runtime":554,"slow":false,"start":1733501332575},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/user/repositories/in-session.cloud-user.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["InSessionCloudUserRepository","get"],"duration":4,"failureMessages":[],"fullName":"InSessionCloudUserRepository get successfully get current user","status":"passed","title":"successfully get current user"},{"ancestorTitles":["InSessionCloudUserRepository","get"],"duration":1,"failureMessages":[],"fullName":"InSessionCloudUserRepository get should return null when there is no cloud session data","status":"passed","title":"should return null when there is no cloud session data"},{"ancestorTitles":["InSessionCloudUserRepository","update"],"duration":1,"failureMessages":[],"fullName":"InSessionCloudUserRepository update successfully update current user data","status":"passed","title":"successfully update current user data"},{"ancestorTitles":["InSessionCloudUserRepository","update"],"duration":2,"failureMessages":[],"fullName":"InSessionCloudUserRepository update successfully update current user accounts (replace array data)","status":"passed","title":"successfully update current user accounts (replace array data)"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501334711,"runtime":1339,"slow":false,"start":1733501333372},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/utils/keys.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["getTotalKeys"],"duration":1,"failureMessages":[],"fullName":"getTotalKeys Should return total from dbsize","status":"passed","title":"Should return total from dbsize"},{"ancestorTitles":["getTotalKeys"],"duration":1,"failureMessages":[],"fullName":"getTotalKeys Should return total from info (when dbsize returned error)","status":"passed","title":"Should return total from info (when dbsize returned error)"},{"ancestorTitles":["getTotalKeys"],"duration":1,"failureMessages":[],"fullName":"getTotalKeys Should return 0 since info keyspace hasn't keys values","status":"passed","title":"Should return 0 since info keyspace hasn't keys values"},{"ancestorTitles":["getTotalKeys"],"duration":0,"failureMessages":[],"fullName":"getTotalKeys Should return 0 since info returned empty string","status":"passed","title":"Should return 0 since info returned empty string"},{"ancestorTitles":["getTotalKeys"],"duration":0,"failureMessages":[],"fullName":"getTotalKeys Should return -1 when dbsize and info returned error","status":"passed","title":"Should return -1 when dbsize and info returned error"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501335051,"runtime":157,"slow":false,"start":1733501334894},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/subscription/utils/cloud-data-converter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["parseCloudSubscriptionCapiResponse"],"duration":1,"failureMessages":[],"fullName":"parseCloudSubscriptionCapiResponse Should return subscription","status":"passed","title":"Should return subscription"},{"ancestorTitles":["parseCloudSubscriptionCapiResponse"],"duration":0,"failureMessages":[],"fullName":"parseCloudSubscriptionCapiResponse Should return empty array","status":"passed","title":"Should return empty array"},{"ancestorTitles":["parseCloudSubscriptionCapiResponse"],"duration":1,"failureMessages":[],"fullName":"parseCloudSubscriptionCapiResponse Should return parsed array of subscriptions","status":"passed","title":"Should return parsed array of subscriptions"},{"ancestorTitles":["parseCloudSubscriptionsPlansCapiResponse"],"duration":0,"failureMessages":[],"fullName":"parseCloudSubscriptionsPlansCapiResponse Should return parsed array of regions","status":"passed","title":"Should return parsed array of regions"},{"ancestorTitles":["parseCloudSubscriptionsCloudRegionsApiResponse"],"duration":1,"failureMessages":[],"fullName":"parseCloudSubscriptionsCloudRegionsApiResponse Should return empty array","status":"passed","title":"Should return empty array"},{"ancestorTitles":["parseCloudSubscriptionsCloudRegionsApiResponse"],"duration":0,"failureMessages":[],"fullName":"parseCloudSubscriptionsCloudRegionsApiResponse Should return parsed array of regions","status":"passed","title":"Should return parsed array of regions"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501335662,"runtime":596,"slow":false,"start":1733501335066},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/providers/profiler-client.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ProfilerClientProvider"],"duration":13,"failureMessages":[],"fullName":"ProfilerClientProvider getOrCreateClient","status":"passed","title":"getOrCreateClient"},{"ancestorTitles":["ProfilerClientProvider"],"duration":1,"failureMessages":[],"fullName":"ProfilerClientProvider getClient","status":"passed","title":"getClient"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501336410,"runtime":550,"slow":false,"start":1733501335860},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/session/providers/single-user.session.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SingleUserSessionProvider","getSession"],"duration":3,"failureMessages":[],"fullName":"SingleUserSessionProvider getSession Should get session by hardcoded id","status":"passed","title":"Should get session by hardcoded id"},{"ancestorTitles":["SingleUserSessionProvider","createSession"],"duration":1,"failureMessages":[],"fullName":"SingleUserSessionProvider createSession Should create new session by hardcoded id","status":"passed","title":"Should create new session by hardcoded id"},{"ancestorTitles":["SingleUserSessionProvider","updateSessionData"],"duration":1,"failureMessages":[],"fullName":"SingleUserSessionProvider updateSessionData Should not affect existing data  by hardcoded id","status":"passed","title":"Should not affect existing data  by hardcoded id"},{"ancestorTitles":["SingleUserSessionProvider","deleteSession"],"duration":1,"failureMessages":[],"fullName":"SingleUserSessionProvider deleteSession should delete session by hardcoded id","status":"passed","title":"should delete session by hardcoded id"}]},{"numFailingTests":0,"numPassingTests":45,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501336748,"runtime":104,"slow":false,"start":1733501336644},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/glob-pattern-helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: h?llo for input: h?llo ","status":"passed","title":"should be output: h?llo for input: h?llo "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: h?llo for input: h\\?llo ","status":"passed","title":"should be output: h?llo for input: h\\?llo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: !hello for input: \\!hello ","status":"passed","title":"should be output: !hello for input: \\!hello "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: *hello for input: \\*hello ","status":"passed","title":"should be output: *hello for input: \\*hello "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: hello* for input: hello\\* ","status":"passed","title":"should be output: hello* for input: hello\\* "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: h(a|e)llo for input: h\\(a|e\\)llo ","status":"passed","title":"should be output: h(a|e)llo for input: h\\(a|e\\)llo "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: h[a-e]llo for input: h\\[a-e\\]llo ","status":"passed","title":"should be output: h[a-e]llo for input: h\\[a-e\\]llo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: h[^a]llo for input: h\\[^a\\]llo ","status":"passed","title":"should be output: h[^a]llo for input: h\\[^a\\]llo "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: h[a-e]llo\\:foo for input: h\\[a-e\\]llo\\\\:foo ","status":"passed","title":"should be output: h[a-e]llo\\:foo for input: h\\[a-e\\]llo\\\\:foo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: h{a,e}llo for input: h\\{a,e\\}llo ","status":"passed","title":"should be output: h{a,e}llo for input: h\\{a,e\\}llo "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: h{a,e}llo for input: h\\{a,e}llo ","status":"passed","title":"should be output: h{a,e}llo for input: h\\{a,e}llo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: h[a-e]llo\\* for input: h\\[a-e\\]llo\\\\\\* ","status":"passed","title":"should be output: h[a-e]llo\\* for input: h\\[a-e\\]llo\\\\\\* "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: h?(a)llo for input: h\\?(a)llo ","status":"passed","title":"should be output: h?(a)llo for input: h\\?(a)llo "},{"ancestorTitles":["unescapeGlob"],"duration":9,"failureMessages":[],"fullName":"unescapeGlob should be output: hello/!(a)llo for input: hello/\\!\\(a\\)llo ","status":"passed","title":"should be output: hello/!(a)llo for input: hello/\\!\\(a\\)llo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: hello/+(a)llo for input: hello/\\+(a)llo ","status":"passed","title":"should be output: hello/+(a)llo for input: hello/\\+(a)llo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: hello/@(a)llo for input: hello/\\@(a)llo ","status":"passed","title":"should be output: hello/@(a)llo for input: hello/\\@(a)llo "},{"ancestorTitles":["unescapeGlob"],"duration":0,"failureMessages":[],"fullName":"unescapeGlob should be output: hello/*(a)llo for input: hello/\\*(a)llo ","status":"passed","title":"should be output: hello/*(a)llo for input: hello/\\*(a)llo "},{"ancestorTitles":["unescapeGlob"],"duration":1,"failureMessages":[],"fullName":"unescapeGlob should be output: hello/?(a)llo for input: hello/\\?(a)llo ","status":"passed","title":"should be output: hello/?(a)llo for input: hello/\\?(a)llo "},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return true for input: ?ello","status":"passed","title":"should return true for input: ?ello"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: ??llo","status":"passed","title":"should return true for input: ??llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return false for input: \\?\\?llo","status":"passed","title":"should return false for input: \\?\\?llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: \\??llo","status":"passed","title":"should return true for input: \\??llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: ?\\?llo","status":"passed","title":"should return true for input: ?\\?llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return true for input: \\\\\\\\?\\?llo","status":"passed","title":"should return true for input: \\\\\\\\?\\?llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h?llo","status":"passed","title":"should return true for input: h?llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return false for input: h\\?llo","status":"passed","title":"should return false for input: h\\?llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h\\\\?llo","status":"passed","title":"should return true for input: h\\\\?llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return false for input: h\\\\\\?llo","status":"passed","title":"should return false for input: h\\\\\\?llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h????llo","status":"passed","title":"should return true for input: h????llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h\\????llo","status":"passed","title":"should return true for input: h\\????llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h????ll?o","status":"passed","title":"should return true for input: h????ll?o"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h*llo","status":"passed","title":"should return true for input: h*llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h**llo","status":"passed","title":"should return true for input: h**llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h***ll*o","status":"passed","title":"should return true for input: h***ll*o"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return false for input: \\*ello","status":"passed","title":"should return false for input: \\*ello"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return true for input: \\\\*ello","status":"passed","title":"should return true for input: \\\\*ello"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return false for input: \\\\\\*ello","status":"passed","title":"should return false for input: \\\\\\*ello"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h[ae]llo","status":"passed","title":"should return true for input: h[ae]llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h[^e]llo","status":"passed","title":"should return true for input: h[^e]llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h[a-b]llo","status":"passed","title":"should return true for input: h[a-b]llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return false for input: h[a-b\\]llo","status":"passed","title":"should return false for input: h[a-b\\]llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h[a-b\\\\]llo","status":"passed","title":"should return true for input: h[a-b\\\\]llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return false for input: h\\[a-b\\\\]llo","status":"passed","title":"should return false for input: h\\[a-b\\\\]llo"},{"ancestorTitles":["isRedisGlob"],"duration":0,"failureMessages":[],"fullName":"isRedisGlob should return true for input: h\\\\[a-b\\\\]llo","status":"passed","title":"should return true for input: h\\\\[a-b\\\\]llo"},{"ancestorTitles":["isRedisGlob"],"duration":1,"failureMessages":[],"fullName":"isRedisGlob should return false for input: h\\\\[a-b\\]llo","status":"passed","title":"should return false for input: h\\\\[a-b\\]llo"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501338093,"runtime":1301,"slow":false,"start":1733501336792},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cluster-monitor/strategies/cluster-nodes.info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ClusterNodesInfoStrategy","getClusterNodesFromRedis"],"duration":6,"failureMessages":[],"fullName":"ClusterNodesInfoStrategy getClusterNodesFromRedis should return cluster info","status":"passed","title":"should return cluster info"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501338804,"runtime":525,"slow":false,"start":1733501338279},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/providers/subscription.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SubscriptionProvider","createSubscription"],"duration":3,"failureMessages":[],"fullName":"SubscriptionProvider createSubscription should create simple subscription","status":"passed","title":"should create simple subscription"},{"ancestorTitles":["SubscriptionProvider","createSubscription"],"duration":1,"failureMessages":[],"fullName":"SubscriptionProvider createSubscription should create pattern subscription","status":"passed","title":"should create pattern subscription"},{"ancestorTitles":["SubscriptionProvider","createSubscription"],"duration":1,"failureMessages":[],"fullName":"SubscriptionProvider createSubscription should throw error since shard subscription is not supported yet","status":"passed","title":"should throw error since shard subscription is not supported yet"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501339193,"runtime":203,"slow":false,"start":1733501338990},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/job/transformers/cloud-job-data.transformer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["cloudJobDataTransformer"],"duration":1,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return class CreateDatabaseCloudJobDataDto {} when input is: [object Object]","status":"passed","title":"Should return class CreateDatabaseCloudJobDataDto {} when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return class CreateSubscriptionAndDatabaseCloudJobDataDto {} when input is: [object Object]","status":"passed","title":"Should return class CreateSubscriptionAndDatabaseCloudJobDataDto {} when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return class CreateSubscriptionAndDatabaseCloudJobDataDto {} when input is: [object Object]","status":"passed","title":"Should return class CreateSubscriptionAndDatabaseCloudJobDataDto {} when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":1,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return class ImportDatabaseCloudJobDataDto {} when input is: [object Object]","status":"passed","title":"Should return class ImportDatabaseCloudJobDataDto {} when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return undefined when input is: [object Object]","status":"passed","title":"Should return undefined when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return undefined when input is: [object Object]","status":"passed","title":"Should return undefined when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return undefined when input is: [object Object]","status":"passed","title":"Should return undefined when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return undefined when input is: [object Object]","status":"passed","title":"Should return undefined when input is: [object Object]"},{"ancestorTitles":["cloudJobDataTransformer"],"duration":0,"failureMessages":[],"fullName":"cloudJobDataTransformer Should return undefined when input is: null","status":"passed","title":"Should return undefined when input is: null"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501339234,"runtime":30,"slow":false,"start":1733501339204},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/bulk-action-progress.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkActionSummary","setTotal"],"duration":1,"failureMessages":[],"fullName":"BulkActionSummary setTotal should set total","status":"passed","title":"should set total"},{"ancestorTitles":["BulkActionSummary","setCursor + getCursor"],"duration":1,"failureMessages":[],"fullName":"BulkActionSummary setCursor + getCursor should set cursor and change scanned when cursor = 0","status":"passed","title":"should set cursor and change scanned when cursor = 0"},{"ancestorTitles":["BulkActionSummary","addScanned + getOverview"],"duration":1,"failureMessages":[],"fullName":"BulkActionSummary addScanned + getOverview should add scanned but not more than total","status":"passed","title":"should add scanned but not more than total"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501339322,"runtime":85,"slow":false,"start":1733501339237},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/common/transformers/redis-reply/strategies/ascii-formatter.strategey.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should return correct value for null","status":"passed","title":"should return correct value for null"},{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should return correct value for integer","status":"passed","title":"should return correct value for integer"},{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should return correct value for string","status":"passed","title":"should return correct value for string"},{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should return correct value for empty array","status":"passed","title":"should return correct value for empty array"},{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should return correct value for nested array","status":"passed","title":"should return correct value for nested array"},{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should return correct value for object","status":"passed","title":"should return correct value for object"},{"ancestorTitles":["ASCIIFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"ASCIIFormatterStrategy format should correctly return stringified json","status":"passed","title":"should correctly return stringified json"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501339423,"runtime":87,"slow":false,"start":1733501339336},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cli/services/cli-business/output-formatter/strategies/raw-formatter.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should return correct value for null","status":"passed","title":"should return correct value for null"},{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should return correct value for integer","status":"passed","title":"should return correct value for integer"},{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should return correct value for string","status":"passed","title":"should return correct value for string"},{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should return correct value for empty array","status":"passed","title":"should return correct value for empty array"},{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should return correct value for nested array","status":"passed","title":"should return correct value for nested array"},{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":0,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should return correct value for object","status":"passed","title":"should return correct value for object"},{"ancestorTitles":["Cli RawFormatterStrategy","format"],"duration":1,"failureMessages":[],"fullName":"Cli RawFormatterStrategy format should correctly return stringified json","status":"passed","title":"should correctly return stringified json"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501340432,"runtime":998,"slow":false,"start":1733501339434},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/utils/cluster.util.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["isCluster"],"duration":1,"failureMessages":[],"fullName":"isCluster cluster connection ok","status":"passed","title":"cluster connection ok"},{"ancestorTitles":["isCluster"],"duration":0,"failureMessages":[],"fullName":"isCluster cluster connection false","status":"passed","title":"cluster connection false"},{"ancestorTitles":["isCluster"],"duration":0,"failureMessages":[],"fullName":"isCluster cluster not supported","status":"passed","title":"cluster not supported"},{"ancestorTitles":["discoverClusterNodes"],"duration":1,"failureMessages":[],"fullName":"discoverClusterNodes should return nodes in a defined format","status":"passed","title":"should return nodes in a defined format"},{"ancestorTitles":["discoverClusterNodes"],"duration":1,"failureMessages":[],"fullName":"discoverClusterNodes cluster not supported","status":"passed","title":"cluster not supported"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501341684,"runtime":583,"slow":false,"start":1733501341101},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/server/repositories/local.server.repository.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LocalServerRepository","exists"],"duration":3,"failureMessages":[],"fullName":"LocalServerRepository exists should return false if entity does not exists in the database","status":"passed","title":"should return false if entity does not exists in the database"},{"ancestorTitles":["LocalServerRepository","exists"],"duration":1,"failureMessages":[],"fullName":"LocalServerRepository exists should return true if entity exists in the database","status":"passed","title":"should return true if entity exists in the database"},{"ancestorTitles":["LocalServerRepository","getOrCreate"],"duration":1,"failureMessages":[],"fullName":"LocalServerRepository getOrCreate should create server entity if it doesn't exists before","status":"passed","title":"should create server entity if it doesn't exists before"},{"ancestorTitles":["LocalServerRepository","getOrCreate"],"duration":1,"failureMessages":[],"fullName":"LocalServerRepository getOrCreate should get existing server","status":"passed","title":"should get existing server"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501342423,"runtime":543,"slow":false,"start":1733501341880},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/task/cloud-task.capi.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudTaskCapiService","getTask"],"duration":4,"failureMessages":[],"fullName":"CloudTaskCapiService getTask successfully get task","status":"passed","title":"successfully get task"},{"ancestorTitles":["CloudTaskCapiService","getTask"],"duration":13,"failureMessages":[],"fullName":"CloudTaskCapiService getTask should throw CloudApiUnauthorizedException exception","status":"passed","title":"should throw CloudApiUnauthorizedException exception"},{"ancestorTitles":["CloudTaskCapiService","getTask"],"duration":2,"failureMessages":[],"fullName":"CloudTaskCapiService getTask should throw CloudTaskNotFoundException exception","status":"passed","title":"should throw CloudTaskNotFoundException exception"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501343999,"runtime":1349,"slow":false,"start":1733501342650},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/feature/model/features-config.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FeaturesConfig","transform"],"duration":3,"failureMessages":[],"fullName":"FeaturesConfig transform input {\"controlNumber\":7.68,\"data\":{\"version\":2.6710000000000003,\"features\":{\"insightsRecommendations\":{\"perc\":[[1.25,8.45]],\"flag\":true,\"filters\":[{\"name\":\"agreements.analytics\",\"value\":true,\"cond\":\"eq\"}]}}}}","status":"passed","title":"input {\"controlNumber\":7.68,\"data\":{\"version\":2.6710000000000003,\"features\":{\"insightsRecommendations\":{\"perc\":[[1.25,8.45]],\"flag\":true,\"filters\":[{\"name\":\"agreements.analytics\",\"value\":true,\"cond\":\"eq\"}]}}}}"},{"ancestorTitles":["FeaturesConfig","transform"],"duration":9,"failureMessages":[],"fullName":"FeaturesConfig transform input {\"controlNumber\":7.68,\"data\":{\"version\":2.6710000000000003,\"features\":{\"insightsRecommendations\":{\"perc\":[[1.25,8.45]],\"flag\":true,\"filters\":[{\"or\":[{\"name\":\"settings.testValue\",\"value\":\"test\",\"cond\":\"eq\"},{\"and\":[{\"name\":\"agreements.analytics\",\"value\":true,\"cond\":\"eq\"},{\"or\":[{\"name\":\"settings.scanThreshold\",\"value\":500,\"cond\":\"eq\"},{\"name\":\"settings.batchSize\",\"value\":10,\"cond\":\"eq\"}]}]}]}]}}}}","status":"passed","title":"input {\"controlNumber\":7.68,\"data\":{\"version\":2.6710000000000003,\"features\":{\"insightsRecommendations\":{\"perc\":[[1.25,8.45]],\"flag\":true,\"filters\":[{\"or\":[{\"name\":\"settings.testValue\",\"value\":\"test\",\"cond\":\"eq\"},{\"and\":[{\"name\":\"agreements.analytics\",\"value\":true,\"cond\":\"eq\"},{\"or\":[{\"name\":\"settings.scanThreshold\",\"value\":500,\"cond\":\"eq\"},{\"name\":\"settings.batchSize\",\"value\":10,\"cond\":\"eq\"}]}]}]}]}}}}"},{"ancestorTitles":["FeaturesConfig","transform"],"duration":1,"failureMessages":[],"fullName":"FeaturesConfig transform input {}","status":"passed","title":"input {}"},{"ancestorTitles":["FeaturesConfig","transform"],"duration":0,"failureMessages":[],"fullName":"FeaturesConfig transform input null","status":"passed","title":"input null"},{"ancestorTitles":["FeaturesConfig","transform"],"duration":1,"failureMessages":[],"fullName":"FeaturesConfig transform input undefined","status":"passed","title":"input undefined"},{"ancestorTitles":["FeaturesConfig","transform"],"duration":1,"failureMessages":[],"fullName":"FeaturesConfig transform input \"incorrectdata\"","status":"passed","title":"input \"incorrectdata\""}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501344745,"runtime":550,"slow":false,"start":1733501344195},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/keys/scanner/scanner.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Scanner Manager"],"duration":1,"failureMessages":[],"fullName":"Scanner Manager Should support Standalone strategy for standalone connection type","status":"passed","title":"Should support Standalone strategy for standalone connection type"},{"ancestorTitles":["Scanner Manager"],"duration":0,"failureMessages":[],"fullName":"Scanner Manager Should support Standalone strategy for sentinel connection type","status":"passed","title":"Should support Standalone strategy for sentinel connection type"},{"ancestorTitles":["Scanner Manager"],"duration":0,"failureMessages":[],"fullName":"Scanner Manager Should support Cluster strategy for cluster connection type","status":"passed","title":"Should support Cluster strategy for cluster connection type"},{"ancestorTitles":["Scanner Manager"],"duration":1,"failureMessages":[],"fullName":"Scanner Manager Should throw error if no strategy","status":"passed","title":"Should throw error if no strategy"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501345474,"runtime":527,"slow":false,"start":1733501344947},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/json-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["JsonInfoStrategy","getLength"],"duration":5,"failureMessages":[],"fullName":"JsonInfoStrategy getLength should get length (object)","status":"passed","title":"should get length (object)"},{"ancestorTitles":["JsonInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"JsonInfoStrategy getLength should get length (array)","status":"passed","title":"should get length (array)"},{"ancestorTitles":["JsonInfoStrategy","getLength"],"duration":1,"failureMessages":[],"fullName":"JsonInfoStrategy getLength should get length (string)","status":"passed","title":"should get length (string)"},{"ancestorTitles":["JsonInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"JsonInfoStrategy getLength should get length (undefined)","status":"passed","title":"should get length (undefined)"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501347090,"runtime":1384,"slow":false,"start":1733501345706},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ai/query/providers/ai-query.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AiQueryProvider","getSocket"],"duration":4,"failureMessages":[],"fullName":"AiQueryProvider getSocket should successfully connect","status":"passed","title":"should successfully connect"},{"ancestorTitles":["AiQueryProvider","getSocket"],"duration":16,"failureMessages":[],"fullName":"AiQueryProvider getSocket should fail with AiQueryBadRequestException","status":"passed","title":"should fail with AiQueryBadRequestException"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501347626,"runtime":349,"slow":false,"start":1733501347277},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/try-rdi.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TryRdiStrategyStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"TryRdiStrategyStrategy isRecommendationReached should return true when connectionType is cluster","status":"passed","title":"should return true when connectionType is cluster"},{"ancestorTitles":["TryRdiStrategyStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"TryRdiStrategyStrategy isRecommendationReached should return true when provider is Redis Enterprise","status":"passed","title":"should return true when provider is Redis Enterprise"},{"ancestorTitles":["TryRdiStrategyStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"TryRdiStrategyStrategy isRecommendationReached should return true when provider is Redis Enterprise and connectionType is cluster","status":"passed","title":"should return true when provider is Redis Enterprise and connectionType is cluster"},{"ancestorTitles":["TryRdiStrategyStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"TryRdiStrategyStrategy isRecommendationReached should return false when provider is not Redis Enterprise and connectionType is not cluster","status":"passed","title":"should return false when provider is not Redis Enterprise and connectionType is not cluster"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501348215,"runtime":518,"slow":false,"start":1733501347697},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/capi-key/cloud-capi-key.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudCapiKeyAnalytics","sendCloudAccountKeyGenerated"],"duration":3,"failureMessages":[],"fullName":"CloudCapiKeyAnalytics sendCloudAccountKeyGenerated should emit succeed event with manifest \"yes\"","status":"passed","title":"should emit succeed event with manifest \"yes\""},{"ancestorTitles":["CloudCapiKeyAnalytics","sendCloudAccountKeyGenerationFailed"],"duration":1,"failureMessages":[],"fullName":"CloudCapiKeyAnalytics sendCloudAccountKeyGenerationFailed should emit 1 event with \"Error\" cause","status":"passed","title":"should emit 1 event with \"Error\" cause"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501349397,"runtime":1006,"slow":false,"start":1733501348391},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/subscription/providers/cloud-subscription.api.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudSubscriptionApiProvider","getCloudRegions"],"duration":8,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getCloudRegions successfully get cloud regions","status":"passed","title":"successfully get cloud regions"},{"ancestorTitles":["CloudSubscriptionApiProvider","getCloudRegions"],"duration":9,"failureMessages":[],"fullName":"CloudSubscriptionApiProvider getCloudRegions throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501350359,"runtime":518,"slow":false,"start":1733501349841},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/emitters/file.logs-emiter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FileLogsEmitter"],"duration":0,"failureMessages":[],"fullName":"FileLogsEmitter initialization","status":"passed","title":"initialization"},{"ancestorTitles":["FileLogsEmitter"],"duration":9,"failureMessages":[],"fullName":"FileLogsEmitter emit","status":"passed","title":"emit"},{"ancestorTitles":["FileLogsEmitter"],"duration":0,"failureMessages":[],"fullName":"FileLogsEmitter emit","status":"passed","title":"emit"},{"ancestorTitles":["FileLogsEmitter"],"duration":1,"failureMessages":[],"fullName":"FileLogsEmitter addProfilerClient","status":"passed","title":"addProfilerClient"},{"ancestorTitles":["FileLogsEmitter"],"duration":0,"failureMessages":[],"fullName":"FileLogsEmitter removeProfilerClient","status":"passed","title":"removeProfilerClient"},{"ancestorTitles":["FileLogsEmitter"],"duration":0,"failureMessages":[],"fullName":"FileLogsEmitter flushLogs","status":"passed","title":"flushLogs"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501351035,"runtime":507,"slow":false,"start":1733501350528},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/rdi-pipeline.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiPipelineAnalytics","sendRdiInstanceDeleted"],"duration":4,"failureMessages":[],"fullName":"RdiPipelineAnalytics sendRdiInstanceDeleted should emit event when rdi pipeline deployed successfully","status":"passed","title":"should emit event when rdi pipeline deployed successfully"},{"ancestorTitles":["RdiPipelineAnalytics","sendRdiInstanceDeleted"],"duration":1,"failureMessages":[],"fullName":"RdiPipelineAnalytics sendRdiInstanceDeleted should emit event when rdi pipeline is not deployed successfully","status":"passed","title":"should emit event when rdi pipeline is not deployed successfully"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501352468,"runtime":1213,"slow":false,"start":1733501351255},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/providers/rdi.client.factory.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiClientFactory","createClient"],"duration":4,"failureMessages":[],"fullName":"RdiClientFactory createClient should create client","status":"passed","title":"should create client"},{"ancestorTitles":["RdiClientFactory","createClient"],"duration":12,"failureMessages":[],"fullName":"RdiClientFactory createClient should not create client if auth request will failed","status":"passed","title":"should not create client if auth request will failed"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501353143,"runtime":495,"slow":false,"start":1733501352648},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/redis-reply-converter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["convertRedisReplyInfoToObject"],"duration":1,"failureMessages":[],"fullName":"convertRedisReplyInfoToObject should return object in a defined format","status":"passed","title":"should return object in a defined format"},{"ancestorTitles":["convertRedisReplyInfoToObject"],"duration":0,"failureMessages":[],"fullName":"convertRedisReplyInfoToObject should return empty object when incorrect string passed","status":"passed","title":"should return empty object when incorrect string passed"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501353840,"runtime":521,"slow":false,"start":1733501353319},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/user/cloud-user.capi.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudUserCapiService","getCurrentAccount"],"duration":4,"failureMessages":[],"fullName":"CloudUserCapiService getCurrentAccount successfully get current account info","status":"passed","title":"successfully get current account info"},{"ancestorTitles":["CloudUserCapiService","getCurrentAccount"],"duration":13,"failureMessages":[],"fullName":"CloudUserCapiService getCurrentAccount throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501354183,"runtime":112,"slow":false,"start":1733501354071},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/converter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":2,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 0.0.1 for input: 1","status":"passed","title":"should be output: 0.0.1 for input: 1"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":1,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 0.0.10 for input: 10","status":"passed","title":"should be output: 0.0.10 for input: 10"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 0.1.0 for input: 100","status":"passed","title":"should be output: 0.1.0 for input: 100"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":1,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 0.10.0 for input: 1000","status":"passed","title":"should be output: 0.10.0 for input: 1000"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 1.0.0 for input: 10000","status":"passed","title":"should be output: 1.0.0 for input: 10000"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 10.0.0 for input: 100000","status":"passed","title":"should be output: 10.0.0 for input: 100000"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":1,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 100.0.0 for input: 1000000","status":"passed","title":"should be output: 100.0.0 for input: 1000000"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 1.4.10 for input: 10410","status":"passed","title":"should be output: 1.4.10 for input: 10410"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":1,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 1.0.8 for input: 10008","status":"passed","title":"should be output: 1.0.8 for input: 10008"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 2.4.7 for input: 20407","status":"passed","title":"should be output: 2.4.7 for input: 20407"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":1,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 2.0.11 for input: 20011","status":"passed","title":"should be output: 2.0.11 for input: 20011"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: 2.2.6 for input: 20206","status":"passed","title":"should be output: 2.2.6 for input: 20206"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":1,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: undefined for input: 0","status":"passed","title":"should be output: undefined for input: 0"},{"ancestorTitles":["convertIntToSemanticVersionTests"],"duration":0,"failureMessages":[],"fullName":"convertIntToSemanticVersionTests should be output: undefined for input: \"string\"","status":"passed","title":"should be output: undefined for input: \"string\""},{"ancestorTitles":["convertStringToNumber"],"duration":0,"failureMessages":[],"fullName":"convertStringToNumber should be output: 1 for input: [\"1\"]","status":"passed","title":"should be output: 1 for input: [\"1\"]"},{"ancestorTitles":["convertStringToNumber"],"duration":1,"failureMessages":[],"fullName":"convertStringToNumber should be output: 1 for input: [1]","status":"passed","title":"should be output: 1 for input: [1]"},{"ancestorTitles":["convertStringToNumber"],"duration":1,"failureMessages":[],"fullName":"convertStringToNumber should be output: undefined for input: [{\"some\":\"obj\"}]","status":"passed","title":"should be output: undefined for input: [{\"some\":\"obj\"}]"},{"ancestorTitles":["convertStringToNumber"],"duration":0,"failureMessages":[],"fullName":"convertStringToNumber should be output: 11 for input: [{\"some\":\"obj\"},11]","status":"passed","title":"should be output: 11 for input: [{\"some\":\"obj\"},11]"},{"ancestorTitles":["convertStringToNumber"],"duration":1,"failureMessages":[],"fullName":"convertStringToNumber should be output: 11 for input: [\"asd45\",11]","status":"passed","title":"should be output: 11 for input: [\"asd45\",11]"},{"ancestorTitles":["convertStringToNumber"],"duration":0,"failureMessages":[],"fullName":"convertStringToNumber should be output: 123.123 for input: [\"123.123\",11]","status":"passed","title":"should be output: 123.123 for input: [\"123.123\",11]"},{"ancestorTitles":["convertStringToNumber"],"duration":1,"failureMessages":[],"fullName":"convertStringToNumber should be output: 11 for input: [null,11]","status":"passed","title":"should be output: 11 for input: [null,11]"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501354659,"runtime":428,"slow":false,"start":1733501354231},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/common/providers/cloud.capi.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudCapiProvider","getPrefix"],"duration":1,"failureMessages":[],"fullName":"CloudCapiProvider getPrefix {\"expected\":\"\"}","status":"passed","title":"{\"expected\":\"\"}"},{"ancestorTitles":["CloudCapiProvider","getPrefix"],"duration":1,"failureMessages":[],"fullName":"CloudCapiProvider getPrefix {\"input\":\"fixed\",\"expected\":\"/fixed\"}","status":"passed","title":"{\"input\":\"fixed\",\"expected\":\"/fixed\"}"},{"ancestorTitles":["CloudCapiProvider","getPrefix"],"duration":1,"failureMessages":[],"fullName":"CloudCapiProvider getPrefix {\"input\":\"flexible\",\"expected\":\"\"}","status":"passed","title":"{\"input\":\"flexible\",\"expected\":\"\"}"},{"ancestorTitles":["CloudCapiProvider","getHeaders"],"duration":0,"failureMessages":[],"fullName":"CloudCapiProvider getHeaders {\"input\":{},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\"}}","status":"passed","title":"{\"input\":{},\"expected\":{\"User-Agent\":\"RedisInsight/2.60.0\"}}"},{"ancestorTitles":["CloudCapiProvider","getHeaders"],"duration":0,"failureMessages":[],"fullName":"CloudCapiProvider getHeaders {\"input\":{\"capiKey\":\"key\"},\"expected\":{\"x-api-key\":\"key\",\"User-Agent\":\"RedisInsight/2.60.0\"}}","status":"passed","title":"{\"input\":{\"capiKey\":\"key\"},\"expected\":{\"x-api-key\":\"key\",\"User-Agent\":\"RedisInsight/2.60.0\"}}"},{"ancestorTitles":["CloudCapiProvider","getHeaders"],"duration":0,"failureMessages":[],"fullName":"CloudCapiProvider getHeaders {\"input\":{\"capiSecret\":\"secret\"},\"expected\":{\"x-api-secret-key\":\"secret\",\"User-Agent\":\"RedisInsight/2.60.0\"}}","status":"passed","title":"{\"input\":{\"capiSecret\":\"secret\"},\"expected\":{\"x-api-secret-key\":\"secret\",\"User-Agent\":\"RedisInsight/2.60.0\"}}"},{"ancestorTitles":["CloudCapiProvider","getHeaders"],"duration":1,"failureMessages":[],"fullName":"CloudCapiProvider getHeaders {\"input\":{\"capiKey\":\"key\",\"capiSecret\":\"secret\"},\"expected\":{\"x-api-key\":\"key\",\"x-api-secret-key\":\"secret\",\"User-Agent\":\"RedisInsight/2.60.0\"}}","status":"passed","title":"{\"input\":{\"capiKey\":\"key\",\"capiSecret\":\"secret\"},\"expected\":{\"x-api-key\":\"key\",\"x-api-secret-key\":\"secret\",\"User-Agent\":\"RedisInsight/2.60.0\"}}"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501355339,"runtime":607,"slow":false,"start":1733501354732},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/rts.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RTSStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"RTSStrategy isRecommendationReached should return false when no timestamp in member","status":"passed","title":"should return false when no timestamp in member"},{"ancestorTitles":["RTSStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"RTSStrategy isRecommendationReached should return true when members has timestamp in memberName","status":"passed","title":"should return true when members has timestamp in memberName"},{"ancestorTitles":["RTSStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"RTSStrategy isRecommendationReached should return true when members has timestamp in score","status":"passed","title":"should return true when members has timestamp in score"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501355517,"runtime":106,"slow":false,"start":1733501355411},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cli/services/cli-business/output-formatter/output-formatter-manager.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["OutputFormatterManager"],"duration":0,"failureMessages":[],"fullName":"OutputFormatterManager Should throw error if no strategy","status":"passed","title":"Should throw error if no strategy"},{"ancestorTitles":["OutputFormatterManager"],"duration":0,"failureMessages":[],"fullName":"OutputFormatterManager Should add strategy to formatter and get it back","status":"passed","title":"Should add strategy to formatter and get it back"},{"ancestorTitles":["OutputFormatterManager"],"duration":0,"failureMessages":[],"fullName":"OutputFormatterManager Should support TextFormatter strategy","status":"passed","title":"Should support TextFormatter strategy"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501356042,"runtime":506,"slow":false,"start":1733501355536},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/runners/abstract.bulk-action.runner.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AbstractBulkActionRunner","getProgress + getSummary"],"duration":1,"failureMessages":[],"fullName":"AbstractBulkActionRunner getProgress + getSummary should get progress","status":"passed","title":"should get progress"}]},{"numFailingTests":0,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501356268,"runtime":47,"slow":false,"start":1733501356221},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/base.helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["numberWithSpaces"],"duration":1,"failureMessages":[],"fullName":"numberWithSpaces should be output: 0 for input: 0 ","status":"passed","title":"should be output: 0 for input: 0 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: 10 for input: 10 ","status":"passed","title":"should be output: 10 for input: 10 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: 100 for input: 100 ","status":"passed","title":"should be output: 100 for input: 100 "},{"ancestorTitles":["numberWithSpaces"],"duration":1,"failureMessages":[],"fullName":"numberWithSpaces should be output: 1 000 for input: 1000 ","status":"passed","title":"should be output: 1 000 for input: 1000 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: 1 000.001 for input: 1000.001 ","status":"passed","title":"should be output: 1 000.001 for input: 1000.001 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: 5 500 for input: 5500 ","status":"passed","title":"should be output: 5 500 for input: 5500 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: 1 000 000 for input: 1000000 ","status":"passed","title":"should be output: 1 000 000 for input: 1000000 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: 1 233 543 234 543 243 for input: 1233543234543243 ","status":"passed","title":"should be output: 1 233 543 234 543 243 for input: 1233543234543243 "},{"ancestorTitles":["numberWithSpaces"],"duration":0,"failureMessages":[],"fullName":"numberWithSpaces should be output: NaN for input: NaN ","status":"passed","title":"should be output: NaN for input: NaN "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input: [object Object] ","status":"passed","title":"should be output: true for input: [object Object] "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input: [object Object] ","status":"passed","title":"should be output: true for input: [object Object] "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input:  ","status":"passed","title":"should be output: true for input:  "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input: 123,123 ","status":"passed","title":"should be output: true for input: 123,123 "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input: [] ","status":"passed","title":"should be output: true for input: [] "},{"ancestorTitles":["isJson"],"duration":1,"failureMessages":[],"fullName":"isJson should be output: true for input: [123, \"123\"] ","status":"passed","title":"should be output: true for input: [123, \"123\"] "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input: {} ","status":"passed","title":"should be output: true for input: {} "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: true for input: {\"foo\": \"bar\"} ","status":"passed","title":"should be output: true for input: {\"foo\": \"bar\"} "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: false for input: null ","status":"passed","title":"should be output: false for input: null "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: false for input:  ","status":"passed","title":"should be output: false for input:  "},{"ancestorTitles":["isJson"],"duration":1,"failureMessages":[],"fullName":"isJson should be output: false for input: 123 ","status":"passed","title":"should be output: false for input: 123 "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: false for input: 0 ","status":"passed","title":"should be output: false for input: 0 "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: false for input: 123 ","status":"passed","title":"should be output: false for input: 123 "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: false for input: Infinity ","status":"passed","title":"should be output: false for input: Infinity "},{"ancestorTitles":["isJson"],"duration":0,"failureMessages":[],"fullName":"isJson should be output: false for input: NaN ","status":"passed","title":"should be output: false for input: NaN "},{"ancestorTitles":["isJson"],"duration":1,"failureMessages":[],"fullName":"isJson should be output: false for input: undefined ","status":"passed","title":"should be output: false for input: undefined "}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501356779,"runtime":508,"slow":false,"start":1733501356271},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/runners/simple/delete.bulk-action.simple.runner.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DeleteBulkActionSimpleRunner"],"duration":1,"failureMessages":[],"fullName":"DeleteBulkActionSimpleRunner prepareCommands 3 commands","status":"passed","title":"prepareCommands 3 commands"},{"ancestorTitles":["DeleteBulkActionSimpleRunner"],"duration":1,"failureMessages":[],"fullName":"DeleteBulkActionSimpleRunner prepareCommands 0 commands","status":"passed","title":"prepareCommands 0 commands"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501358211,"runtime":1211,"slow":false,"start":1733501357000},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/database-recommendation.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseRecommendationAnalytics","sendInstanceAddedEvent"],"duration":3,"failureMessages":[],"fullName":"DatabaseRecommendationAnalytics sendInstanceAddedEvent should emit event with recommendationName and provider","status":"passed","title":"should emit event with recommendationName and provider"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501358931,"runtime":539,"slow":false,"start":1733501358392},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/task/providers/cloud-task.capi.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudTaskCapiProvider","getTask"],"duration":4,"failureMessages":[],"fullName":"CloudTaskCapiProvider getTask successfully get capi access key","status":"passed","title":"successfully get capi access key"},{"ancestorTitles":["CloudTaskCapiProvider","getTask"],"duration":5,"failureMessages":[],"fullName":"CloudTaskCapiProvider getTask throw CloudApiUnauthorizedException exception","status":"passed","title":"throw CloudApiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501359177,"runtime":69,"slow":false,"start":1733501359108},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-deploy-failed.exception.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiPipelineDeployFailedException"],"duration":1,"failureMessages":[],"fullName":"RdiPipelineDeployFailedException should create an exception with default message and status code","status":"passed","title":"should create an exception with default message and status code"},{"ancestorTitles":["RdiPipelineDeployFailedException"],"duration":1,"failureMessages":[],"fullName":"RdiPipelineDeployFailedException should create an exception with custom message and error","status":"passed","title":"should create an exception with custom message and error"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501359255,"runtime":71,"slow":false,"start":1733501359184},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-start-pipeline-failed.exception.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiStartPipelineFailedException"],"duration":1,"failureMessages":[],"fullName":"RdiStartPipelineFailedException should create an exception with default message and status code","status":"passed","title":"should create an exception with default message and status code"},{"ancestorTitles":["RdiStartPipelineFailedException"],"duration":1,"failureMessages":[],"fullName":"RdiStartPipelineFailedException should create an exception with custom message and error","status":"passed","title":"should create an exception with custom message and error"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501359341,"runtime":72,"slow":false,"start":1733501359269},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-reset-pipeline-failed.exception.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiResetPipelineFailedException"],"duration":1,"failureMessages":[],"fullName":"RdiResetPipelineFailedException should create an exception with default message and status code","status":"passed","title":"should create an exception with default message and status code"},{"ancestorTitles":["RdiResetPipelineFailedException"],"duration":0,"failureMessages":[],"fullName":"RdiResetPipelineFailedException should create an exception with custom message and error","status":"passed","title":"should create an exception with custom message and error"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501359417,"runtime":69,"slow":false,"start":1733501359348},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-stop-pipeline-failed.exception.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiStopPipelineFailedException"],"duration":0,"failureMessages":[],"fullName":"RdiStopPipelineFailedException should create an exception with default message and status code","status":"passed","title":"should create an exception with default message and status code"},{"ancestorTitles":["RdiStopPipelineFailedException"],"duration":0,"failureMessages":[],"fullName":"RdiStopPipelineFailedException should create an exception with custom message and error","status":"passed","title":"should create an exception with custom message and error"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501359513,"runtime":82,"slow":false,"start":1733501359431},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/validators/serializedJson.validator.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (Boolean)","status":"passed","title":"return true when serialized (Boolean)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":1,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (Null)","status":"passed","title":"return true when serialized (Null)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (Number)","status":"passed","title":"return true when serialized (Number)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (String)","status":"passed","title":"return true when serialized (String)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (Empty String)","status":"passed","title":"return true when serialized (Empty String)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (Object)","status":"passed","title":"return true when serialized (Object)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when serialized (Array)","status":"passed","title":"return true when serialized (Array)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when not serializes (Boolean)","status":"passed","title":"return true when not serializes (Boolean)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when not serializes (Null)","status":"passed","title":"return true when not serializes (Null)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return true when not serializes (Number)","status":"passed","title":"return true when not serializes (Number)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return false when not serializes (String)","status":"passed","title":"return false when not serializes (String)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return false when not serializes (Empty String)","status":"passed","title":"return false when not serializes (Empty String)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":1,"failureMessages":[],"fullName":"SerializedJsonValidator return false when not serializes (Object)","status":"passed","title":"return false when not serializes (Object)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator return false when not serializes (Array)","status":"passed","title":"return false when not serializes (Array)"},{"ancestorTitles":["SerializedJsonValidator"],"duration":0,"failureMessages":[],"fullName":"SerializedJsonValidator should return particular message by default","status":"passed","title":"should return particular message by default"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501360072,"runtime":549,"slow":false,"start":1733501359523},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/user/providers/cloud-user.capi.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CloudUserCapiProvider","getCurrentAccount"],"duration":4,"failureMessages":[],"fullName":"CloudUserCapiProvider getCurrentAccount successfully get cloud capi account","status":"passed","title":"successfully get cloud capi account"},{"ancestorTitles":["CloudUserCapiProvider","getCurrentAccount"],"duration":5,"failureMessages":[],"fullName":"CloudUserCapiProvider getCurrentAccount throw CloudCapiUnauthorizedException exception","status":"passed","title":"throw CloudCapiUnauthorizedException exception"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501361527,"runtime":1230,"slow":false,"start":1733501360297},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/rdi.analytics.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiAnalytics","sendRdiInstanceDeleted"],"duration":4,"failureMessages":[],"fullName":"RdiAnalytics sendRdiInstanceDeleted should emit event when rdi instance is deleted successfully","status":"passed","title":"should emit event when rdi instance is deleted successfully"},{"ancestorTitles":["RdiAnalytics","sendRdiInstanceDeleted"],"duration":1,"failureMessages":[],"fullName":"RdiAnalytics sendRdiInstanceDeleted should emit event when rdi instance is not deleted successfully","status":"passed","title":"should emit event when rdi instance is not deleted successfully"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501362045,"runtime":333,"slow":false,"start":1733501361712},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/compression-for-list.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CompressionForListStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"CompressionForListStrategy isRecommendationReached should return false when list length < 1 000","status":"passed","title":"should return false when list length < 1 000"},{"ancestorTitles":["CompressionForListStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"CompressionForListStrategy isRecommendationReached should return true when list length > 1 000","status":"passed","title":"should return true when list length > 1 000"},{"ancestorTitles":["CompressionForListStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"CompressionForListStrategy isRecommendationReached should return false when not list key","status":"passed","title":"should return false when not list key"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501362455,"runtime":337,"slow":false,"start":1733501362118},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/big-string.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BigStringStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"BigStringStrategy isRecommendationReached should return false when string size < 5 000 000","status":"passed","title":"should return false when string size < 5 000 000"},{"ancestorTitles":["BigStringStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"BigStringStrategy isRecommendationReached should return true when string size > 5 000 000","status":"passed","title":"should return true when string size > 5 000 000"},{"ancestorTitles":["BigStringStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"BigStringStrategy isRecommendationReached should return false when not string key","status":"passed","title":"should return false when not string key"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501362854,"runtime":333,"slow":false,"start":1733501362521},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/key-info.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["KeysScanner","getStrategy"],"duration":9,"failureMessages":[],"fullName":"KeysScanner getStrategy should return GraphInfoStrategy for type: graphdata","status":"passed","title":"should return GraphInfoStrategy for type: graphdata"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return HashInfoStrategy for type: hash","status":"passed","title":"should return HashInfoStrategy for type: hash"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return JsonInfoStrategy for type: ReJSON-RL","status":"passed","title":"should return JsonInfoStrategy for type: ReJSON-RL"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return ListInfoStrategy for type: list","status":"passed","title":"should return ListInfoStrategy for type: list"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return SetInfoStrategy for type: set","status":"passed","title":"should return SetInfoStrategy for type: set"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return StreamInfoStrategy for type: stream","status":"passed","title":"should return StreamInfoStrategy for type: stream"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return StringInfoStrategy for type: string","status":"passed","title":"should return StringInfoStrategy for type: string"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return TsInfoStrategy for type: TSDB-TYPE","status":"passed","title":"should return TsInfoStrategy for type: TSDB-TYPE"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":1,"failureMessages":[],"fullName":"KeysScanner getStrategy should return GraphInfoStrategy for type: zset","status":"passed","title":"should return GraphInfoStrategy for type: zset"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return DefaultInfoStrategy for type: default","status":"passed","title":"should return DefaultInfoStrategy for type: default"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return DefaultInfoStrategy for type: unknown","status":"passed","title":"should return DefaultInfoStrategy for type: unknown"},{"ancestorTitles":["KeysScanner","getStrategy"],"duration":0,"failureMessages":[],"fullName":"KeysScanner getStrategy should return DefaultInfoStrategy for type: null","status":"passed","title":"should return DefaultInfoStrategy for type: null"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501363017,"runtime":106,"slow":false,"start":1733501362911},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/common/transformers/redis-reply/formatter-manager.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FormatterManager"],"duration":1,"failureMessages":[],"fullName":"FormatterManager Should throw error if no strategy","status":"passed","title":"Should throw error if no strategy"},{"ancestorTitles":["FormatterManager"],"duration":0,"failureMessages":[],"fullName":"FormatterManager Should add strategy to formatter and get it back","status":"passed","title":"Should add strategy to formatter and get it back"},{"ancestorTitles":["FormatterManager"],"duration":0,"failureMessages":[],"fullName":"FormatterManager Should support TextFormatter strategy","status":"passed","title":"Should support TextFormatter strategy"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501363364,"runtime":336,"slow":false,"start":1733501363028},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/big-set.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BigSetStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"BigSetStrategy isRecommendationReached should return false when set length < 1 000","status":"passed","title":"should return false when set length < 1 000"},{"ancestorTitles":["BigSetStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"BigSetStrategy isRecommendationReached should return false when not set key","status":"passed","title":"should return false when not set key"},{"ancestorTitles":["BigSetStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"BigSetStrategy isRecommendationReached should return true when set length > 1 000","status":"passed","title":"should return true when set length > 1 000"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501363750,"runtime":316,"slow":false,"start":1733501363434},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/certificate/transformers/client-cert.transformer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class UseClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.PickType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class UseClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.PickType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: null","status":"passed","title":"Should return class CreateClientCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(client_certificate_1.ClientCertificate, ['id'])) {} when input is: null"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501364893,"runtime":1079,"slow":false,"start":1733501363814},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/encryption/strategies/plain-encryption.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PlainEncryptionStrategy","encrypt"],"duration":4,"failureMessages":[],"fullName":"PlainEncryptionStrategy encrypt Should return unencrypted data","status":"passed","title":"Should return unencrypted data"},{"ancestorTitles":["PlainEncryptionStrategy","decrypt"],"duration":9,"failureMessages":[],"fullName":"PlainEncryptionStrategy decrypt Should return plain data","status":"passed","title":"Should return plain data"},{"ancestorTitles":["PlainEncryptionStrategy","decrypt"],"duration":0,"failureMessages":[],"fullName":"PlainEncryptionStrategy decrypt Should return null when encryption doesn't match PLAIN","status":"passed","title":"Should return null when encryption doesn't match PLAIN"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501365403,"runtime":330,"slow":false,"start":1733501365073},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/big-amount-connected-clients.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BigAmountConnectedClientsStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"BigAmountConnectedClientsStrategy isRecommendationReached should return false when connectedClients less then 100","status":"passed","title":"should return false when connectedClients less then 100"},{"ancestorTitles":["BigAmountConnectedClientsStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"BigAmountConnectedClientsStrategy isRecommendationReached should return true when connectedClients more then 100","status":"passed","title":"should return true when connectedClients more then 100"},{"ancestorTitles":["BigAmountConnectedClientsStrategy","isRecommendationReached","cluster"],"duration":0,"failureMessages":[],"fullName":"BigAmountConnectedClientsStrategy isRecommendationReached cluster should return true when connectedClients more then 100 in one of the nodes","status":"passed","title":"should return true when connectedClients more then 100 in one of the nodes"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501365627,"runtime":151,"slow":false,"start":1733501365476},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/certificate/transformers/ca-cert.transformer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["caCertTransformer"],"duration":7,"failureMessages":[],"fullName":"caCertTransformer Should return class UseCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.PickType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class UseCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.PickType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: null","status":"passed","title":"Should return class CreateCaCertificateDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ca_certificate_1.CaCertificate, ['id'])) {} when input is: null"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501365698,"runtime":67,"slow":false,"start":1733501365631},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-pipeline.forbidden.exception.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiPipelineForbiddenException"],"duration":1,"failureMessages":[],"fullName":"RdiPipelineForbiddenException should create a RdiPipelineForbiddenException with default message and status code","status":"passed","title":"should create a RdiPipelineForbiddenException with default message and status code"},{"ancestorTitles":["RdiPipelineForbiddenException"],"duration":0,"failureMessages":[],"fullName":"RdiPipelineForbiddenException should create a RdiPipelineForbiddenException with custom message and status code","status":"passed","title":"should create a RdiPipelineForbiddenException with custom message and status code"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501365888,"runtime":183,"slow":false,"start":1733501365705},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis/connection/redis.connection.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisConnectionStrategy"],"duration":0,"failureMessages":[],"fullName":"RedisConnectionStrategy should generate a client name with all fields separated by dashes","status":"passed","title":"should generate a client name with all fields separated by dashes"},{"ancestorTitles":["RedisConnectionStrategy"],"duration":1,"failureMessages":[],"fullName":"RedisConnectionStrategy should generate a default client name if all fields are missing","status":"passed","title":"should generate a default client name if all fields are missing"},{"ancestorTitles":["RedisConnectionStrategy"],"duration":0,"failureMessages":[],"fullName":"RedisConnectionStrategy should generate a default client name if all fields are missing","status":"passed","title":"should generate a default client name if all fields are missing"},{"ancestorTitles":["RedisConnectionStrategy"],"duration":0,"failureMessages":[],"fullName":"RedisConnectionStrategy should generate a default client name if all fields are missing","status":"passed","title":"should generate a default client name if all fields are missing"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501366100,"runtime":190,"slow":false,"start":1733501365910},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/ssh/transformers/ssh-options.transformer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateCertSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['password', 'id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateCertSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['password', 'id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":0,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: [object Object]","status":"passed","title":"Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: [object Object]"},{"ancestorTitles":["caCertTransformer"],"duration":1,"failureMessages":[],"fullName":"caCertTransformer Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: null","status":"passed","title":"Should return class CreateBasicSshOptionsDto extends\n/* istanbul ignore next */\n((0, swagger_1.OmitType)(ssh_options_1.SshOptions, ['privateKey', 'passphrase', 'id'])) {} when input is: null"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501367267,"runtime":1131,"slow":false,"start":1733501366136},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/pub-sub/providers/redis-client.provider.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisClientProvider","createClient"],"duration":3,"failureMessages":[],"fullName":"RedisClientProvider createClient should create redis client","status":"passed","title":"should create redis client"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501367532,"runtime":64,"slow":false,"start":1733501367468},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/rdi/exceptions/rdi-pipeline.timeout-error.exception.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RdiPipelineTimeoutException"],"duration":1,"failureMessages":[],"fullName":"RdiPipelineTimeoutException should create a RdiPipelineTimeoutException with default message and status code","status":"passed","title":"should create a RdiPipelineTimeoutException with default message and status code"},{"ancestorTitles":["RdiPipelineTimeoutException"],"duration":0,"failureMessages":[],"fullName":"RdiPipelineTimeoutException should create a RdiPipelineTimeoutException with custom message and status code","status":"passed","title":"should create a RdiPipelineTimeoutException with custom message and status code"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501369571,"runtime":2036,"slow":false,"start":1733501367535},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/promise-with-timeout.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["promiseWithTimeout"],"duration":1001,"failureMessages":[],"fullName":"promiseWithTimeout should throw timeout exception","status":"passed","title":"should throw timeout exception"},{"ancestorTitles":["promiseWithTimeout"],"duration":501,"failureMessages":[],"fullName":"promiseWithTimeout should resolve promise","status":"passed","title":"should resolve promise"},{"ancestorTitles":["promiseWithTimeout"],"duration":501,"failureMessages":[],"fullName":"promiseWithTimeout should reject promise","status":"passed","title":"should reject promise"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501369912,"runtime":338,"slow":false,"start":1733501369574},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/string-to-json.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StringToJsonStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"StringToJsonStrategy isRecommendationReached should return false when string value not object or array","status":"passed","title":"should return false when string value not object or array"},{"ancestorTitles":["StringToJsonStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"StringToJsonStrategy isRecommendationReached should return true when string value is object or array","status":"passed","title":"should return true when string value is object or array"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501370489,"runtime":512,"slow":false,"start":1733501369977},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/abstract.info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AbstractInfoStrategy","getLengthSafe"],"duration":2,"failureMessages":[],"fullName":"AbstractInfoStrategy getLengthSafe should get length","status":"passed","title":"should get length"},{"ancestorTitles":["AbstractInfoStrategy","getLengthSafe"],"duration":1,"failureMessages":[],"fullName":"AbstractInfoStrategy getLengthSafe should return null in case of error","status":"passed","title":"should return null in case of error"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501371198,"runtime":529,"slow":false,"start":1733501370669},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/redis-version.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RedisVersionStrategy","isRecommendationReached","with search module"],"duration":2,"failureMessages":[],"fullName":"RedisVersionStrategy isRecommendationReached with search module should return false when version is more then 7.3","status":"passed","title":"should return false when version is more then 7.3"},{"ancestorTitles":["RedisVersionStrategy","isRecommendationReached","with search module"],"duration":1,"failureMessages":[],"fullName":"RedisVersionStrategy isRecommendationReached with search module should return false when version is equal to 7.3","status":"passed","title":"should return false when version is equal to 7.3"},{"ancestorTitles":["RedisVersionStrategy","isRecommendationReached","with search module"],"duration":1,"failureMessages":[],"fullName":"RedisVersionStrategy isRecommendationReached with search module should return true when version less then 7.3","status":"passed","title":"should return true when version less then 7.3"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501372207,"runtime":450,"slow":false,"start":1733501371757},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/search-visualization.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: test (command), should be output: { isReached: false }","status":"passed","title":"for input: test (command), should be output: { isReached: false }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: info (command), should be output: { isReached: false }","status":"passed","title":"for input: info (command), should be output: { isReached: false }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: 123 (command), should be output: { isReached: false }","status":"passed","title":"for input: 123 (command), should be output: { isReached: false }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":6,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: aoeutaoheu (command), should be output: { isReached: false }","status":"passed","title":"for input: aoeutaoheu (command), should be output: { isReached: false }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: ft.search (command), should be output: { isReached: true }","status":"passed","title":"for input: ft.search (command), should be output: { isReached: true }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: FT.Search (command), should be output: { isReached: true }","status":"passed","title":"for input: FT.Search (command), should be output: { isReached: true }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: FT.INFO test 123 (command), should be output: { isReached: true }","status":"passed","title":"for input: FT.INFO test 123 (command), should be output: { isReached: true }"},{"ancestorTitles":["SearchVisualizationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"SearchVisualizationStrategy isRecommendationReached for input: FT.PROFILE 123 (command), should be output: { isReached: true }","status":"passed","title":"for input: FT.PROFILE 123 (command), should be output: { isReached: true }"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501372393,"runtime":122,"slow":false,"start":1733501372271},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/auth/window-auth/window-auth.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["WindowAuthService"],"duration":1,"failureMessages":[],"fullName":"WindowAuthService Should set strategy to window auth service and call it","status":"passed","title":"Should set strategy to window auth service and call it"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501372571,"runtime":175,"slow":false,"start":1733501372396},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/bulk-actions/models/bulk-action-filter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BulkActionSummary","getScanArgsArray"],"duration":0,"failureMessages":[],"fullName":"BulkActionSummary getScanArgsArray should get arguments for scan without type","status":"passed","title":"should get arguments for scan without type"},{"ancestorTitles":["BulkActionSummary","getScanArgsArray"],"duration":0,"failureMessages":[],"fullName":"BulkActionSummary getScanArgsArray should get arguments for scan with type","status":"passed","title":"should get arguments for scan with type"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501373121,"runtime":499,"slow":false,"start":1733501372622},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/ts-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TsInfoStrategy","getLength"],"duration":3,"failureMessages":[],"fullName":"TsInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501373808,"runtime":506,"slow":false,"start":1733501373302},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/profiler/emitters/client.logs-emiter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ClientLogsEmitter"],"duration":1,"failureMessages":[],"fullName":"ClientLogsEmitter Initialization","status":"passed","title":"Initialization"},{"ancestorTitles":["ClientLogsEmitter"],"duration":0,"failureMessages":[],"fullName":"ClientLogsEmitter Emit","status":"passed","title":"Emit"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501375229,"runtime":1182,"slow":false,"start":1733501374047},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/graph-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["GraphInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"GraphInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501375752,"runtime":340,"slow":false,"start":1733501375412},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/avoid-logical-databases.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AvoidLogicalDatabasesStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"AvoidLogicalDatabasesStrategy isRecommendationReached should return false when database index was not changed","status":"passed","title":"should return false when database index was not changed"},{"ancestorTitles":["AvoidLogicalDatabasesStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"AvoidLogicalDatabasesStrategy isRecommendationReached should return true when database index was changed","status":"passed","title":"should return true when database index was changed"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501376155,"runtime":337,"slow":false,"start":1733501375818},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/shard-hash.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ShardHashStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"ShardHashStrategy isRecommendationReached should return false when hash length < 5_000","status":"passed","title":"should return false when hash length < 5_000"},{"ancestorTitles":["ShardHashStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"ShardHashStrategy isRecommendationReached should return true when hash length > 5_000","status":"passed","title":"should return true when hash length > 5_000"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501376723,"runtime":499,"slow":false,"start":1733501376224},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/hash-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["HashInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"HashInfoStrategy getLength should scan standalone database","status":"passed","title":"should scan standalone database"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501377900,"runtime":958,"slow":false,"start":1733501376942},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/avoid-lua-scripts.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AvoidLuaScriptsStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"AvoidLuaScriptsStrategy isRecommendationReached should return false when number_of_cached_scripts less then 10","status":"passed","title":"should return false when number_of_cached_scripts less then 10"},{"ancestorTitles":["AvoidLuaScriptsStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"AvoidLuaScriptsStrategy isRecommendationReached should return true when number_of_cached_scripts more then 10","status":"passed","title":"should return true when number_of_cached_scripts more then 10"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501378530,"runtime":507,"slow":false,"start":1733501378023},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/string-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StringInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"StringInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501379200,"runtime":494,"slow":false,"start":1733501378706},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/stream-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StreamInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"StreamInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501380186,"runtime":816,"slow":false,"start":1733501379370},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/z-set-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ZSetInfoStrategy","getLength"],"duration":4,"failureMessages":[],"fullName":"ZSetInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501381279,"runtime":509,"slow":false,"start":1733501380770},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/list-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ListInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"ListInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501381967,"runtime":516,"slow":false,"start":1733501381451},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/set-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SetInfoStrategy","getLength"],"duration":2,"failureMessages":[],"fullName":"SetInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501382963,"runtime":774,"slow":false,"start":1733501382189},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/utils/path.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["winPathToNormalPath"],"duration":2,"failureMessages":[],"fullName":"winPathToNormalPath should be output: /dir/file.js for input: \"\\\\dir/file.js\"","status":"passed","title":"should be output: /dir/file.js for input: \"\\\\dir/file.js\""},{"ancestorTitles":["winPathToNormalPath"],"duration":1,"failureMessages":[],"fullName":"winPathToNormalPath should be output: /dir/file.js for input: \"/dir/file.js\"","status":"passed","title":"should be output: /dir/file.js for input: \"/dir/file.js\""},{"ancestorTitles":["winPathToNormalPath"],"duration":0,"failureMessages":[],"fullName":"winPathToNormalPath should be output: file.js for input: \"file.js\"","status":"passed","title":"should be output: file.js for input: \"file.js\""},{"ancestorTitles":["winPathToNormalPath"],"duration":0,"failureMessages":[],"fullName":"winPathToNormalPath should be output: /file.js for input: \"\\\\file.js\"","status":"passed","title":"should be output: /file.js for input: \"\\\\file.js\""},{"ancestorTitles":["winPathToNormalPath"],"duration":1,"failureMessages":[],"fullName":"winPathToNormalPath should be output: /dir/file.js for input: \"\\\\dir\\\\file.js\"","status":"passed","title":"should be output: /dir/file.js for input: \"\\\\dir\\\\file.js\""},{"ancestorTitles":["winPathToNormalPath"],"duration":0,"failureMessages":[],"fullName":"winPathToNormalPath should be output: dir/file.js for input: \"dir/file.js\"","status":"passed","title":"should be output: dir/file.js for input: \"dir/file.js\""}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501383600,"runtime":430,"slow":false,"start":1733501383170},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/use-smaller-keys.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UseSmallerKeysStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"UseSmallerKeysStrategy isRecommendationReached should return false when database total less than 1_000_000","status":"passed","title":"should return false when database total less than 1_000_000"},{"ancestorTitles":["UseSmallerKeysStrategy","isRecommendationReached"],"duration":1,"failureMessages":[],"fullName":"UseSmallerKeysStrategy isRecommendationReached should return false when database total more than 1_000_000","status":"passed","title":"should return false when database total more than 1_000_000"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501383750,"runtime":81,"slow":false,"start":1733501383669},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/user/utils/token.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["isValidToken"],"duration":0,"failureMessages":[],"fullName":"isValidToken should return false if no token has been provided","status":"passed","title":"should return false if no token has been provided"},{"ancestorTitles":["isValidToken"],"duration":1,"failureMessages":[],"fullName":"isValidToken should be falsy if token has been expired","status":"passed","title":"should be falsy if token has been expired"},{"ancestorTitles":["isValidToken"],"duration":1,"failureMessages":[],"fullName":"isValidToken should return true if token has not been expired","status":"passed","title":"should return true if token has not been expired"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501383826,"runtime":67,"slow":false,"start":1733501383759},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/redis-enterprise/utils/redis-enterprise-converter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["convertRedisCloudModuleName"],"duration":1,"failureMessages":[],"fullName":"convertRedisCloudModuleName should return exist module name","status":"passed","title":"should return exist module name"},{"ancestorTitles":["convertRedisCloudModuleName"],"duration":0,"failureMessages":[],"fullName":"convertRedisCloudModuleName should return non-exist module name","status":"passed","title":"should return non-exist module name"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501383982,"runtime":150,"slow":false,"start":1733501383832},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cloud/database/utils/cloud-data-converter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["convertRedisCloudModuleName"],"duration":1,"failureMessages":[],"fullName":"convertRedisCloudModuleName should return exist module name","status":"passed","title":"should return exist module name"},{"ancestorTitles":["convertRedisCloudModuleName"],"duration":0,"failureMessages":[],"fullName":"convertRedisCloudModuleName should return non-exist module name","status":"passed","title":"should return non-exist module name"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501384333,"runtime":336,"slow":false,"start":1733501383997},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/abstract.recommendation.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AbstractRecommendationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"AbstractRecommendationStrategy isRecommendationReached should get is recommendation reached","status":"passed","title":"should get is recommendation reached"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501384762,"runtime":355,"slow":false,"start":1733501384407},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-recommendation/scanner/strategies/default.recommendation.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DefaultRecommendationStrategy","isRecommendationReached"],"duration":0,"failureMessages":[],"fullName":"DefaultRecommendationStrategy isRecommendationReached should get is recommendation reached","status":"passed","title":"should get is recommendation reached"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501384865,"runtime":36,"slow":false,"start":1733501384829},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/dto/dto-transformer.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["pickDefinedAgreements"],"duration":1,"failureMessages":[],"fullName":"pickDefinedAgreements should pick only agreements that defined in specification","status":"passed","title":"should pick only agreements that defined in specification"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501384937,"runtime":69,"slow":false,"start":1733501384868},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/workbench/utils/getUnsupportedCommands.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["workbench unsupported commands"],"duration":1,"failureMessages":[],"fullName":"workbench unsupported commands should return correct list","status":"passed","title":"should return correct list"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501384972,"runtime":25,"slow":false,"start":1733501384947},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/database-analysis/scanner/key-info/strategies/default-info.strategy.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DefaultInfoStrategy","getLength"],"duration":1,"failureMessages":[],"fullName":"DefaultInfoStrategy getLength should get length","status":"passed","title":"should get length"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1733501385043,"runtime":68,"slow":false,"start":1733501384975},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/cli/utils/getUnsupportedCommands.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["cli unsupported commands"],"duration":0,"failureMessages":[],"fullName":"cli unsupported commands should return correct list","status":"passed","title":"should return correct list"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":1,"numTodoTests":0,"perfStats":{"end":1733501385074,"runtime":22,"slow":false,"start":1733501385052},"testFilePath":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src/modules/browser/utils/checkKeyExistsing.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":[""],"duration":null,"failureMessages":[],"fullName":" should ","status":"pending","title":"should "}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":true,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/node_modules/jest-html-reporters/index.js",{"publicPath":"./report","filename":"index.html"}]],"rootDir":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/src","runTestsByPath":false,"seed":-1443035417,"silent":true,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/home/runner/work/RedisInsight/RedisInsight/redisinsight/api/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"none","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"../coverage/lcov-report/index.html"},"endTime":1733501385086,"_reporterOptions":{"publicPath":"./report","filename":"index.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})